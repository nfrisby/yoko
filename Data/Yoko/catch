[ 1 of 11] Compiling Data.Yoko.MinCtors.MMap ( Data/Yoko/MinCtors/MMap.hs, Data/Yoko/MinCtors/MMap.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 306, types: 854, coercions: 215}

empty
empty = (\ @ k_t1r @ f_t1s @ v_t1t -> Tip) `cast` ...

$wfoldMap
$wfoldMap =
  \ @ k_aJX
    @ f_aJY
    @ v_aJZ
    @ m_aK0
    ww_s17m
    ww1_s17n
    w_s17q
    w1_s17r ->
    letrec {
      go_a16W
      go_a16W =
        \ ds_a16X ->
          case ds_a16X of _ {
            [] -> ww_s17m;
            : y_a172 ys_a173 ->
              ww1_s17n (uncurry w_s17q y_a172) (go_a16W ys_a173)
          }; } in
    go_a16W ($fDataMap_go ([]) (w1_s17r `cast` ...))

foldMap
foldMap =
  \ @ k_aJX @ f_aJY @ v_aJZ @ m_aK0 w_s17k w1_s17q w2_s17r ->
    case w_s17k of _ { D:Monoid ww_s17m ww1_s17n ww2_s17o ->
    $wfoldMap ww_s17m ww1_s17n w1_s17q w2_s17r
    }

lookup
lookup =
  \ @ k_tN @ f_tO @ v_tP $dOrd_aOZ k_aKf ds_dRg ->
    lookup $dOrd_aOZ k_aKf (ds_dRg `cast` ...)

map1
map1 =
  \ @ t_aQc @ t1_aQd @ k_aQe @ f_aQf @ v_aQg f_aK4 ds_dRk ->
    map f_aK4 (ds_dRk `cast` ...)

map
map = map1 `cast` ...

mapWithMonoKeys1
mapWithMonoKeys1 =
  \ @ k_t14
    @ k1_t15
    @ f_t16
    @ v_t17
    @ g_t18
    @ v1_t19
    fk_aKc
    fv_aKd
    ds_dRh ->
    mapKeysMonotonic fk_aKc (map fv_aKd (ds_dRh `cast` ...))

mapWithMonoKeys
mapWithMonoKeys = mapWithMonoKeys1 `cast` ...

null
null = (\ @ t_aPM @ t1_aPN @ k_aPO -> null) `cast` ...

singleton1
singleton1 =
  \ @ k_aPZ @ f_aQ0 @ v_aQ1 k_aK6 v_aK7 -> singleton k_aK6 v_aK7

singleton
singleton = singleton1 `cast` ...

unMMap1
unMMap1 = \ @ k_j @ f_k @ v_l ds_dRl -> ds_dRl

unMMap
unMMap = unMMap1 `cast` ...

$fMonoidMMap_$cmappend
$fMonoidMMap_$cmappend =
  \ @ k_aKh
    @ f_aKi
    @ v_aKj
    $dOrd_aQN
    $dSemigroup_aQO
    ds_dRq
    ds1_dRr ->
    let {
      f_aVj
      f_aVj = <> $dSemigroup_aQO } in
    (unionWithKey
       $dOrd_aQN
       (\ _ x_aVp y_aVq -> f_aVj x_aVp y_aVq)
       (ds_dRq `cast` ...)
       (ds1_dRr `cast` ...))
    `cast` ...

$fMonoidMMap1
$fMonoidMMap1 = \ @ k_aKh @ f_aKi @ v_aKj _ _ -> Tip

$fMonoidMMap_$cmempty
$fMonoidMMap_$cmempty = $fMonoidMMap1 `cast` ...

$fMonoidMMap_$cmconcat
$fMonoidMMap_$cmconcat =
  \ @ k_XKX @ f_XKZ @ v_XL1 $dOrd_XRw $dSemigroup_XRy eta_B1 ->
    letrec {
      go_a113
      go_a113 =
        \ ds_a114 ->
          case ds_a114 of _ {
            [] -> (Tip) `cast` ...;
            : y_a119 ys_a11a ->
              $fMonoidMMap_$cmappend
                $dOrd_XRw $dSemigroup_XRy y_a119 (go_a113 ys_a11a)
          }; } in
    go_a113 eta_B1

$fMonoidMMap
$fMonoidMMap =
  \ @ k_XKW @ f_XKY @ v_XL0 $dOrd_XRv $dSemigroup_XRx ->
    D:Monoid
      ((Tip) `cast` ...)
      ($fMonoidMMap_$cmappend $dOrd_XRv $dSemigroup_XRx)
      ($fMonoidMMap_$cmconcat $dOrd_XRv $dSemigroup_XRx)

$fEqMMap1
$fEqMMap1 = \ @ k_aOf @ f_aOg @ v_aOh $dEq_aQF -> /= $dEq_aQF

$fEqMMap_$c/=
$fEqMMap_$c/= = $fEqMMap1 `cast` ...

$fEqMMap2
$fEqMMap2 = \ @ k_XP2 @ f_XP4 @ v_XP6 $dEq_XRv -> == $dEq_XRv

$fEqMMap_$c==
$fEqMMap_$c== = $fEqMMap2 `cast` ...

$fEqMMap
$fEqMMap =
  \ @ k_XP8 @ f_XPa @ v_XPc $dEq_XRB ->
    D:Eq ((== $dEq_XRB) `cast` ...) ((/= $dEq_XRB) `cast` ...)

$fShowMMap3
$fShowMMap3 = unpackCString# "MMap {"

$fShowMMap2
$fShowMMap2 = unpackCString# "unMMap = "

$fShowMMap4
$fShowMMap4 = I# 0

$fShowMMap1
$fShowMMap1 = C# '}'

$w$cshowsPrec
$w$cshowsPrec =
  \ @ k_aKm @ f_aKn @ v_aKo w_s17w ww_s17z w1_s17B ->
    let {
      f_X15t
      f_X15t = showsPrec w_s17w $fShowMMap4 (w1_s17B `cast` ...) } in
    let {
      p_a11H
      p_a11H =
        \ x_X13T ->
          ++
            $fShowMMap3 (++ $fShowMMap2 (f_X15t (: $fShowMMap1 x_X13T))) } in
    case >=# ww_s17z 11 of _ {
      False -> p_a11H;
      True -> \ x_a11M -> : shows11 (p_a11H (: shows10 x_a11M))
    }

$fShowMMap_$cshowsPrec
$fShowMMap_$cshowsPrec =
  \ @ k_aKm @ f_aKn @ v_aKo w_s17w w1_s17x w2_s17B ->
    case w1_s17x of _ { I# ww_s17z ->
    $w$cshowsPrec w_s17w ww_s17z w2_s17B
    }

$fShowMMap_$cshowList
$fShowMMap_$cshowList =
  \ @ k_aKm @ f_aKn @ v_aKo $dShow_aQk eta_B2 eta1_B1 ->
    showList__
      (\ w_s17B -> $w$cshowsPrec $dShow_aQk 0 w_s17B) eta_B2 eta1_B1

$fShowMMap_$cshow
$fShowMMap_$cshow =
  \ @ k_aKm @ f_aKn @ v_aKo $dShow_aQk x_a12A ->
    $w$cshowsPrec $dShow_aQk 0 x_a12A ([])

$fShowMMap
$fShowMMap =
  \ @ k_aKm @ f_aKn @ v_aKo $dShow_aQk ->
    D:Show
      ($fShowMMap_$cshowsPrec $dShow_aQk)
      ($fShowMMap_$cshow $dShow_aQk)
      ($fShowMMap_$cshowList $dShow_aQk)



[ 2 of 11] Compiling Data.Yoko.TH.Internal ( Data/Yoko/TH/Internal.hs, Data/Yoko/TH/Internal.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 385, types: 572, coercions: 26}

dataType2Dec
dataType2Dec =
  \ n_a26r ds_d2aU ->
    case ds_d2aU of _ { DataType tvbs_a26s cons_a26t ->
    case cons_a26t of _ {
      Left con_a26u -> NewtypeD ([]) n_a26r tvbs_a26s con_a26u ([]);
      Right cons1_a26v -> DataD ([]) n_a26r tvbs_a26s cons1_a26v ([])
    }
    }

Rec {
$wpeelAppAcc
$wpeelAppAcc =
  \ w_s2qK w1_s2qL ->
    case w1_s2qL of wild_Xd {
      __DEFAULT -> (# wild_Xd, w_s2qK #);
      AppT ty0_a26z ty1_a26A -> $wpeelAppAcc (: ty1_a26A w_s2qK) ty0_a26z
    }
end Rec }

peelAppAcc
peelAppAcc =
  \ w_s2qK w1_s2qL ->
    case $wpeelAppAcc w_s2qK w1_s2qL of _ { (# ww1_s2rt, ww2_s2ru #) ->
    (ww1_s2rt, ww2_s2ru)
    }

peelApp
peelApp =
  \ w_s2qL ->
    case $wpeelAppAcc ([]) w_s2qL of _ { (# ww1_s2rt, ww2_s2ru #) ->
    (ww1_s2rt, ww2_s2ru)
    }

thWarn
thWarn =
  \ s_a26g ->
    let {
      s1_a2fu
      s1_a2fu = unpackAppendCString# "yokoTH: " s_a26g } in
    (\ @ m_a2fv $dQuasi_a2fw -> qReport $dQuasi_a2fw False s1_a2fu)
    `cast` ...

tvbName
tvbName =
  \ ds_d2aq ->
    case ds_d2aq of _ {
      PlainTV n_a26w -> n_a26w;
      KindedTV n_a26x ds1_d2ar -> n_a26x
    }

Rec {
msubst
msubst =
  \ sigma_a26J eta_B1 ->
    letrec {
      w_s2f3
      w_s2f3 =
        \ ty_a26L ->
          case ty_a26L of wild_Xi {
            __DEFAULT -> wild_Xi;
            ForallT tvbs_a26N cxt_a26O ty1_a26P ->
              ForallT
                tvbs_a26N
                cxt_a26O
                (msubst
                   (filter
                      (let {
                         ds_s2f5
                         ds_s2f5 = map tvbName tvbs_a26N } in
                       \ x_a123 ->
                         elem
                           $fEqName
                           (case x_a123 of _ { (x1_a2bS, ds1_a2bT) -> x1_a2bS })
                           ds_s2f5)
                      sigma_a26J)
                   ty1_a26P);
            AppT ty1_a26R ty2_a26S -> AppT (w_s2f3 ty1_a26R) (w_s2f3 ty2_a26S);
            SigT ty1_a26T k_a26U -> SigT (w_s2f3 ty1_a26T) k_a26U;
            VarT n_a26M ->
              case lookup $fEqName n_a26M sigma_a26J of _ {
                Nothing -> wild_Xi;
                Just v_a2cr -> v_a2cr
              }
          }; } in
    w_s2f3 eta_B1
end Rec }

thFail1
thFail1 =
  \ @ a_k s_a26f ->
    let {
      w_a2pF
      w_a2pF = unpackAppendCString# "yokoTH: " s_a26f } in
    \ @ m_a2cC w1_a2pG ->
      case w1_a2pG
      of _
      { D:Quasi ww_a2pI
                ww1_a2pJ
                ww2_a2pK
                ww3_a2pL
                ww4_a2pM
                ww5_a2pN
                ww6_a2pO
                ww7_a2pP
                ww8_a2pQ
                ww9_a2pR
                ww10_a2pS ->
      $wa1 w_a2pF ww_a2pI ww3_a2pL
      }

thFail
thFail = thFail1 `cast` ...

a_r2uk
a_r2uk =
  \ tvb_a26k ->
    case tvb_a26k of wild_Xl {
      PlainTV n_a26l -> KindedTV n_a26l StarT;
      KindedTV ipv_s2cH ipv1_s2cI -> wild_Xl
    }

$wa
$wa =
  \ w_s2qQ @ m_a2cY ww_s2qT ww1_s2qW ww2_s2qZ ->
    let {
      lvl_s2tg
      lvl_s2tg = return ww_s2qT } in
    let {
      lvl1_s2td
      lvl1_s2td = fail ww_s2qT $fMonadQ2 } in
    let {
      lvl2_s2tc
      lvl2_s2tc = >> ww_s2qT } in
    >>=
      ww_s2qT
      (ww2_s2qZ w_s2qQ)
      (\ x_a2mY ->
         case x_a2mY of wild_Xl {
           __DEFAULT ->
             lvl2_s2tc
               (ww1_s2qW
                  True
                  (unpackAppendCString#
                     "yokoTH: "
                     (unpackAppendCString#
                        "expecting name of newtype or data type, not: "
                        ($w$cshowsPrec9 0 wild_Xl ([])))))
               lvl1_s2td;
           TyConI d_a26m ->
             case d_a26m of wild1_Xd {
               __DEFAULT ->
                 lvl2_s2tc
                   (ww1_s2qW
                      True
                      (unpackAppendCString#
                         "yokoTH: "
                         (unpackAppendCString#
                            "expecting name of newtype or data type, not: "
                            ($w$cshowsPrec4 0 wild1_Xd ([])))))
                   lvl1_s2td;
               DataD ds_d2b0 ds1_d2b1 tvbs_a26n cons_a26o ds2_d2b2 ->
                 lvl_s2tg (DataType (map a_r2uk tvbs_a26n) (Right cons_a26o));
               NewtypeD ds_d2aX ds1_d2aY tvbs_a26p con_a26q ds2_d2aZ ->
                 lvl_s2tg (DataType (map a_r2uk tvbs_a26p) (Left con_a26q))
             }
         })

dataType1
dataType1 =
  \ w_s2qQ @ m_a2cY w1_s2qR ->
    case w1_s2qR
    of _
    { D:Quasi ww_s2qT
              ww1_s2qU
              ww2_s2qV
              ww3_s2qW
              ww4_s2qX
              ww5_s2qY
              ww6_s2qZ
              ww7_s2r0
              ww8_s2r1
              ww9_s2r2
              ww10_s2r3 ->
    $wa w_s2qQ ww_s2qT ww3_s2qW ww6_s2qZ
    }

dataType
dataType = dataType1 `cast` ...

Rec {
$wa1
$wa1 =
  \ w_s2r9 w1_s2ra @ m_a2cY ww_s2rd ww1_s2re ww2_s2rj ->
    let {
      lvl_s2ti
      lvl_s2ti = return ww_s2rd (Nothing) } in
    case w_s2r9 of _ {
      __DEFAULT -> lvl_s2ti;
      ConT n_a26D ->
        let {
          a1_s2tH
          a1_s2tH = $p1Applicative ww1_s2re } in
        let {
          lvl1_s2tk
          lvl1_s2tk = fmap a1_s2tH } in
        >>=
          ww_s2rd
          (ww2_s2rj n_a26D)
          (\ x_a2mY ->
             case x_a2mY of _ {
               __DEFAULT -> lvl_s2ti;
               TyConI ds_d2aF ->
                 case ds_d2aF of _ {
                   __DEFAULT -> lvl_s2ti;
                   TySynD ds1_d2aG ds2_d2aH rhs_a26H ->
                     let {
                       tytys_s2eY
                       tytys_s2eY =
                         let {
                           formals_s2eZ
                           formals_s2eZ = map tvbName ds2_d2aH } in
                         case $wpeelAppAcc
                                (case $wlen formals_s2eZ 0 of ww3_a2qe { __DEFAULT ->
                                 case <# ww3_a2qe 0 of _ {
                                   False -> drop_drop# ww3_a2qe w1_s2ra;
                                   True -> w1_s2ra
                                 }
                                 })
                                (msubst (zip formals_s2eZ w1_s2ra) rhs_a26H)
                         of _ { (# ww4_s2rt, ww5_s2ru #) ->
                         (ww4_s2rt, ww5_s2ru)
                         } } in
                     let {
                       ds3_s2eX
                       ds3_s2eX = Just tytys_s2eY } in
                     lvl1_s2tk
                       (\ ds4_d2aC ->
                          case ds4_d2aC of wild3_a2eg {
                            Nothing -> ds3_s2eX;
                            Just ipv_a2ek -> wild3_a2eg
                          })
                       (case tytys_s2eY of _ { (x1_aUm, ds4_aUn) ->
                        $wa1 x1_aUm ds4_aUn ww_s2rd ww1_s2re ww2_s2rj
                        })
                 }
             })
    }
end Rec }

expandSyn1
expandSyn1 =
  \ w_s2r9 w1_s2ra @ m_a2cY w2_s2rb ->
    case w2_s2rb
    of _
    { D:Quasi ww_s2rd
              ww1_s2re
              ww2_s2rf
              ww3_s2rg
              ww4_s2rh
              ww5_s2ri
              ww6_s2rj
              ww7_s2rk
              ww8_s2rl
              ww9_s2rm
              ww10_s2rn ->
    $wa1 w_s2r9 w1_s2ra ww_s2rd ww1_s2re ww6_s2rj
    }

expandSyn
expandSyn = expandSyn1 `cast` ...



[ 3 of 11] Compiling Data.Yoko.MaybeKind ( Data/Yoko/MaybeKind.hs, Data/Yoko/MaybeKind.o )

==================== Tidy Core ====================
Result size of Tidy Core = {terms: 0, types: 0, coercions: 0}



[ 4 of 11] Compiling Data.Yoko.TypeBasics ( Data/Yoko/TypeBasics.hs, Data/Yoko/TypeBasics.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 2,376, types: 9,65, coercions: 1,451}

vZip
vZip = \ @ k_a7YD @ ts_a7UH tpl_B1 -> tpl_B1 `cast` ...

cvRepeat
cvRepeat = \ @ k_a7YQ @ ts_a7UO tpl_B1 -> tpl_B1 `cast` ...

vInitialize
vInitialize =
  \ @ k_a7YU @ c_a7Us @ ts_a7Ut tpl_B1 ->
    case tpl_B1 of _ { D:VInitialize tpl_B2 _ -> tpl_B2 }

cvInitialize
cvInitialize =
  \ @ k_a7YU @ c_a7Us @ ts_a7Ut tpl_B1 ->
    case tpl_B1 of _ { D:VInitialize _ tpl_B3 -> tpl_B3 }

vMap
vMap = \ @ k_a7YH @ c_a7UT @ ts_a7UU tpl_B1 -> tpl_B1 `cast` ...

cvEnum
cvEnum = \ @ k_a7YY @ ts_a7Uy tpl_B1 -> tpl_B1 `cast` ...

indexInto
indexInto =
  \ @ k_a7Yi @ n_a7UA @ ts_a7UB tpl_B1 -> tpl_B1 `cast` ...

$WVNil
$WVNil = \ @ k_a7Yy @ f_a7UZ -> VNil @~ <'[] k_a7Yy>

$WVCons
$WVCons =
  \ @ k_a7Yz @ f_a7V0 @ t_a7V1 @ ts_a7V2 tpl_B1 tpl_B2 ->
    VCons @~ <(':) k_a7Yz t_a7V1 ts_a7V2> tpl_B1 tpl_B2

$WSZ
$WSZ = SZ @~ <'Z>

$WSN
$WSN = \ @ n_a7Vg tpl_B1 -> SN @~ <'S n_a7Vg> tpl_B1

$WZIdx
$WZIdx =
  \ @ k_a7Y6 @ t_a7UD @ ts_a7UE ->
    ZIdx @~ <(':) k_a7Y6 t_a7UD ts_a7UE>

$WSIdx
$WSIdx =
  \ @ k_a7Y7 @ ts_a7UF @ t_a7UG tpl_B1 ->
    SIdx @~ <(':) k_a7Y7 t_a7UG ts_a7UF> tpl_B1

lvl_r9kT
lvl_r9kT =
  \ @ a_t8o ->
    patError "Data/Yoko/TypeBasics.hs:(206,3)-(207,38)|function w"

Rec {
cvAt1
cvAt1 =
  \ @ a_t8o @ k_t9z @ ts_t9A ds_d8gv ds1_d8gw ->
    case ds_d8gv of _ {
      ZIdx @ t_a81M @ ts1_a81N rb_d8qC ->
        case ds1_d8gw of _ {
          VNil ipv_s8qJ -> lvl_r9kT;
          VCons @ t1_a81P @ ts2_a81Q rb1_d8qA a_a7VO ds2_d8gx ->
            a_a7VO `cast` ...
        };
      SIdx @ ts1_a81V @ t_a81W rb_d8qu idx_a7VP ->
        case ds1_d8gw of _ {
          VNil ipv_s8qM -> lvl_r9kT;
          VCons @ t1_a81Y @ ts2_a81Z rb1_d8qs ds2_d8gD as_a7VQ ->
            cvAt1 idx_a7VP (as_a7VQ `cast` ...)
        }
    }
end Rec }

cvAt
cvAt =
  \ @ k_t8m @ ts_t8n @ a_t8o ds_d8gs eta_B1 ->
    cvAt1 eta_B1 (ds_d8gs `cast` ...)

cvUpd1
cvUpd1 =
  \ @ k_t9b @ a_t8f @ ts_t9c ->
    patError "Data/Yoko/TypeBasics.hs:(212,3)-(213,48)|function w"

cvUpd
cvUpd =
  \ @ k_t8d @ ts_t8e @ a_t8f ds_d8fJ idx_a7VS f_a7VT ->
    letrec {
      w_s8zV
      w_s8zV =
        \ @ k1_t9b @ ts1_t9c ds1_d8fQ ds2_d8fR ->
          case ds1_d8fQ of _ {
            ZIdx @ t_a81l @ ts2_a81m rb_d8qa ->
              case ds2_d8fR of _ {
                VNil ipv_s8qW -> cvUpd1;
                VCons @ t1_a81o @ ts3_a81p rb1_d8q8 a_a7VW as_a7VX ->
                  (VCons
                     @~ <(':) k1_t9b t1_a81o ts3_a81p>
                     ((f_a7VT (a_a7VW `cast` ...)) `cast` ...)
                     as_a7VX)
                  `cast` ...
              };
            SIdx @ ts2_a81w @ t_a81x rb_d8pM idx1_a7VY ->
              case ds2_d8fR of _ {
                VNil ipv_s8qZ -> cvUpd1;
                VCons @ t1_a81z @ ts3_a81A rb1_d8pK a_a7VZ as_a7W0 ->
                  (VCons
                     @~ <(':) k1_t9b t1_a81z ts2_a81w>
                     a_a7VZ
                     (w_s8zV idx1_a7VY (as_a7W0 `cast` ...)))
                  `cast` ...
              }
          }; } in
    (w_s8zV idx_a7VS (ds_d8fJ `cast` ...)) `cast` ...

cvZipWith1
cvZipWith1 =
  \ @ k_t9V @ c_t8C @ ts_t9W ->
    patError "Data/Yoko/TypeBasics.hs:(172,3)-(173,55)|function w"

cvZipWith
cvZipWith =
  \ @ k_t8z
    @ a_t8A
    @ b_t8B
    @ c_t8C
    @ ts_t8D
    f_a7VC
    ds_d8gO
    ds1_d8gP ->
    letrec {
      w_s8zR
      w_s8zR =
        \ @ k1_t9V @ ts1_t9W ds2_d8gW ds3_d8gX ->
          case ds2_d8gW of _ {
            VNil rb_d8pE ->
              case ds3_d8gX of _ {
                VNil rb1_d8pC -> ($WVNil) `cast` ...;
                VCons @ ipv0_s8r3 @ ipv1_s8r4 ipv_s8r5 ipv1_s8r6 ipv2_s8r7 ->
                  cvZipWith1
              };
            VCons @ t_a82h @ ts2_a82i rb_d8pe a_a7VH as_a7VI ->
              case ds3_d8gX of _ {
                VNil ipv_s8ra -> cvZipWith1;
                VCons @ t1_a82k @ ts3_a82l rb1_d8pc b_a7VJ bs_a7VK ->
                  (VCons
                     @~ <(':) k1_t9V t1_a82k ts2_a82i>
                     ((f_a7VC (a_a7VH `cast` ...) (b_a7VJ `cast` ...)) `cast` ...)
                     (w_s8zR as_a7VI (bs_a7VK `cast` ...)))
                  `cast` ...
              }
          }; } in
    (w_s8zR (ds_d8gO `cast` ...) (ds1_d8gP `cast` ...)) `cast` ...

Rec {
cvAddIndexes2
cvAddIndexes2 =
  \ @ k_t82 @ ts_t83 @ a_t84 @ k1_t9V @ ts1_t9W ds_d8gW ds1_d8gX ->
    case ds_d8gW of _ {
      VNil rb_d8pE ->
        case ds1_d8gX of _ {
          VNil rb1_d8pC -> ($WVNil) `cast` ...;
          VCons @ ipv0_s8r3 @ ipv1_s8r4 ipv_s8r5 ipv1_s8r6 ipv2_s8r7 ->
            cvZipWith1
        };
      VCons @ t_a82h @ ts2_a82i rb_d8pe a_a7VH as_a7VI ->
        case ds1_d8gX of _ {
          VNil ipv_s8ra -> cvZipWith1;
          VCons @ t1_a82k @ ts3_a82l rb1_d8pc b_a7VJ bs_a7VK ->
            (VCons
               @~ <(':) k1_t9V t1_a82k ts2_a82i>
               ((a_a7VH `cast` ..., b_a7VJ `cast` ...) `cast` ...)
               (cvAddIndexes2 as_a7VI (bs_a7VK `cast` ...)))
            `cast` ...
        }
    }
end Rec }

cvAddIndexes1
cvAddIndexes1 =
  \ @ k_t82 @ ts_t83 @ a_t84 $dVEnum_a82w eta_B1 ->
    cvAddIndexes2 ($dVEnum_a82w `cast` ...) (eta_B1 `cast` ...)

cvAddIndexes
cvAddIndexes = cvAddIndexes1 `cast` ...

derive_data1
derive_data1 =
  \ n_a7Vy @ m_a2cY eta_X31 ->
    let {
      lvl12_s9g8
      lvl12_s9g8 =
        case n_a7Vy of _ { Name ww_a8rt ww1_a8ru ->
        $w$sserializeTypeAsHash_ ConT ww_a8rt ww1_a8ru eta_X31
        } } in
    let {
      a_s9gP
      a_s9gP = $p2Quasi eta_X31 } in
    let {
      a1_s9gQ
      a1_s9gQ = $p1Applicative a_s9gP } in
    let {
      lvl13_s9g7
      lvl13_s9g7 = fmap a1_s9gQ } in
    >>=
      ($p1Quasi eta_X31)
      (spineType_d1 n_a7Vy eta_X31)
      (\ x_a2mY -> lvl13_s9g7 (++ x_a2mY) lvl12_s9g8)

derive_data
derive_data = derive_data1 `cast` ...

derive_pro1
derive_pro1 =
  \ n_a7VA @ m_a2cY eta_X33 ->
    let {
      lvl12_s9ga
      lvl12_s9ga =
        case n_a7VA of _ { Name ww_a8rA ww1_a8rB ->
        $w$sserializeTypeAsHash_ PromotedT ww_a8rA ww1_a8rB eta_X33
        } } in
    let {
      a_s9gU
      a_s9gU = $p2Quasi eta_X33 } in
    let {
      a1_s9gV
      a1_s9gV = $p1Applicative a_s9gU } in
    let {
      lvl13_s9g9
      lvl13_s9g9 = fmap a1_s9gV } in
    >>=
      ($p1Quasi eta_X33)
      (spineType_pro1 n_a7VA eta_X33)
      (\ x_a2mY -> lvl13_s9g9 (++ x_a2mY) lvl12_s9ga)

derive_pro
derive_pro = derive_pro1 `cast` ...

trivCon
trivCon = \ @ k_t8O -> Proxy

vCarrying
vCarrying = \ @ k_t8X @ f_t8Y @ ts_t8Z _ eta_X38 -> eta_X38

unCVec1
unCVec1 = \ @ k_t2P @ ts_t2Q @ a_t2R ds_d8hp -> ds_d8hp

unCVec
unCVec = unCVec1 `cast` ...

$fTrivConka
$fTrivConka = D:TrivCon

$fEqVec0_$c==
$fEqVec0_$c== = \ @ k_a7Zy @ f_a7Xz _ _ -> True

$fEqVec0_$c/=
$fEqVec0_$c/= = \ @ k_a7Zy @ f_a7Xz _ _ -> False

$fEqVec0
$fEqVec0 =
  \ @ k_a7Zy @ f_a7Xz -> D:Eq ($fEqVec0_$c==) ($fEqVec0_$c/=)

$w$c==
$w$c== =
  \ @ k_a7Zx
    @ t_a7Xs
    @ ts_a7Xt
    @ f_a7Xu
    ww_s97Z
    w_s982
    w1_s983
    w2_s984 ->
    case w1_s983
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv as_a7Xw ->
    case w2_s984
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case ww_s97Z (a_a7Xv `cast` ...) (b_a7Xx `cast` ...) of _ {
      False -> False;
      True -> == (w_s982 `cast` ...) as_a7Xw (bs_a7Xy `cast` ...)
    }
    }
    }

$fEqVec_$c==
$fEqVec_$c== =
  \ @ k_a7Zx
    @ t_a7Xs
    @ ts_a7Xt
    @ f_a7Xu
    w_s97X
    w1_s982
    w2_s983
    w3_s984 ->
    case w_s97X of _ { D:Eq ww_s97Z ww1_s980 ->
    $w$c== ww_s97Z w1_s982 w2_s983 w3_s984
    }

$fEqVec_$c/=
$fEqVec_$c/= =
  \ @ k_a7Zx
    @ t_a7Xs
    @ ts_a7Xt
    @ f_a7Xu
    $dEq_a8ch
    $dEq1_a8ci
    eta_B2
    eta1_X3k ->
    case eta_B2
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv as_a7Xw ->
    case eta1_X3k
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case == $dEq_a8ch (a_a7Xv `cast` ...) (b_a7Xx `cast` ...) of _ {
      False -> True;
      True ->
        case == ($dEq1_a8ci `cast` ...) as_a7Xw (bs_a7Xy `cast` ...) of _ {
          False -> True;
          True -> False
        }
    }
    }
    }

$fEqVec
$fEqVec =
  \ @ k_a7Zx @ t_a7Xs @ ts_a7Xt @ f_a7Xu $dEq_a8ch $dEq1_a8ci ->
    D:Eq
      ($fEqVec_$c== $dEq_a8ch $dEq1_a8ci)
      ($fEqVec_$c/= $dEq_a8ch $dEq1_a8ci)

$fOrdVec0_$ccompare
$fOrdVec0_$ccompare = \ @ k_a7Zw @ f_a7Xr _ _ _ -> EQ

$fOrdVec0_$c<=
$fOrdVec0_$c<= = \ @ k_a7Zw @ f_a7Xr _ _ _ -> True

$fOrdVec0_$cmax
$fOrdVec0_$cmax = \ @ k_a7Zw @ f_a7Xr _ _ y_a8sa -> y_a8sa

$fOrdVec0_$cmin
$fOrdVec0_$cmin = \ @ k_a7Zw @ f_a7Xr _ x_a8rZ _ -> x_a8rZ

$fOrdVec0_$c>
$fOrdVec0_$c> = \ @ k_a7Zw @ f_a7Xr _ _ _ -> False

$fOrdVec0_$c>=
$fOrdVec0_$c>= = $fOrdVec0_$c<=

$fOrdVec0_$c<
$fOrdVec0_$c< = $fOrdVec0_$c>

lvl1_r9kU
lvl1_r9kU = \ @ k_a7Zw @ f_a7Xr _ _ -> EQ

lvl2_r9kV
lvl2_r9kV = \ @ k_a7Zw @ f_a7Xr _ y_a8sa -> y_a8sa

lvl3_r9kW
lvl3_r9kW = \ @ k_a7Zw @ f_a7Xr x_a8rZ _ -> x_a8rZ

$fOrdVec0
$fOrdVec0 =
  \ @ k_a7Zw @ f_a7Xr $dEq_a8bS ->
    D:Ord
      $dEq_a8bS
      (lvl1_r9kU)
      ($fEqVec0_$c/=)
      ($fEqVec0_$c==)
      ($fEqVec0_$c/=)
      ($fEqVec0_$c==)
      (lvl2_r9kV)
      (lvl3_r9kW)

$fOrdVec_$ccompare
$fOrdVec_$ccompare =
  \ @ k_a7Zv
    @ t_a7Xk
    @ ts_a7Xl
    @ f_a7Xm
    _
    $dOrd_a8bf
    $dOrd1_a8bg
    eta_B2
    eta1_X3C ->
    case eta_B2
    of _ { VCons @ t1_a8bm @ ts1_a8bn rb_d8oi a_a7Xn as_a7Xo ->
    case eta1_X3C
    of _ { VCons @ t2_a8bp @ ts2_a8bq rb1_d8og b_a7Xp bs_a7Xq ->
    case $dOrd_a8bf
    of _
    { D:Ord ww_a92d
            ww1_a92e
            ww2_a92f
            ww3_a92g
            ww4_a92h
            ww5_a92i
            ww6_a92j
            ww7_a92k ->
    $w$ccompare
      ww1_a92e
      ($dOrd1_a8bg `cast` ...)
      (a_a7Xn `cast` ...)
      (as_a7Xo `cast` ...)
      (b_a7Xp `cast` ...)
      bs_a7Xq
    }
    }
    }

$w$c<=
$w$c<= =
  \ @ k_a7Zv
    @ t_a7Xk
    @ ts_a7Xl
    @ f_a7Xm
    ww_s98f
    w_s98n
    w1_s98o
    w2_s98p ->
    case w1_s98o
    of _ { VCons @ t1_a8bm @ ts1_a8bn rb_d8oi a_a7Xn as_a7Xo ->
    case w2_s98p
    of _ { VCons @ t2_a8bp @ ts2_a8bq rb1_d8og b_a7Xp bs_a7Xq ->
    case ww_s98f (a_a7Xn `cast` ...) (b_a7Xp `cast` ...) of _ {
      LT -> True;
      EQ ->
        case compare (w_s98n `cast` ...) (as_a7Xo `cast` ...) bs_a7Xq
        of _ {
          __DEFAULT -> True;
          GT -> False
        };
      GT -> False
    }
    }
    }

$fOrdVec_$c<=
$fOrdVec_$c<= =
  \ @ k_a7Zv
    @ t_a7Xk
    @ ts_a7Xl
    @ f_a7Xm
    _
    w1_s98c
    w2_s98n
    w3_s98o
    w4_s98p ->
    case w1_s98c
    of _
    { D:Ord ww_s98e
            ww1_s98f
            ww2_s98g
            ww3_s98h
            ww4_s98i
            ww5_s98j
            ww6_s98k
            ww7_s98l ->
    $w$c<= ww1_s98f w2_s98n w3_s98o w4_s98p
    }

$w$cmax
$w$cmax =
  \ @ k_a7Zv
    @ t_a7Xk
    @ ts_a7Xl
    @ f_a7Xm
    ww_s98A
    w_s98I
    w1_s98J
    w2_s98K ->
    case w1_s98J
    of wild_X2y { VCons @ t1_a8bm @ ts1_a8bn rb_d8oi a_a7Xn as_a7Xo ->
    case w2_s98K
    of wild1_XH { VCons @ t2_a8bp @ ts2_a8bq rb1_d8og b_a7Xp bs_a7Xq ->
    case ww_s98A (a_a7Xn `cast` ...) (b_a7Xp `cast` ...) of _ {
      LT -> wild1_XH;
      EQ ->
        case compare (w_s98I `cast` ...) (as_a7Xo `cast` ...) bs_a7Xq
        of _ {
          __DEFAULT -> wild1_XH;
          GT -> wild_X2y
        };
      GT -> wild_X2y
    }
    }
    }

$fOrdVec_$cmax
$fOrdVec_$cmax =
  \ @ k_a7Zv
    @ t_a7Xk
    @ ts_a7Xl
    @ f_a7Xm
    _
    w1_s98x
    w2_s98I
    w3_s98J
    w4_s98K ->
    case w1_s98x
    of _
    { D:Ord ww_s98z
            ww1_s98A
            ww2_s98B
            ww3_s98C
            ww4_s98D
            ww5_s98E
            ww6_s98F
            ww7_s98G ->
    $w$cmax ww1_s98A w2_s98I w3_s98J w4_s98K
    }

$w$cmin
$w$cmin =
  \ @ k_a7Zv
    @ t_a7Xk
    @ ts_a7Xl
    @ f_a7Xm
    ww_s98V
    w_s993
    w1_s994
    w2_s995 ->
    case w1_s994
    of wild_X2y { VCons @ t1_a8bm @ ts1_a8bn rb_d8oi a_a7Xn as_a7Xo ->
    case w2_s995
    of wild1_XH { VCons @ t2_a8bp @ ts2_a8bq rb1_d8og b_a7Xp bs_a7Xq ->
    case ww_s98V (a_a7Xn `cast` ...) (b_a7Xp `cast` ...) of _ {
      LT -> wild_X2y;
      EQ ->
        case compare (w_s993 `cast` ...) (as_a7Xo `cast` ...) bs_a7Xq
        of _ {
          __DEFAULT -> wild_X2y;
          GT -> wild1_XH
        };
      GT -> wild1_XH
    }
    }
    }

$fOrdVec_$cmin
$fOrdVec_$cmin =
  \ @ k_a7Zv
    @ t_a7Xk
    @ ts_a7Xl
    @ f_a7Xm
    _
    w1_s98S
    w2_s993
    w3_s994
    w4_s995 ->
    case w1_s98S
    of _
    { D:Ord ww_s98U
            ww1_s98V
            ww2_s98W
            ww3_s98X
            ww4_s98Y
            ww5_s98Z
            ww6_s990
            ww7_s991 ->
    $w$cmin ww1_s98V w2_s993 w3_s994 w4_s995
    }

$w$c>
$w$c> =
  \ @ k_a7Zv
    @ t_a7Xk
    @ ts_a7Xl
    @ f_a7Xm
    ww_s99g
    w_s99o
    w1_s99p
    w2_s99q ->
    case w1_s99p
    of _ { VCons @ t1_a8bm @ ts1_a8bn rb_d8oi a_a7Xn as_a7Xo ->
    case w2_s99q
    of _ { VCons @ t2_a8bp @ ts2_a8bq rb1_d8og b_a7Xp bs_a7Xq ->
    case ww_s99g (a_a7Xn `cast` ...) (b_a7Xp `cast` ...) of _ {
      LT -> False;
      EQ ->
        case compare (w_s99o `cast` ...) (as_a7Xo `cast` ...) bs_a7Xq
        of _ {
          __DEFAULT -> False;
          GT -> True
        };
      GT -> True
    }
    }
    }

$fOrdVec_$c>
$fOrdVec_$c> =
  \ @ k_a7Zv
    @ t_a7Xk
    @ ts_a7Xl
    @ f_a7Xm
    _
    w1_s99d
    w2_s99o
    w3_s99p
    w4_s99q ->
    case w1_s99d
    of _
    { D:Ord ww_s99f
            ww1_s99g
            ww2_s99h
            ww3_s99i
            ww4_s99j
            ww5_s99k
            ww6_s99l
            ww7_s99m ->
    $w$c> ww1_s99g w2_s99o w3_s99p w4_s99q
    }

$w$c>=
$w$c>= =
  \ @ k_a7Zv
    @ t_a7Xk
    @ ts_a7Xl
    @ f_a7Xm
    ww_s99B
    w_s99J
    w1_s99K
    w2_s99L ->
    case w1_s99K
    of _ { VCons @ t1_a8bm @ ts1_a8bn rb_d8oi a_a7Xn as_a7Xo ->
    case w2_s99L
    of _ { VCons @ t2_a8bp @ ts2_a8bq rb1_d8og b_a7Xp bs_a7Xq ->
    case ww_s99B (a_a7Xn `cast` ...) (b_a7Xp `cast` ...) of _ {
      LT -> False;
      EQ ->
        case compare (w_s99J `cast` ...) (as_a7Xo `cast` ...) bs_a7Xq
        of _ {
          __DEFAULT -> True;
          LT -> False
        };
      GT -> True
    }
    }
    }

$fOrdVec_$c>=
$fOrdVec_$c>= =
  \ @ k_a7Zv
    @ t_a7Xk
    @ ts_a7Xl
    @ f_a7Xm
    _
    w1_s99y
    w2_s99J
    w3_s99K
    w4_s99L ->
    case w1_s99y
    of _
    { D:Ord ww_s99A
            ww1_s99B
            ww2_s99C
            ww3_s99D
            ww4_s99E
            ww5_s99F
            ww6_s99G
            ww7_s99H ->
    $w$c>= ww1_s99B w2_s99J w3_s99K w4_s99L
    }

$w$c<
$w$c< =
  \ @ k_a7Zv
    @ t_a7Xk
    @ ts_a7Xl
    @ f_a7Xm
    ww_s99W
    w_s9a4
    w1_s9a5
    w2_s9a6 ->
    case w1_s9a5
    of _ { VCons @ t1_a8bm @ ts1_a8bn rb_d8oi a_a7Xn as_a7Xo ->
    case w2_s9a6
    of _ { VCons @ t2_a8bp @ ts2_a8bq rb1_d8og b_a7Xp bs_a7Xq ->
    case ww_s99W (a_a7Xn `cast` ...) (b_a7Xp `cast` ...) of _ {
      LT -> True;
      EQ ->
        case compare (w_s9a4 `cast` ...) (as_a7Xo `cast` ...) bs_a7Xq
        of _ {
          __DEFAULT -> False;
          LT -> True
        };
      GT -> False
    }
    }
    }

$fOrdVec_$c<
$fOrdVec_$c< =
  \ @ k_a7Zv
    @ t_a7Xk
    @ ts_a7Xl
    @ f_a7Xm
    _
    w1_s99T
    w2_s9a4
    w3_s9a5
    w4_s9a6 ->
    case w1_s99T
    of _
    { D:Ord ww_s99V
            ww1_s99W
            ww2_s99X
            ww3_s99Y
            ww4_s99Z
            ww5_s9a0
            ww6_s9a1
            ww7_s9a2 ->
    $w$c< ww1_s99W w2_s9a4 w3_s9a5 w4_s9a6
    }

$fOrdVec
$fOrdVec =
  \ @ k_a7Zv
    @ t_a7Xk
    @ ts_a7Xl
    @ f_a7Xm
    $dEq_a8be
    $dOrd_a8bf
    $dOrd1_a8bg ->
    D:Ord
      $dEq_a8be
      ($fOrdVec_$ccompare $dEq_a8be $dOrd_a8bf $dOrd1_a8bg)
      ($fOrdVec_$c< $dEq_a8be $dOrd_a8bf $dOrd1_a8bg)
      ($fOrdVec_$c>= $dEq_a8be $dOrd_a8bf $dOrd1_a8bg)
      ($fOrdVec_$c> $dEq_a8be $dOrd_a8bf $dOrd1_a8bg)
      ($fOrdVec_$c<= $dEq_a8be $dOrd_a8bf $dOrd1_a8bg)
      ($fOrdVec_$cmax $dEq_a8be $dOrd_a8bf $dOrd1_a8bg)
      ($fOrdVec_$cmin $dEq_a8be $dOrd_a8bf $dOrd1_a8bg)

$fVFunctorkc[]_$cvMap
$fVFunctorkc[]_$cvMap =
  \ @ k_a7Zu @ c_a7Xj @ f_teX @ g_teY _ _ ds2_d8kH ->
    case ds2_d8kH of _ { VNil rb_d8oe -> $WVNil }

$fVFunctorkc[]
$fVFunctorkc[] = $fVFunctorkc[]_$cvMap `cast` ...

$fVFunctorkc:_$cvMap
$fVFunctorkc:_$cvMap =
  \ @ k_a7Zt
    @ c_a7Xc
    @ t_a7Xd
    @ ts_a7Xe
    irred_a8aG
    $dVFunctor_a8aH
    @ f_teG
    @ g_teH
    c_a7Xf
    f_a7Xg
    ds_d8kr ->
    case ds_d8kr
    of _ { VCons @ t1_a8aM @ ts1_a8aN rb_d8o1 x_a7Xh xs_a7Xi ->
    (VCons
       @~ <(':) k_a7Zt t_a7Xd ts1_a8aN>
       (f_a7Xg irred_a8aG (Proxy) (x_a7Xh `cast` ...))
       (($dVFunctor_a8aH `cast` ...) c_a7Xf f_a7Xg xs_a7Xi))
    `cast` ...
    }

$fVFunctorkc:
$fVFunctorkc: = $fVFunctorkc:_$cvMap `cast` ...

$fMonoidVec0_$cmappend
$fMonoidVec0_$cmappend = \ @ k_a7Zr @ f_a7Xa _ _ -> $WVNil

$fMonoidVec0_go
$fMonoidVec0_go =
  \ @ k_a7Zr @ f_a7Xa ds_a114 ->
    case ds_a114 of _ {
      [] -> $WVNil;
      : y_a119 ys_a11a -> $WVNil
    }

$fMonoidVec0_$cmconcat
$fMonoidVec0_$cmconcat = $fMonoidVec0_go

$fMonoidVec0
$fMonoidVec0 =
  \ @ k_a7Zr @ f_a7Xa ->
    D:Monoid ($WVNil) ($fMonoidVec0_$cmappend) ($fMonoidVec0_go)

$fMonoidVec_$cmappend
$fMonoidVec_$cmappend =
  \ @ k_a7Zq
    @ t_a7X3
    @ ts_a7X4
    @ f_a7X5
    $dMonoid_a89Z
    $dMonoid1_a8a0
    ds_d8jS
    ds1_d8jT ->
    case ds_d8jS
    of _ { VCons @ t1_a8ab @ ts1_a8ac rb_d8ns x_a7X6 xs_a7X7 ->
    case ds1_d8jT
    of _ { VCons @ t2_a8ae @ ts2_a8af rb1_d8nq y_a7X8 ys_a7X9 ->
    VCons
      @~ <(':) k_a7Zq t_a7X3 ts_a7X4>
      (mappend $dMonoid_a89Z (x_a7X6 `cast` ...) (y_a7X8 `cast` ...))
      (mappend $dMonoid1_a8a0 (xs_a7X7 `cast` ...) (ys_a7X9 `cast` ...))
    }
    }

$fMonoidVec_$cmempty
$fMonoidVec_$cmempty =
  \ @ k_a7Zq
    @ t_a7X3
    @ ts_a7X4
    @ f_a7X5
    $dMonoid_a89Z
    $dMonoid1_a8a0 ->
    VCons
      @~ <(':) k_a7Zq t_a7X3 ts_a7X4>
      (mempty $dMonoid_a89Z)
      (mempty $dMonoid1_a8a0)

$fMonoidVec_$cmconcat
$fMonoidVec_$cmconcat =
  \ @ k_a7Zq
    @ t_a7X3
    @ ts_a7X4
    @ f_a7X5
    $dMonoid_a89Z
    $dMonoid1_a8a0
    eta_X3Y ->
    let {
      a_s93r
      a_s93r = mempty $dMonoid1_a8a0 } in
    let {
      a1_s93p
      a1_s93p = mempty $dMonoid_a89Z } in
    let {
      z_a112
      z_a112 = VCons @~ <(':) k_a7Zq t_a7X3 ts_a7X4> a1_s93p a_s93r } in
    let {
      lvl12_s9gj
      lvl12_s9gj = mappend $dMonoid1_a8a0 } in
    let {
      lvl13_s9gi
      lvl13_s9gi = mappend $dMonoid_a89Z } in
    letrec {
      go_a113
      go_a113 =
        \ ds_a114 ->
          case ds_a114 of _ {
            [] -> z_a112;
            : y_a119 ys_a11a ->
              case y_a119
              of _ { VCons @ t1_a8ab @ ts1_a8ac rb_d8ns x_a7X6 xs_a7X7 ->
              case go_a113 ys_a11a
              of _ { VCons @ t2_a8ae @ ts2_a8af rb1_d8nq y1_a7X8 ys1_a7X9 ->
              VCons
                @~ <(':) k_a7Zq t_a7X3 ts_a7X4>
                (lvl13_s9gi (x_a7X6 `cast` ...) (y1_a7X8 `cast` ...))
                (lvl12_s9gj (xs_a7X7 `cast` ...) (ys1_a7X9 `cast` ...))
              }
              }
          }; } in
    go_a113 eta_X3Y

$fMonoidVec
$fMonoidVec =
  \ @ k_a7Zq
    @ t_a7X3
    @ ts_a7X4
    @ f_a7X5
    $dMonoid_a89Z
    $dMonoid1_a8a0 ->
    D:Monoid
      ($fMonoidVec_$cmempty $dMonoid_a89Z $dMonoid1_a8a0)
      ($fMonoidVec_$cmappend $dMonoid_a89Z $dMonoid1_a8a0)
      ($fMonoidVec_$cmconcat $dMonoid_a89Z $dMonoid1_a8a0)

$fEqCVec_$c==
$fEqCVec_$c== =
  \ @ k_a7Zp @ ts_a7WZ @ a_a7X0 $dEq_a89P ds_d8jH ds1_d8jI ->
    == $dEq_a89P (ds_d8jH `cast` ...) (ds1_d8jI `cast` ...)

$fEqCVec_$c/=
$fEqCVec_$c/= =
  \ @ k_a7Zp @ ts_a7WZ @ a_a7X0 $dEq_a89P eta_B2 eta1_X40 ->
    case == $dEq_a89P (eta_B2 `cast` ...) (eta1_X40 `cast` ...) of _ {
      False -> True;
      True -> False
    }

$fEqCVec
$fEqCVec =
  \ @ k_a7Zp @ ts_a7WZ @ a_a7X0 $dEq_a89P ->
    let {
      lvl12_s9gk
      lvl12_s9gk = == $dEq_a89P } in
    D:Eq
      (\ ds_d8jH ds1_d8jI ->
         lvl12_s9gk (ds_d8jH `cast` ...) (ds1_d8jI `cast` ...))
      ($fEqCVec_$c/= $dEq_a89P)

$fOrdCVec_$ccompare
$fOrdCVec_$ccompare =
  \ @ k_a7Zo @ ts_a7WV @ a_a7WW _ $dOrd_a89o ds_d8jF ds1_d8jG ->
    compare $dOrd_a89o (ds_d8jF `cast` ...) (ds1_d8jG `cast` ...)

$fOrdCVec_$c<=
$fOrdCVec_$c<= =
  \ @ k_a7Zo @ ts_a7WV @ a_a7WW _ $dOrd_a89o x_a8sj y_a8sk ->
    case compare $dOrd_a89o (x_a8sj `cast` ...) (y_a8sk `cast` ...)
    of _ {
      __DEFAULT -> True;
      GT -> False
    }

$fOrdCVec_$cmax
$fOrdCVec_$cmax =
  \ @ k_a7Zo @ ts_a7WV @ a_a7WW _ $dOrd_a89o x_a8s9 y_a8sa ->
    case compare $dOrd_a89o (x_a8s9 `cast` ...) (y_a8sa `cast` ...)
    of _ {
      __DEFAULT -> y_a8sa;
      GT -> x_a8s9
    }

$fOrdCVec_$cmin
$fOrdCVec_$cmin =
  \ @ k_a7Zo @ ts_a7WV @ a_a7WW _ $dOrd_a89o x_a8rZ y_a8s0 ->
    case compare $dOrd_a89o (x_a8rZ `cast` ...) (y_a8s0 `cast` ...)
    of _ {
      __DEFAULT -> x_a8rZ;
      GT -> y_a8s0
    }

$fOrdCVec_$c>
$fOrdCVec_$c> =
  \ @ k_a7Zo @ ts_a7WV @ a_a7WW _ $dOrd_a89o x_a8sr y_a8ss ->
    case compare $dOrd_a89o (x_a8sr `cast` ...) (y_a8ss `cast` ...)
    of _ {
      __DEFAULT -> False;
      GT -> True
    }

$fOrdCVec_$c>=
$fOrdCVec_$c>= =
  \ @ k_a7Zo @ ts_a7WV @ a_a7WW _ $dOrd_a89o x_a8sz y_a8sA ->
    case compare $dOrd_a89o (x_a8sz `cast` ...) (y_a8sA `cast` ...)
    of _ {
      __DEFAULT -> True;
      LT -> False
    }

$fOrdCVec_$c<
$fOrdCVec_$c< =
  \ @ k_a7Zo @ ts_a7WV @ a_a7WW _ $dOrd_a89o x_a8sH y_a8sI ->
    case compare $dOrd_a89o (x_a8sH `cast` ...) (y_a8sI `cast` ...)
    of _ {
      __DEFAULT -> False;
      LT -> True
    }

$fOrdCVec
$fOrdCVec =
  \ @ k_a7Zo @ ts_a7WV @ a_a7WW $dEq_a89n $dOrd_a89o ->
    let {
      lvl12_s9gl
      lvl12_s9gl = compare $dOrd_a89o } in
    D:Ord
      $dEq_a89n
      (\ ds_d8jF ds1_d8jG ->
         lvl12_s9gl (ds_d8jF `cast` ...) (ds1_d8jG `cast` ...))
      ($fOrdCVec_$c< $dEq_a89n $dOrd_a89o)
      ($fOrdCVec_$c>= $dEq_a89n $dOrd_a89o)
      ($fOrdCVec_$c> $dEq_a89n $dOrd_a89o)
      ($fOrdCVec_$c<= $dEq_a89n $dOrd_a89o)
      ($fOrdCVec_$cmax $dEq_a89n $dOrd_a89o)
      ($fOrdCVec_$cmin $dEq_a89n $dOrd_a89o)

$fMonoidCVec1
$fMonoidCVec1 =
  \ @ k_a7Zn @ ts_a7WR @ a_a7WS $dMonoid_a898 ds_d8jD ds1_d8jE ->
    mappend $dMonoid_a898 (ds_d8jD `cast` ...) (ds1_d8jE `cast` ...)

$fMonoidCVec_$cmappend
$fMonoidCVec_$cmappend = $fMonoidCVec1 `cast` ...

$fMonoidCVec2
$fMonoidCVec2 =
  \ @ k_X83k @ ts_X80P @ a_X80R $dMonoid_X8d8 -> mempty $dMonoid_X8d8

$fMonoidCVec_$cmempty
$fMonoidCVec_$cmempty = $fMonoidCVec2 `cast` ...

$w$cmconcat
$w$cmconcat =
  \ @ k_a7Zn @ ts_a7WR @ a_a7WS ww_s9ac ww1_s9ad w_s9ag ->
    letrec {
      go_a113
      go_a113 =
        \ ds_a114 ->
          case ds_a114 of _ {
            [] -> ww_s9ac `cast` ...;
            : y_a119 ys_a11a ->
              (ww1_s9ad (y_a119 `cast` ...) ((go_a113 ys_a11a) `cast` ...))
              `cast` ...
          }; } in
    (go_a113 w_s9ag) `cast` ...

$fMonoidCVec_$cmconcat
$fMonoidCVec_$cmconcat =
  \ @ k_a7Zn @ ts_a7WR @ a_a7WS w_s9aa w1_s9ag ->
    case w_s9aa of _ { D:Monoid ww_s9ac ww1_s9ad ww2_s9ae ->
    ($w$cmconcat ww_s9ac ww1_s9ad w1_s9ag) `cast` ...
    }

$fMonoidCVec
$fMonoidCVec =
  \ @ k_X82h @ ts_X7ZM @ a_X7ZO $dMonoid_X8c5 ->
    let {
      lvl12_s9gm
      lvl12_s9gm = mappend $dMonoid_X8c5 } in
    D:Monoid
      ((mempty $dMonoid_X8c5) `cast` ...)
      ((\ ds_X8nI ds1_X8nK ->
          lvl12_s9gm (ds_X8nI `cast` ...) (ds1_X8nK `cast` ...))
       `cast` ...)
      ($fMonoidCVec_$cmconcat $dMonoid_X8c5)

$fTraversableCVec1
$fTraversableCVec1 = \ @ k_a7Zk @ ts_a7WE @ b_tdb tpl_X6 -> tpl_X6

$w$ctraverse
$w$ctraverse =
  \ @ k_a7Zk
    @ ts_a7WE
    @ a_a879
    @ f_a87a
    @ b_a87b
    ww_s9av
    ww1_s9aw
    ww2_s9ax
    w_s9aB
    w1_s9aC ->
    case ww_s9av of _ { D:Functor ww3_s9aj ww4_s9ak ->
    ww3_s9aj
      (($fTraversableCVec1) `cast` ...)
      (letrec {
         w2_s8zO
         w2_s8zO =
           \ @ k1_tdm @ ts1_tdn x_a7WM ->
             case x_a7WM of _ {
               VNil rb_d8nh -> ww1_s9aw (($WVNil) `cast` ...);
               VCons @ t_a87l @ ts2_a87m rb_d8n5 a_a7WN as_a7WO ->
                 ww2_s9ax
                   (ww3_s9aj (($WVCons) `cast` ...) (w_s9aB (a_a7WN `cast` ...)))
                   (w2_s8zO as_a7WO)
             }; } in
       w2_s8zO (w1_s9aC `cast` ...))
    }

$fTraversableCVec_$ctraverse
$fTraversableCVec_$ctraverse =
  \ @ k_a7Zk
    @ ts_a7WE
    _
    _
    @ a_a879
    @ f_a87a
    @ b_a87b
    w2_s9at
    w3_s9aB
    w4_s9aC ->
    case w2_s9at
    of _ { D:Applicative ww_s9av ww1_s9aw ww2_s9ax ww3_s9ay ww4_s9az ->
    $w$ctraverse ww_s9av ww1_s9aw ww2_s9ax w3_s9aB w4_s9aC
    }

$w$cmapM
$w$cmapM =
  \ @ k_a7Zk
    @ ts_a7WE
    @ a_a87N
    @ m_a87O
    @ b_a87P
    ww_s9aN
    ww1_s9aP
    w_s9aS
    w1_s9aT ->
    ww_s9aN
      (letrec {
         w2_s8zO
         w2_s8zO =
           \ @ k1_tdm @ ts1_tdn x_a7WM ->
             case x_a7WM of _ {
               VNil rb_d8nh -> (ww1_s9aP (($WVNil) `cast` ...)) `cast` ...;
               VCons @ t_a87l @ ts2_a87m rb_d8n5 a_a7WN as_a7WO ->
                 let {
                   a1_s949
                   a1_s949 = w2_s8zO as_a7WO } in
                 (ww_s9aN
                    (ww_s9aN
                       (w_s9aS (a_a7WN `cast` ...))
                       (\ x1_a8Vi ->
                          ww1_s9aP (($WVCons (x1_a8Vi `cast` ...)) `cast` ...)))
                    (\ x1_a946 ->
                       ww_s9aN
                         (a1_s949 `cast` ...) (\ x2_a947 -> ww1_s9aP (x1_a946 x2_a947))))
                 `cast` ...
             }; } in
       (w2_s8zO (w1_s9aT `cast` ...)) `cast` ...)
      (\ x1_a8Vi -> ww1_s9aP (x1_a8Vi `cast` ...))

$fTraversableCVec_$cmapM
$fTraversableCVec_$cmapM =
  \ @ k_a7Zk
    @ ts_a7WE
    _
    _
    @ a_a87N
    @ m_a87O
    @ b_a87P
    w2_s9aL
    w3_s9aS
    w4_s9aT ->
    case w2_s9aL of _ { D:Monad ww_s9aN ww1_s9aO ww2_s9aP ww3_s9aQ ->
    $w$cmapM ww_s9aN ww2_s9aP w3_s9aS w4_s9aT
    }

$fTraversableCVec_$csequence
$fTraversableCVec_$csequence =
  \ @ k_a7Zk @ ts_a7WE _ _ @ m_a8tF @ a_a8tG $dMonad_a8tH eta_X4o ->
    case $dMonad_a8tH
    of _ { D:Monad ww_s9aN ww1_s9aO ww2_s9aP ww3_s9aQ ->
    $w$cmapM ww_s9aN ww2_s9aP (id) eta_X4o
    }

$fTraversableCVec_$csequenceA
$fTraversableCVec_$csequenceA =
  \ @ k_a7Zk
    @ ts_a7WE
    _
    _
    @ f_a8uv
    @ a_a8uw
    $dApplicative_a8ux
    eta_X4p ->
    case $dApplicative_a8ux
    of _ { D:Applicative ww_s9av ww1_s9aw ww2_s9ax ww3_s9ay ww4_s9az ->
    $w$ctraverse ww_s9av ww1_s9aw ww2_s9ax (id) eta_X4p
    }

$fTraversableCVec
$fTraversableCVec =
  \ @ k_a7Zk @ ts_a7WE $dFunctor_a872 $dFoldable_a873 ->
    D:Traversable
      $dFunctor_a872
      $dFoldable_a873
      ($fTraversableCVec_$ctraverse $dFunctor_a872 $dFoldable_a873)
      ($fTraversableCVec_$csequenceA $dFunctor_a872 $dFoldable_a873)
      ($fTraversableCVec_$cmapM $dFunctor_a872 $dFoldable_a873)
      ($fTraversableCVec_$csequence $dFunctor_a872 $dFoldable_a873)

$fFoldableCVec_$dMonoid
$fFoldableCVec_$dMonoid = \ @ a_a8vl -> $fMonoidDual ($fMonoidEndo)

lvl4_r9kX
lvl4_r9kX = unpackCString# "foldr1: empty structure"

$fFoldableCVec3
$fFoldableCVec3 = \ @ a_a8uP -> error lvl4_r9kX

lvl5_r9kY
lvl5_r9kY = unpackCString# "foldl1: empty structure"

$fFoldableCVec1
$fFoldableCVec1 = \ @ a_a8uA -> error lvl5_r9kY

Rec {
$fFoldableCVec4
$fFoldableCVec4 =
  \ @ k_a7Zl @ ts_a7WP @ a_a8uP ->
    $fFoldableCVec_$cfoldMap ($fMonoidEndo)

$fFoldableCVec5
$fFoldableCVec5 =
  \ @ k_a7Zl @ ts_a7WP @ a_a8v4 @ b_a8v5 ->
    $fFoldableCVec_$cfoldMap ($fMonoidEndo)

$fFoldableCVec6
$fFoldableCVec6 =
  \ @ k_a7Zl @ ts_a7WP @ a_a8vl @ b_a8vm ->
    $fFoldableCVec_$cfoldMap ($fFoldableCVec_$dMonoid)

$fFoldableCVec7
$fFoldableCVec7 =
  \ @ k_a7Zl @ ts_a7WP @ a_a8vR @ b_a8vS ->
    $fFoldableCVec_$cfoldMap ($fFoldableCVec_$dMonoid)

$fFoldableCVec8
$fFoldableCVec8 =
  \ @ k_a7Zl @ ts_a7WP @ a_a8w1 @ b_a8w2 ->
    $fFoldableCVec_$cfoldMap ($fMonoidEndo)

$fFoldableCVec2
$fFoldableCVec2 =
  \ @ k_a7Zl @ ts_a7WP @ a_a8uA ->
    $fFoldableCVec_$cfoldMap ($fFoldableCVec_$dMonoid)

$fFoldableCVec_$cfoldl1
$fFoldableCVec_$cfoldl1 =
  \ @ k_a7Zl @ ts_a7WP @ a_a8uA f_a8uB xs_a8uC ->
    case (($fFoldableCVec2
             ((\ x_a8vD y_a8qT ->
                 case y_a8qT of _ {
                   Nothing -> Just x_a8vD;
                   Just x1_a8uK -> Just (f_a8uB x1_a8uK x_a8vD)
                 })
              `cast` ...)
             xs_a8uC)
          `cast` ...)
           (Nothing)
    of _ {
      Nothing -> $fFoldableCVec1;
      Just v_a2cr -> v_a2cr
    }

$fFoldableCVec_$cfoldr1
$fFoldableCVec_$cfoldr1 =
  \ @ k_a7Zl @ ts_a7WP @ a_a8uP f_a8uQ xs_a8uR ->
    case (($fFoldableCVec4
             ((\ x_a8w6 ds_a8uU ->
                 case ds_a8uU of _ {
                   Nothing -> Just x_a8w6;
                   Just y_a8uZ -> Just (f_a8uQ x_a8w6 y_a8uZ)
                 })
              `cast` ...)
             xs_a8uR)
          `cast` ...)
           (Nothing)
    of _ {
      Nothing -> $fFoldableCVec3;
      Just v_a2cr -> v_a2cr
    }

$fFoldableCVec_$cfoldl'
$fFoldableCVec_$cfoldl' =
  \ @ k_a7Zl @ ts_a7WP @ a_a8v4 @ b_a8v5 f_a8v6 z0_a8v7 xs_a8v8 ->
    (($fFoldableCVec5
        ((\ x_a8w6 k_a8va z_a8vb ->
            case f_a8v6 z_a8vb x_a8w6 of vx_a8vi { __DEFAULT ->
            k_a8va vx_a8vi
            })
         `cast` ...)
        xs_a8v8)
     `cast` ...)
      (id) z0_a8v7

$fFoldableCVec_$cfoldl
$fFoldableCVec_$cfoldl =
  \ @ k_a7Zl @ ts_a7WP @ a_a8vl @ b_a8vm f_X8yJ z_X8yL t_X8yN ->
    (($fFoldableCVec6
        ((\ x_a8vD y_a8qT -> f_X8yJ y_a8qT x_a8vD) `cast` ...) t_X8yN)
     `cast` ...)
      z_X8yL

$fFoldableCVec_$cfoldr'
$fFoldableCVec_$cfoldr' =
  \ @ k_a7Zl @ ts_a7WP @ a_a8vR @ b_a8vS f_a8vT z0_a8vU xs_a8vV ->
    (($fFoldableCVec7
        ((\ x_a8vD y_a8qT z_a8vY ->
            case f_a8vT x_a8vD z_a8vY of vx_a8vi { __DEFAULT ->
            y_a8qT vx_a8vi
            })
         `cast` ...)
        xs_a8vV)
     `cast` ...)
      (id) z0_a8vU

$fFoldableCVec_$cfoldr
$fFoldableCVec_$cfoldr =
  \ @ k_a7Zl @ ts_a7WP @ a_a8w1 @ b_a8w2 f_a8w3 z_a8w4 t_a8w5 ->
    (($fFoldableCVec8 ((\ x_a8w6 -> f_a8w3 x_a8w6) `cast` ...) t_a8w5)
     `cast` ...)
      z_a8w4

$fFoldableCVec
$fFoldableCVec =
  \ @ k_a7Zl @ ts_a7WP ->
    D:Foldable
      ($fFoldableCVec_$cfold)
      ($fFoldableCVec_$cfoldMap)
      ($fFoldableCVec_$cfoldr)
      ($fFoldableCVec_$cfoldr')
      ($fFoldableCVec_$cfoldl)
      ($fFoldableCVec_$cfoldl')
      ($fFoldableCVec_$cfoldr1)
      ($fFoldableCVec_$cfoldl1)

$fFunctorCVec
$fFunctorCVec =
  \ @ k_a7Zm @ ts_a7WQ ->
    D:Functor ($fFunctorCVec_$cfmap) ($fFunctorCVec_$c<$)

$dTraversable_r9kZ
$dTraversable_r9kZ =
  \ @ k_a7Zm @ ts_a7WQ ->
    $fTraversableCVec ($fFunctorCVec) ($fFoldableCVec)

$fFunctorCVec_$c<$
$fFunctorCVec_$c<$ =
  \ @ k_a7Zm @ ts_a7WQ @ a_a8w9 @ b_a8wa x_a8wc ->
    $fFunctorCVec_$cfmap (\ _ -> x_a8wc)

$fFunctorCVec_$cfmap
$fFunctorCVec_$cfmap =
  \ @ k_a7Zm @ ts_a7WQ @ a_te9 @ b_tea ->
    fmapDefault ($dTraversable_r9kZ)

$fFoldableCVec_$cfoldMap
$fFoldableCVec_$cfoldMap =
  \ @ k_a7Zl @ ts_a7WP @ a_tdU @ m_tdV $dMonoid_a88a ->
    foldMapDefault ($dTraversable_r9kZ) $dMonoid_a88a

$fFoldableCVec_$cfold
$fFoldableCVec_$cfold =
  \ @ k_a7Zl @ ts_a7WP @ m_a8wT $dMonoid_a8wU ->
    $fFoldableCVec_$cfoldMap $dMonoid_a8wU (id)
end Rec }

cvec2list
cvec2list = \ @ k_t8I @ ts_t8J @ a_t8K -> toList ($fFoldableCVec)

$fVRepeatk[]1
$fVRepeatk[]1 = \ @ k_a7Zh @ a_tcT _ -> $WVNil

$fVRepeatk[]_$ccvRepeat
$fVRepeatk[]_$ccvRepeat = $fVRepeatk[]1 `cast` ...

$fVRepeatk[]
$fVRepeatk[] = $fVRepeatk[]1 `cast` ...

$fVRepeatk:1
$fVRepeatk:1 =
  \ @ k_a7Zg @ t_a7WB @ ts_a7WC $dVRepeat_a86O @ a_tcF a_a7WD ->
    VCons
      @~ <(':) k_a7Zg t_a7WB ts_a7WC>
      (a_a7WD `cast` ...)
      ((($dVRepeat_a86O `cast` ...) a_a7WD) `cast` ...)

$fVRepeatk:_$ccvRepeat
$fVRepeatk:_$ccvRepeat = $fVRepeatk:1 `cast` ...

$fVRepeatk:
$fVRepeatk: = $fVRepeatk:1 `cast` ...

$fVZipk[]_$cvZip
$fVZipk[]_$cvZip = \ @ k_a7Ze @ f_tcB @ g_tcC _ _ -> $WVNil

$fVZipk[]
$fVZipk[] = $fVZipk[]_$cvZip `cast` ...

$fVZipk:_$cvZip
$fVZipk:_$cvZip =
  \ @ k_a7Zd
    @ t_a7Ws
    @ ts_a7Wt
    $dVZip_a86o
    @ f_tcp
    @ g_tcq
    ds_d8iO
    ds1_d8iP ->
    case ds_d8iO
    of _ { VCons @ t1_a86s @ ts1_a86t rb_d8mz a_a7Wu as_a7Wv ->
    case ds1_d8iP
    of _ { VCons @ t2_a86v @ ts2_a86w rb1_d8mx b_a7Ww bs_a7Wx ->
    (VCons
       @~ <(':) k_a7Zd t_a7Ws ts1_a86t>
       ((a_a7Wu `cast` ..., b_a7Ww) `cast` ...)
       (($dVZip_a86o `cast` ...) as_a7Wv (bs_a7Wx `cast` ...)))
    `cast` ...
    }
    }

$fVZipk:
$fVZipk: = $fVZipk:_$cvZip `cast` ...

$fIndexIntokZ:_$cindexInto
$fIndexIntokZ:_$cindexInto =
  \ @ k_a7Zb @ t_a7Wp @ ts_a7Wq _ _ -> $WZIdx

$fIndexIntokZ:
$fIndexIntokZ: = $fIndexIntokZ:_$cindexInto `cast` ...

$fIndexIntokS:_$cindexInto
$fIndexIntokS:_$cindexInto =
  \ @ k_a7Za @ n_a7Wm @ t_a7Wn @ ts_a7Wo $dIndexInto_a86d _ _ ->
    SIdx
      @~ <(':) k_a7Za t_a7Wn ts_a7Wo>
      (($dIndexInto_a86d `cast` ...) (Proxy) (Proxy))

$fIndexIntokS:
$fIndexIntokS: = $fIndexIntokS:_$cindexInto `cast` ...

lvl6_r9l0
lvl6_r9l0 = I# 11

lvl7_r9l1
lvl7_r9l1 = C# ' '

lvl8_r9l2
lvl8_r9l2 = unpackCString# "SIdx"

lvl9_r9l3
lvl9_r9l3 = unpackCString# "ZIdx"

lvl10_r9l4
lvl10_r9l4 = ++ lvl9_r9l3

Rec {
$fShowIdx_$cshowsPrec
$fShowIdx_$cshowsPrec =
  \ @ k_a7Z9 @ ts_a7Wj ds_d8iB ds1_d8iC ->
    case ds1_d8iC of _ {
      ZIdx @ t_a85t @ ts1_a85u rb_d8ms -> lvl10_r9l4;
      SIdx @ ts1_a85x @ t_a85y rb_d8mq x_a7Wl ->
        case ds_d8iB of _ { I# x1_a8xf ->
        let {
          g_X179
          g_X179 = $fShowIdx_$cshowsPrec lvl6_r9l0 x_a7Wl } in
        case ># x1_a8xf 10 of _ {
          False -> \ x2_X17d -> ++ lvl8_r9l2 (: lvl7_r9l1 (g_X179 x2_X17d));
          True ->
            \ x2_a11M ->
              : shows11 (++ lvl8_r9l2 (: lvl7_r9l1 (g_X179 (: shows10 x2_a11M))))
        }
        }
    }
end Rec }

$fShowIdx1
$fShowIdx1 = \ @ k_a7Z9 @ ts_a7Wj -> $fShowIdx_$cshowsPrec shows26

$fShowIdx_$cshowList
$fShowIdx_$cshowList =
  \ @ k_a7Z9 @ ts_a7Wj ls_a8x8 s_a8x9 ->
    showList__ ($fShowIdx1) ls_a8x8 s_a8x9

$fShowIdx_$cshow
$fShowIdx_$cshow =
  \ @ k_a7Z9 @ ts_a7Wj x_a12A ->
    $fShowIdx_$cshowsPrec shows26 x_a12A ([])

$fShowIdx
$fShowIdx =
  \ @ k_a7Z9 @ ts_a7Wj ->
    D:Show
      ($fShowIdx_$cshowsPrec) ($fShowIdx_$cshow) ($fShowIdx_$cshowList)

Rec {
$fEqIdx_$c==
$fEqIdx_$c== =
  \ @ k_a7Z8 @ ts_a7Wg ds_d8il ds1_d8im ->
    case ds_d8il of _ {
      ZIdx @ t_a852 @ ts1_a853 rb_d8mo ->
        case ds1_d8im of _ {
          ZIdx @ t1_a855 @ ts2_a856 rb1_d8mm -> True;
          SIdx @ ipv0_s8xn @ ipv1_s8xo ipv_s8xp ipv1_s8xq -> False
        };
      SIdx @ ts1_a85a @ t_a85b rb_d8mg a_a7Wh ->
        case ds1_d8im of _ {
          ZIdx @ ipv0_s8xt @ ipv1_s8xu ipv_s8xv -> False;
          SIdx @ ts2_a85d @ t1_a85e rb1_d8me b_a7Wi ->
            $fEqIdx_$c== (a_a7Wh `cast` ...) b_a7Wi
        }
    }
end Rec }

$fEqIdx_$c/=
$fEqIdx_$c/= =
  \ @ k_a7Z8 @ ts_a7Wg eta_B2 eta1_X5c ->
    case $fEqIdx_$c== eta_B2 eta1_X5c of _ {
      False -> True;
      True -> False
    }

$fEqIdx
$fEqIdx =
  \ @ k_a7Z8 @ ts_a7Wg -> D:Eq ($fEqIdx_$c==) ($fEqIdx_$c/=)

Rec {
$w$ccompare
$w$ccompare =
  \ @ k_a7Z7 @ ts_a7Wd w_s9aZ w1_s9b0 ->
    case w_s9aZ of _ {
      ZIdx @ t_a845 @ ts1_a846 rb_d8mb ->
        case w1_s9b0 of _ {
          ZIdx @ t1_a848 @ ts2_a849 rb1_d8m9 -> EQ;
          SIdx @ ipv0_s8xF @ ipv1_s8xG ipv_s8xH ipv1_s8xI -> LT
        };
      SIdx @ ts1_a84h @ t_a84i rb_d8m1 ds_d8i4 ->
        case w1_s9b0 of _ {
          ZIdx @ t1_a84k @ ts2_a84l rb1_d8m7 -> GT;
          SIdx @ ts2_a84s @ t1_a84t rb1_d8lZ b_a7Wf ->
            $w$ccompare (ds_d8i4 `cast` ...) b_a7Wf
        }
    }
end Rec }

$fOrdIdx_$ccompare
$fOrdIdx_$ccompare =
  \ @ k_a7Z7 @ ts_a7Wd _ w1_s9aZ w2_s9b0 ->
    $w$ccompare w1_s9aZ w2_s9b0

$fOrdIdx_$c<
$fOrdIdx_$c< =
  \ @ k_a7Z7 @ ts_a7Wd _ x_a8sH y_a8sI ->
    case $w$ccompare x_a8sH y_a8sI of _ {
      __DEFAULT -> False;
      LT -> True
    }

$fOrdIdx_$c>=
$fOrdIdx_$c>= =
  \ @ k_a7Z7 @ ts_a7Wd _ x_a8sz y_a8sA ->
    case $w$ccompare x_a8sz y_a8sA of _ {
      __DEFAULT -> True;
      LT -> False
    }

$fOrdIdx_$c>
$fOrdIdx_$c> =
  \ @ k_a7Z7 @ ts_a7Wd _ x_a8sr y_a8ss ->
    case $w$ccompare x_a8sr y_a8ss of _ {
      __DEFAULT -> False;
      GT -> True
    }

$fOrdIdx_$c<=
$fOrdIdx_$c<= =
  \ @ k_a7Z7 @ ts_a7Wd _ x_a8sj y_a8sk ->
    case $w$ccompare x_a8sj y_a8sk of _ {
      __DEFAULT -> True;
      GT -> False
    }

$fOrdIdx_$cmax
$fOrdIdx_$cmax =
  \ @ k_a7Z7 @ ts_a7Wd _ x_a8s9 y_a8sa ->
    case $w$ccompare x_a8s9 y_a8sa of _ {
      __DEFAULT -> y_a8sa;
      GT -> x_a8s9
    }

$fOrdIdx_$cmin
$fOrdIdx_$cmin =
  \ @ k_a7Z7 @ ts_a7Wd _ x_a8rZ y_a8s0 ->
    case $w$ccompare x_a8rZ y_a8s0 of _ {
      __DEFAULT -> x_a8rZ;
      GT -> y_a8s0
    }

lvl11_r9l5
lvl11_r9l5 =
  \ @ k_a7Z7 @ ts_a7Wd w_s9aZ w1_s9b0 -> $w$ccompare w_s9aZ w1_s9b0

$fOrdIdx
$fOrdIdx =
  \ @ k_a7Z7 @ ts_a7Wd $dEq_a83Z ->
    D:Ord
      $dEq_a83Z
      (lvl11_r9l5)
      ($fOrdIdx_$c< $dEq_a83Z)
      ($fOrdIdx_$c>= $dEq_a83Z)
      ($fOrdIdx_$c> $dEq_a83Z)
      ($fOrdIdx_$c<= $dEq_a83Z)
      ($fOrdIdx_$cmax $dEq_a83Z)
      ($fOrdIdx_$cmin $dEq_a83Z)

$fVEnumk[]_$ccvEnum
$fVEnumk[]_$ccvEnum = (\ @ k_a7Z6 -> $WVNil) `cast` ...

$fVEnumk[]
$fVEnumk[] = (\ @ k_a7Z6 -> $WVNil) `cast` ...

$fVEnumk:1
$fVEnumk:1 =
  \ @ k_a7Z5 @ t_a7Wb @ ts_a7Wc $dVEnum_a83L ->
    VCons
      @~ <(':) k_a7Z5 t_a7Wb ts_a7Wc>
      (($WZIdx) `cast` ...)
      (($fFunctorCVec_$cfmap ($WSIdx) ($dVEnum_a83L `cast` ...))
       `cast` ...)

$fVEnumk:_$ccvEnum
$fVEnumk:_$ccvEnum = $fVEnumk:1 `cast` ...

$fVEnumk:
$fVEnumk: = $fVEnumk:1 `cast` ...

$fVInitializekc[]1
$fVInitializekc[]1 = \ @ k_a7Z3 @ c_a7W9 @ a_tbr _ _ -> $WVNil

$fVInitializekc[]_$ccvInitialize
$fVInitializekc[]_$ccvInitialize = $fVInitializekc[]1 `cast` ...

$fVInitializekc[]_$cvInitialize
$fVInitializekc[]_$cvInitialize =
  \ @ k_X82Y @ c_X805 @ f_tbo _ _ _ -> $WVNil

$fVInitializekc[]
$fVInitializekc[] =
  \ @ k_X82Z @ c_X806 ->
    D:VInitialize
      ($fVInitializekc[]_$cvInitialize) (($fVInitializekc[]1) `cast` ...)

$fVInitializekc:1
$fVInitializekc:1 =
  \ @ k_a7Z2
    @ c_a7W1
    @ t_a7W2
    @ ts_a7W3
    irred_a836
    $dVInitialize_a837
    @ a_tb3
    pc_a7W7
    x_a7W8 ->
    VCons
      @~ <(':) k_a7Z2 t_a7W2 ts_a7W3>
      ((x_a7W8 irred_a836 (Proxy)) `cast` ...)
      ((cvInitialize $dVInitialize_a837 pc_a7W7 x_a7W8) `cast` ...)

$fVInitializekc:_$ccvInitialize
$fVInitializekc:_$ccvInitialize = $fVInitializekc:1 `cast` ...

$fVInitializekc:_$cvInitialize
$fVInitializekc:_$cvInitialize =
  \ @ k_X84E
    @ c_X81E
    @ t_X81G
    @ ts_X81I
    irred_X88M
    $dVInitialize_X88O
    @ f_taO
    pc_a7W4
    pf_a7W5
    x_a7W6 ->
    VCons
      @~ <(':) k_X84E t_X81G ts_X81I>
      (x_a7W6 irred_X88M (Proxy))
      (vInitialize $dVInitialize_X88O pc_a7W4 pf_a7W5 x_a7W6)

$fVInitializekc:
$fVInitializekc: =
  \ @ k_X84F
    @ c_X81F
    @ t_X81H
    @ ts_X81J
    irred_X88N
    $dVInitialize_X88P ->
    D:VInitialize
      ($fVInitializekc:_$cvInitialize irred_X88N $dVInitialize_X88P)
      (($fVInitializekc:1 irred_X88N $dVInitialize_X88P) `cast` ...)



[ 5 of 11] Compiling Data.Yoko.Representation ( Data/Yoko/Representation.hs, Data/Yoko/Representation.o )

==================== Simplified expression ====================
$fFunctorQ_$cfmap
  (concat)
  (mapM
     $fMonadQ
     derive_data
     (: (mkNameG_tc
           (unpackCString# "main")
           (unpackCString# "Data.Yoko.Representation")
           (unpackCString# "Dep0"))
        (: (mkNameG_tc
              (unpackCString# "main")
              (unpackCString# "Data.Yoko.Representation")
              (unpackCString# "Rec0"))
           (: (mkNameG_tc
                 (unpackCString# "main")
                 (unpackCString# "Data.Yoko.Representation")
                 (unpackCString# "Rec1"))
              (: (mkNameG_tc
                    (unpackCString# "main")
                    (unpackCString# "Data.Yoko.Representation")
                    (unpackCString# "Rec2"))
                 (: (mkNameG_tc
                       (unpackCString# "main")
                       (unpackCString# "Data.Yoko.Representation")
                       (unpackCString# "Par1"))
                    (: (mkNameG_tc
                          (unpackCString# "main")
                          (unpackCString# "Data.Yoko.Representation")
                          (unpackCString# "Par0"))
                       (: (mkNameG_tc
                             (unpackCString# "main")
                             (unpackCString# "Data.Yoko.Representation")
                             (: (C# 'C') ([])))
                          (: (mkNameG_tc
                                (unpackCString# "main")
                                (unpackCString# "Data.Yoko.Representation")
                                (: (C# 'U') ([])))
                             (: (mkNameG_tc
                                   (unpackCString# "main")
                                   (unpackCString# "Data.Yoko.Representation")
                                   (unpackCString# ":*:"))
                                (: (mkNameG_tc
                                      (unpackCString# "main")
                                      (unpackCString# "Data.Yoko.Representation")
                                      (unpackCString# "N0"))
                                   (: (mkNameG_tc
                                         (unpackCString# "main")
                                         (unpackCString# "Data.Yoko.Representation")
                                         (unpackCString# "N1"))
                                      (: (mkNameG_tc
                                            (unpackCString# "main")
                                            (unpackCString# "Data.Yoko.Representation")
                                            (unpackCString# "N2"))
                                         (: (mkNameG_tc
                                               (unpackCString# "main")
                                               (unpackCString# "Data.Yoko.Representation")
                                               (unpackCString# ":+:"))
                                            (: (mkNameG_tc
                                                  (unpackCString# "main")
                                                  (unpackCString# "Data.Yoko.Representation")
                                                  (unpackCString# "Dep1"))
                                               (: (mkNameG_tc
                                                     (unpackCString# "main")
                                                     (unpackCString# "Data.Yoko.Representation")
                                                     (unpackCString# "Dep2"))
                                                  ([])))))))))))))))))


Loading package ghc-prim ... linking ... done.
Loading package integer-gmp ... linking ... done.
Loading package base ... linking ... done.
Loading package pretty-1.1.1.0 ... linking ... done.
Loading package array-0.4.0.1 ... linking ... done.
Loading package deepseq-1.3.0.1 ... linking ... done.
Loading package containers-0.5.0.0 ... linking ... done.
Loading package bytestring-0.10.0.0 ... linking ... done.
Loading package template-haskell ... linking ... done.
Loading package cereal-0.3.5.2 ... linking ... done.
Loading package data-hash-0.2.0.0 ... linking ... done.
Loading package type-spine-0.2 ... linking ... done.
Loading package type-digits-0.2 ... linking ... done.
Loading package type-cereal-0.2 ... linking ... done.
Loading package type-ord-0.2 ... linking ... done.
Loading package type-ord-spine-cereal-0.2 ... linking ... done.

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 1,202, types: 3,842, coercions: 632}

rep2
rep2 =
  \ @ a_abpF tpl_B1 ->
    case tpl_B1 of _ { D:Generic2 tpl_B2 _ -> tpl_B2 }

obj2
obj2 =
  \ @ a_abpF tpl_B1 ->
    case tpl_B1 of _ { D:Generic2 _ tpl_B3 -> tpl_B3 }

rep1
rep1 =
  \ @ a_abpK tpl_B1 ->
    case tpl_B1 of _ { D:Generic1 tpl_B2 _ -> tpl_B2 }

obj1
obj1 =
  \ @ a_abpK tpl_B1 ->
    case tpl_B1 of _ { D:Generic1 _ tpl_B3 -> tpl_B3 }

rep0
rep0 =
  \ @ a_abpP tpl_B1 ->
    case tpl_B1 of _ { D:Generic0 tpl_B2 _ -> tpl_B2 }

obj0
obj0 =
  \ @ a_abpP tpl_B1 ->
    case tpl_B1 of _ { D:Generic0 _ tpl_B3 -> tpl_B3 }

foldPlus
foldPlus =
  \ @ t_abYb
    @ t1_abYc
    @ t2_abYd
    @ t3_abYe
    @ t4_abYf
    f_abwU
    g_abwV
    x_abwW ->
    case x_abwW of _ {
      L x1_abwX -> f_abwU x1_abwX;
      R x1_abwY -> g_abwV x1_abwY
    }

foldTimes
foldTimes =
  \ @ t_abXz
    @ t1_abXA
    @ t2_abXB
    @ t3_abXC
    @ t4_abXD
    @ t5_abXE
    @ t6_abXF
    comb_abx5
    f_abx6
    g_abx7
    ds_dckb ->
    case ds_dckb of _ { :*: a_abx8 b_abx9 ->
    comb_abx5 (f_abx6 a_abx8) (g_abx7 b_abx9)
    }

mapDep3
mapDep3 =
  \ @ t_ac4B
    @ t1_ac4C
    @ t2_ac4D
    @ a_ac4E
    @ p1_ac4F
    @ p0_ac4G
    f_abwo
    ds_dckz ->
    f_abwo (ds_dckz `cast` ...)

mapDep0
mapDep0 = mapDep3 `cast` ...

mapDep4
mapDep4 =
  \ @ t_ac45
    @ t1_ac46
    @ t2_ac47
    @ t3_ac48
    @ f_ac49
    @ a_ac4a
    @ p1_ac4b
    @ p0_ac4c
    f_abwr
    ds_dckx ->
    f_abwr (ds_dckx `cast` ...)

mapDep1
mapDep1 = mapDep4 `cast` ...

mapDep5
mapDep5 =
  \ @ t_ac3t
    @ t1_ac3u
    @ t2_ac3v
    @ t3_ac3w
    @ t4_ac3x
    @ ff_ac3y
    @ b_ac3z
    @ a_ac3A
    @ p1_ac3B
    @ p0_ac3C
    f_abwu
    ds_dckv ->
    f_abwu (ds_dckv `cast` ...)

mapDep2
mapDep2 = mapDep5 `cast` ...

mapPar2
mapPar2 =
  \ @ t_ac15 @ t1_ac16 @ p1_ac17 @ p0_ac18 f_abwG ds_dckn ->
    f_abwG (ds_dckn `cast` ...)

mapPar0
mapPar0 = mapPar2 `cast` ...

mapPar3
mapPar3 =
  \ @ t_ac0J @ t1_ac0K @ p1_ac0L @ p0_ac0M f_abwJ ds_dckl ->
    f_abwJ (ds_dckl `cast` ...)

mapPar1
mapPar1 = mapPar3 `cast` ...

mapPlus
mapPlus =
  \ @ t_abYt
    @ t1_abYu
    @ t2_abYv
    @ t3_abYw
    @ a_abYx
    @ b_abYy
    @ p1_abYz
    @ p0_abYA
    f_abwZ
    g_abx0
    eta_B1 ->
    case eta_B1 of _ {
      L x_abwX -> L (f_abwZ x_abwX);
      R x_abwY -> R (g_abx0 x_abwY)
    }

mapRec3
mapRec3 =
  \ @ t_ac2T
    @ t1_ac2U
    @ t2_ac2V
    @ t3_ac2W
    @ lbl_ac2X
    @ a_ac2Y
    @ p1_ac2Z
    @ p0_ac30
    f_abwx
    ds_dckt ->
    f_abwx (ds_dckt `cast` ...)

mapRec0
mapRec0 = mapRec3 `cast` ...

mapRec4
mapRec4 =
  \ @ t_ac2h
    @ t1_ac2i
    @ t2_ac2j
    @ t3_ac2k
    @ t4_ac2l
    @ lbl_ac2m
    @ t5_ac2n
    @ a_ac2o
    @ p1_ac2p
    @ p0_ac2q
    f_abwA
    ds_dckr ->
    f_abwA (ds_dckr `cast` ...)

mapRec1
mapRec1 = mapRec4 `cast` ...

mapRec5
mapRec5 =
  \ @ t_ac1z
    @ t1_ac1A
    @ t2_ac1B
    @ t3_ac1C
    @ t4_ac1D
    @ t5_ac1E
    @ lbl_ac1F
    @ t6_ac1G
    @ b_ac1H
    @ a_ac1I
    @ p1_ac1J
    @ p0_ac1K
    f_abwD
    ds_dckp ->
    f_abwD (ds_dckp `cast` ...)

mapRec2
mapRec2 = mapRec5 `cast` ...

mapTimes
mapTimes =
  \ @ t_abXT
    @ t1_abXU
    @ t2_abXV
    @ t3_abXW
    @ a_abXX
    @ b_abXY
    @ p1_abXZ
    @ p0_abY0
    f_abx1
    g_abx2
    ds_dckd ->
    case ds_dckd of _ { :*: a_abx3 b_abx4 ->
    :*: (f_abx1 a_abx3) (g_abx2 b_abx4)
    }

unDep3
unDep3 = \ @ t_ac4P @ t1_ac4Q @ t2_ac4R ds_dckA -> ds_dckA

unDep0
unDep0 = unDep3 `cast` ...

unDep4
unDep4 =
  \ @ t_ac4m @ t1_ac4n @ t2_ac4o @ t3_ac4p ds_dcky -> ds_dcky

unDep1
unDep1 = unDep4 `cast` ...

unDep5
unDep5 =
  \ @ t_ac3N @ t1_ac3O @ t2_ac3P @ t3_ac3Q @ t4_ac3R ds_dckw ->
    ds_dckw

unDep2
unDep2 = unDep5 `cast` ...

unN3
unN3 = \ @ t_ac03 @ t1_ac04 @ t2_ac05 ds_dckk -> ds_dckk

unN0
unN0 = unN3 `cast` ...

foldN0
foldN0 =
  \ @ b_ac0f @ c_ac0g @ t_ac0h @ t1_ac0i f_abwM eta_B1 ->
    f_abwM (eta_B1 `cast` ...)

mapN3
mapN3 =
  \ @ b_ac0u
    @ p1_ac0v
    @ p0_ac0w
    @ b1_ac0x
    @ t_ac0y
    @ t1_ac0z
    f_abwR
    eta_B1 ->
    f_abwR (eta_B1 `cast` ...)

mapN0
mapN0 = mapN3 `cast` ...

unN4
unN4 = \ @ t_abZo @ t1_abZp @ t2_abZq ds_dckj -> ds_dckj

unN1
unN1 = unN4 `cast` ...

foldN1
foldN1 =
  \ @ c_abZA @ t_abZB @ t1_abZC @ t2_abZD f_abwO eta_X2v ->
    f_abwO (eta_X2v `cast` ...)

mapN4
mapN4 =
  \ @ dc_abZP
    @ p1_abZQ
    @ p0_abZR
    @ t_abZS
    @ t1_abZT
    @ t2_abZU
    f_abwS
    eta_X2z ->
    f_abwS (eta_X2z `cast` ...)

mapN1
mapN1 = mapN4 `cast` ...

unN5
unN5 = \ @ t_abYJ @ t1_abYK @ t2_abYL ds_dcki -> ds_dcki

unN2
unN2 = unN5 `cast` ...

foldN2
foldN2 =
  \ @ c_abYV @ t_abYW @ t1_abYX @ t2_abYY f_abwQ eta_X2J ->
    f_abwQ (eta_X2J `cast` ...)

mapN5
mapN5 =
  \ @ dc_abZa
    @ p1_abZb
    @ p0_abZc
    @ t_abZd
    @ t1_abZe
    @ t2_abZf
    f_abwT
    eta_X2N ->
    f_abwT (eta_X2N `cast` ...)

mapN2
mapN2 = mapN5 `cast` ...

unPar2
unPar2 = \ @ t_ac1g @ t1_ac1h ds_dcko -> ds_dcko

unPar0
unPar0 = unPar2 `cast` ...

unPar3
unPar3 = \ @ t_ac0U @ t1_ac0V ds_dckm -> ds_dckm

unPar1
unPar1 = unPar3 `cast` ...

unRec3
unRec3 =
  \ @ t_ac3a @ t1_ac3b @ t2_ac3c @ t3_ac3d ds_dcku -> ds_dcku

unRec0
unRec0 = unRec3 `cast` ...

unRec4
unRec4 =
  \ @ t_ac2B @ t1_ac2C @ t2_ac2D @ t3_ac2E @ t4_ac2F ds_dcks ->
    ds_dcks

unRec1
unRec1 = unRec4 `cast` ...

unRec5
unRec5 =
  \ @ t_ac1W
    @ t1_ac1X
    @ t2_ac1Y
    @ t3_ac1Z
    @ t4_ac20
    @ t5_ac21
    ds_dckq ->
    ds_dckq

unRec2
unRec2 = unRec5 `cast` ...

$fRead:+:3
$fRead:+:3 = I# 11

$fRead:+:2
$fRead:+:2 =
  \ @ a_XbtY
    @ b_Xbu0
    @ p1_Xbu2
    @ p0_Xbu4
    $dRead_ac6b
    $dRead1_ac6c
    eta_X3E ->
    let {
      ds_Xcwh
      ds_Xcwh = readPrec $dRead_ac6b } in
    let {
      ds1_acss
      ds1_acss = readPrec $dRead1_ac6c } in
    parens1
      ((\ n_act0 @ b1_act3 k_act4 ->
          case n_act0 of _ { I# x_actb ->
          let {
            a_scum
            a_scum =
              case <=# x_actb 10 of _ {
                False -> Fail;
                True ->
                  let {
                    lvl_scFm
                    lvl_scFm =
                      (((ds1_acss `cast` ...) $fRead:+:3) `cast` ...)
                        (\ a1_Xcx4 -> k_act4 (R a1_Xcx4)) } in
                  let {
                    k1_acty
                    k1_acty =
                      \ a1_acsq ->
                        case a1_acsq of _ {
                          __DEFAULT -> Fail;
                          Ident ds2_dclW ->
                            case ds2_dclW of _ {
                              [] -> Fail;
                              : ds3_dclX ds4_dclY ->
                                case ds3_dclX of _ { C# ds5_dclZ ->
                                case ds5_dclZ of _ {
                                  __DEFAULT -> Fail;
                                  'R' ->
                                    case ds4_dclY of _ {
                                      [] -> lvl_scFm;
                                      : ipv_scnL ipv1_scnM -> Fail
                                    }
                                }
                                }
                            }
                        } } in
                  let {
                    lvl85_actz
                    lvl85_actz = hsLex2 k1_acty } in
                  let {
                    k2_actB
                    k2_actB = \ _ -> lvl85_actz } in
                  Look
                    (\ a104_actD -> ((skipSpaces_skip a104_actD) `cast` ...) k2_actB)
              } } in
          case <=# x_actb 10 of _ {
            False -> $fMonadPlusP_$cmplus (Fail) a_scum;
            True ->
              let {
                lvl_scFn
                lvl_scFn =
                  (((ds_Xcwh `cast` ...) $fRead:+:3) `cast` ...)
                    (\ a1_XcwU -> k_act4 (L a1_XcwU)) } in
              let {
                k1_acty
                k1_acty =
                  \ a1_acsq ->
                    case a1_acsq of _ {
                      __DEFAULT -> Fail;
                      Ident ds2_dclL ->
                        case ds2_dclL of _ {
                          [] -> Fail;
                          : ds3_dclM ds4_dclN ->
                            case ds3_dclM of _ { C# ds5_dclO ->
                            case ds5_dclO of _ {
                              __DEFAULT -> Fail;
                              'L' ->
                                case ds4_dclN of _ {
                                  [] -> lvl_scFn;
                                  : ipv_scnC ipv1_scnD -> Fail
                                }
                            }
                            }
                        }
                    } } in
              let {
                lvl85_actz
                lvl85_actz = hsLex2 k1_acty } in
              let {
                k2_actB
                k2_actB = \ _ -> lvl85_actz } in
              $fMonadPlusP_$cmplus
                (Look
                   (\ a104_actD -> ((skipSpaces_skip a104_actD) `cast` ...) k2_actB))
                a_scum
          }
          })
       `cast` ...)
      eta_X3E

$fRead:+:_$creadPrec
$fRead:+:_$creadPrec = $fRead:+:2 `cast` ...

$fRead:+:_$creadsPrec
$fRead:+:_$creadsPrec =
  \ @ a_Xbss
    @ b_Xbsu
    @ p1_Xbsw
    @ p0_Xbsy
    $dRead_Xc8g
    $dRead1_Xc8i
    eta_X3G ->
    run
      ((($fRead:+:2 $dRead_Xc8g $dRead1_Xc8i eta_X3G) `cast` ...)
         ($fMonadP_$creturn))

$fRead:+:1
$fRead:+:1 =
  \ @ a_Xbsu
    @ b_Xbsw
    @ p1_Xbsy
    @ p0_XbsA
    $dRead_Xc8i
    $dRead1_Xc8k
    _
    @ b1_acux
    eta1_acuy ->
    $wa (($fRead:+:2 $dRead_Xc8i $dRead1_Xc8k) `cast` ...) eta1_acuy

$fRead:+:_$creadListPrec
$fRead:+:_$creadListPrec = $fRead:+:1 `cast` ...

$fRead:+:_$creadList
$fRead:+:_$creadList =
  \ @ a_Xbsv @ b_Xbsx @ p1_Xbsz @ p0_XbsB $dRead_Xc8j $dRead1_Xc8l ->
    run
      ($wa
         (($fRead:+:2 $dRead_Xc8j $dRead1_Xc8l) `cast` ...)
         ($fMonadP_$creturn))

$fRead:+:
$fRead:+: =
  \ @ a_Xbst @ b_Xbsv @ p1_Xbsx @ p0_Xbsz $dRead_Xc8h $dRead1_Xc8j ->
    D:Read
      ($fRead:+:_$creadsPrec $dRead_Xc8h $dRead1_Xc8j)
      ($fRead:+:_$creadList $dRead_Xc8h $dRead1_Xc8j)
      (($fRead:+:2 $dRead_Xc8h $dRead1_Xc8j) `cast` ...)
      (($fRead:+:1 $dRead_Xc8h $dRead1_Xc8j) `cast` ...)

$w$c<=
$w$c<= =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    w_scBT
    w1_scBU
    w2_scBV
    w3_scBW ->
    case w2_scBV of _ {
      L a1_abWe ->
        case w3_scBW of _ {
          L b1_abWf -> <= w_scBT a1_abWe b1_abWf;
          R ipv_sco3 -> True
        };
      R a1_abWg ->
        case w3_scBW of _ {
          L ipv_sco6 -> False;
          R b1_abWh -> <= w1_scBU a1_abWg b1_abWh
        }
    }

$fOrd:+:_$c<=
$fOrd:+:_$c<= =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    _
    w1_scBT
    w2_scBU
    w3_scBV
    w4_scBW ->
    $w$c<= w1_scBT w2_scBU w3_scBV w4_scBW

$w$c>
$w$c> =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    w_scC4
    w1_scC5
    w2_scC6
    w3_scC7 ->
    case w2_scC6 of _ {
      L a1_abWq ->
        case w3_scC7 of _ {
          L b1_abWr -> > w_scC4 a1_abWq b1_abWr;
          R ipv_scoa -> False
        };
      R a1_abWs ->
        case w3_scC7 of _ {
          L ipv_scod -> True;
          R b1_abWt -> > w1_scC5 a1_abWs b1_abWt
        }
    }

$fOrd:+:_$c>
$fOrd:+:_$c> =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    _
    w1_scC4
    w2_scC5
    w3_scC6
    w4_scC7 ->
    $w$c> w1_scC4 w2_scC5 w3_scC6 w4_scC7

$w$c>=
$w$c>= =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    w_scCf
    w1_scCg
    w2_scCh
    w3_scCi ->
    case w2_scCh of _ {
      L a1_abWk ->
        case w3_scCi of _ {
          L b1_abWl -> >= w_scCf a1_abWk b1_abWl;
          R ipv_scoh -> False
        };
      R a1_abWm ->
        case w3_scCi of _ {
          L ipv_scok -> True;
          R b1_abWn -> >= w1_scCg a1_abWm b1_abWn
        }
    }

$fOrd:+:_$c>=
$fOrd:+:_$c>= =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    _
    w1_scCf
    w2_scCg
    w3_scCh
    w4_scCi ->
    $w$c>= w1_scCf w2_scCg w3_scCh w4_scCi

$w$c<
$w$c< =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    w_scCq
    w1_scCr
    w2_scCs
    w3_scCt ->
    case w2_scCs of _ {
      L a1_abW8 ->
        case w3_scCt of _ {
          L b1_abW9 -> < w_scCq a1_abW8 b1_abW9;
          R ipv_scoo -> True
        };
      R a1_abWa ->
        case w3_scCt of _ {
          L ipv_scor -> False;
          R b1_abWb -> < w1_scCr a1_abWa b1_abWb
        }
    }

$fOrd:+:_$c<
$fOrd:+:_$c< =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    _
    w1_scCq
    w2_scCr
    w3_scCs
    w4_scCt ->
    $w$c< w1_scCq w2_scCr w3_scCs w4_scCt

$w$ccompare
$w$ccompare =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    w_scCB
    w1_scCC
    w2_scCD
    w3_scCE ->
    case w2_scCD of _ {
      L a1_abW2 ->
        case w3_scCE of _ {
          L b1_abW3 -> compare w_scCB a1_abW2 b1_abW3;
          R ipv_scov -> LT
        };
      R a1_abW4 ->
        case w3_scCE of _ {
          L ipv_scoy -> GT;
          R b1_abW5 -> compare w1_scCC a1_abW4 b1_abW5
        }
    }

$fOrd:+:_$ccompare
$fOrd:+:_$ccompare =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    _
    w1_scCB
    w2_scCC
    w3_scCD
    w4_scCE ->
    $w$ccompare w1_scCB w2_scCC w3_scCD w4_scCE

$w$cmin
$w$cmin =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    w_scCM
    w1_scCN
    w2_scCO
    w3_scCP ->
    case w2_scCO of wild_X3T {
      L a1_abWe ->
        case w3_scCP of wild1_XK {
          L b1_abWf ->
            case <= w_scCM a1_abWe b1_abWf of _ {
              False -> wild1_XK;
              True -> wild_X3T
            };
          R ipv_sco3 -> wild_X3T
        };
      R a1_abWg ->
        case w3_scCP of wild1_XK {
          L ipv_sco6 -> wild1_XK;
          R b1_abWh ->
            case <= w1_scCN a1_abWg b1_abWh of _ {
              False -> wild1_XK;
              True -> wild_X3T
            }
        }
    }

$fOrd:+:_$cmin
$fOrd:+:_$cmin =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    _
    w1_scCM
    w2_scCN
    w3_scCO
    w4_scCP ->
    $w$cmin w1_scCM w2_scCN w3_scCO w4_scCP

$w$cmax
$w$cmax =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    w_scCX
    w1_scCY
    w2_scCZ
    w3_scD0 ->
    case w2_scCZ of wild_X3T {
      L a1_abWe ->
        case w3_scD0 of wild1_XK {
          L b1_abWf ->
            case <= w_scCX a1_abWe b1_abWf of _ {
              False -> wild_X3T;
              True -> wild1_XK
            };
          R ipv_sco3 -> wild1_XK
        };
      R a1_abWg ->
        case w3_scD0 of wild1_XK {
          L ipv_sco6 -> wild_X3T;
          R b1_abWh ->
            case <= w1_scCY a1_abWg b1_abWh of _ {
              False -> wild_X3T;
              True -> wild1_XK
            }
        }
    }

$fOrd:+:_$cmax
$fOrd:+:_$cmax =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    _
    w1_scCX
    w2_scCY
    w3_scCZ
    w4_scD0 ->
    $w$cmax w1_scCX w2_scCY w3_scCZ w4_scD0

$fOrd:+:
$fOrd:+: =
  \ @ a_XbsD
    @ b_XbsF
    @ p1_XbsH
    @ p0_XbsJ
    $dEq_ac5v
    $dOrd_ac5w
    $dOrd1_ac5x ->
    D:Ord
      $dEq_ac5v
      (\ w_scCD w1_scCE ->
         $w$ccompare $dOrd_ac5w $dOrd1_ac5x w_scCD w1_scCE)
      (\ w_scCs w1_scCt -> $w$c< $dOrd_ac5w $dOrd1_ac5x w_scCs w1_scCt)
      (\ w_scCh w1_scCi -> $w$c>= $dOrd_ac5w $dOrd1_ac5x w_scCh w1_scCi)
      (\ w_scC6 w1_scC7 -> $w$c> $dOrd_ac5w $dOrd1_ac5x w_scC6 w1_scC7)
      (\ w_scBV w1_scBW -> $w$c<= $dOrd_ac5w $dOrd1_ac5x w_scBV w1_scBW)
      (\ w_scCZ w1_scD0 -> $w$cmax $dOrd_ac5w $dOrd1_ac5x w_scCZ w1_scD0)
      (\ w_scCO w1_scCP -> $w$cmin $dOrd_ac5w $dOrd1_ac5x w_scCO w1_scCP)

$fShow:+:2
$fShow:+:2 = unpackCString# "L "

$fShow:+:1
$fShow:+:1 = unpackCString# "R "

$w$cshowsPrec
$w$cshowsPrec =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    w_scD6
    w1_scD7
    ww_scDa
    w2_scDc ->
    case w2_scDc of _ {
      L b1_abVX ->
        let {
          g_a122
          g_a122 = showsPrec w_scD6 $fRead:+:3 b1_abVX } in
        case >=# ww_scDa 11 of _ {
          False -> \ x_a123 -> ++ $fShow:+:2 (g_a122 x_a123);
          True ->
            \ x_a11M -> : shows11 (++ $fShow:+:2 (g_a122 (: shows10 x_a11M)))
        };
      R b1_abVZ ->
        let {
          g_a122
          g_a122 = showsPrec w1_scD7 $fRead:+:3 b1_abVZ } in
        case >=# ww_scDa 11 of _ {
          False -> \ x_a123 -> ++ $fShow:+:1 (g_a122 x_a123);
          True ->
            \ x_a11M -> : shows11 (++ $fShow:+:1 (g_a122 (: shows10 x_a11M)))
        }
    }

$fShow:+:_$cshowsPrec
$fShow:+:_$cshowsPrec =
  \ @ a_abqr
    @ b_abqs
    @ p1_abqt
    @ p0_abqu
    w_scD6
    w1_scD7
    w2_scD8
    w3_scDc ->
    case w2_scD8 of _ { I# ww_scDa ->
    $w$cshowsPrec w_scD6 w1_scD7 ww_scDa w3_scDc
    }

$fShow:+:_$cshowList
$fShow:+:_$cshowList =
  \ @ a_XbsF
    @ b_XbsH
    @ p1_XbsJ
    @ p0_XbsL
    $dShow_ac5c
    $dShow1_ac5d
    eta_B2
    eta1_X43 ->
    showList__
      (\ w_scDc -> $w$cshowsPrec $dShow_ac5c $dShow1_ac5d 0 w_scDc)
      eta_B2
      eta1_X43

$fShow:+:_$cshow
$fShow:+:_$cshow =
  \ @ a_XbsH
    @ b_XbsJ
    @ p1_XbsL
    @ p0_XbsN
    $dShow_ac5c
    $dShow1_ac5d
    x_a12A ->
    $w$cshowsPrec $dShow_ac5c $dShow1_ac5d 0 x_a12A ([])

$fShow:+:
$fShow:+: =
  \ @ a_XbsG @ b_XbsI @ p1_XbsK @ p0_XbsM $dShow_ac5c $dShow1_ac5d ->
    D:Show
      ($fShow:+:_$cshowsPrec $dShow_ac5c $dShow1_ac5d)
      ($fShow:+:_$cshow $dShow_ac5c $dShow1_ac5d)
      ($fShow:+:_$cshowList $dShow_ac5c $dShow1_ac5d)

$fEq:+:_$c==
$fEq:+:_$c== =
  \ @ a_XbsI
    @ b_XbsK
    @ p1_XbsM
    @ p0_XbsO
    $dEq_ac4Y
    $dEq1_ac4Z
    ds_dckG
    ds1_dckH ->
    case ds_dckG of _ {
      L a1_abVQ ->
        case ds1_dckH of _ {
          L b1_abVR -> == $dEq_ac4Y a1_abVQ b1_abVR;
          R ipv_scoG -> False
        };
      R a1_abVS ->
        case ds1_dckH of _ {
          L ipv_scoJ -> False;
          R b1_abVT -> == $dEq1_ac4Z a1_abVS b1_abVT
        }
    }

$fEq:+:_$c/=
$fEq:+:_$c/= =
  \ @ a_XbsJ
    @ b_XbsL
    @ p1_XbsN
    @ p0_XbsP
    $dEq_ac4Y
    $dEq1_ac4Z
    a_abVU
    b_abVV ->
    case a_abVU of _ {
      L a1_abVQ ->
        case b_abVV of _ {
          L b1_abVR ->
            case == $dEq_ac4Y a1_abVQ b1_abVR of _ {
              False -> True;
              True -> False
            };
          R ipv_scoG -> True
        };
      R a1_abVS ->
        case b_abVV of _ {
          L ipv_scoJ -> True;
          R b1_abVT ->
            case == $dEq1_ac4Z a1_abVS b1_abVT of _ {
              False -> True;
              True -> False
            }
        }
    }

$fEq:+:
$fEq:+: =
  \ @ a_XbsK @ b_XbsM @ p1_XbsO @ p0_XbsQ $dEq_ac4Y $dEq1_ac4Z ->
    D:Eq
      ($fEq:+:_$c== $dEq_ac4Y $dEq1_ac4Z)
      ($fEq:+:_$c/= $dEq_ac4Y $dEq1_ac4Z)



[ 6 of 11] Compiling Data.Yoko.View   ( Data/Yoko/View.hs, Data/Yoko/View.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 255, types: 1,35, coercions: 195}

reband2
reband2 =
  \ @ k_ae7A @ k_ae7B @ t_ae4L @ r_ae4M tpl_B1 -> tpl_B1 `cast` ...

reband1
reband1 =
  \ @ k_ae7m @ k_ae7n @ t_ae4P @ r_ae4Q tpl_B1 -> tpl_B1 `cast` ...

reband0
reband0 =
  \ @ k_ae78 @ k_ae79 @ t_ae4T @ r_ae4U tpl_B1 -> tpl_B1 `cast` ...

$p1DT2
$p1DT2 =
  \ @ t_ae4X tpl_B1 -> case tpl_B1 of _ { D:DT2 tpl_B2 _ -> tpl_B2 }

disband2
disband2 =
  \ @ t_ae4X tpl_B1 -> case tpl_B1 of _ { D:DT2 _ tpl_B3 -> tpl_B3 }

$p1DT1
$p1DT1 =
  \ @ t_ae50 tpl_B1 -> case tpl_B1 of _ { D:DT1 tpl_B2 _ -> tpl_B2 }

disband1
disband1 =
  \ @ t_ae50 tpl_B1 -> case tpl_B1 of _ { D:DT1 _ tpl_B3 -> tpl_B3 }

$p1DT0
$p1DT0 =
  \ @ t_ae53 tpl_B1 -> case tpl_B1 of _ { D:DT0 tpl_B2 _ -> tpl_B2 }

disband0
disband0 =
  \ @ t_ae53 tpl_B1 -> case tpl_B1 of _ { D:DT0 _ tpl_B3 -> tpl_B3 }

$p1DC2
$p1DC2 =
  \ @ dc_ae58 tpl_B1 ->
    case tpl_B1 of _ { D:DC2 tpl_B2 _ _ -> tpl_B2 }

$p2DC2
$p2DC2 =
  \ @ dc_ae58 tpl_B1 ->
    case tpl_B1 of _ { D:DC2 _ tpl_B3 _ -> tpl_B3 }

rejoin2
rejoin2 =
  \ @ dc_ae58 tpl_B1 ->
    case tpl_B1 of _ { D:DC2 _ _ tpl_B4 -> tpl_B4 }

$p1DC1
$p1DC1 =
  \ @ dc_ae5b tpl_B1 ->
    case tpl_B1 of _ { D:DC1 tpl_B2 _ _ -> tpl_B2 }

$p2DC1
$p2DC1 =
  \ @ dc_ae5b tpl_B1 ->
    case tpl_B1 of _ { D:DC1 _ tpl_B3 _ -> tpl_B3 }

rejoin1
rejoin1 =
  \ @ dc_ae5b tpl_B1 ->
    case tpl_B1 of _ { D:DC1 _ _ tpl_B4 -> tpl_B4 }

$p1DC0
$p1DC0 =
  \ @ dc_ae5d tpl_B1 ->
    case tpl_B1 of _ { D:DC0 tpl_B2 _ _ -> tpl_B2 }

$p2DC0
$p2DC0 =
  \ @ dc_ae5d tpl_B1 ->
    case tpl_B1 of _ { D:DC0 _ tpl_B3 _ -> tpl_B3 }

rejoin0
rejoin0 =
  \ @ dc_ae5d tpl_B1 ->
    case tpl_B1 of _ { D:DC0 _ _ tpl_B4 -> tpl_B4 }

$fReband0**tN0_$creband0
$fReband0**tN0_$creband0 =
  \ @ t_ae6K
    @ dc_ae6L
    $dDC0_aeaB
    cobox_aeaC
    @ p1_ta7
    @ p0_ta8
    ds_debZ ->
    case cobox_aeaC of _ { Eq# cobox2_dec9 ->
    (rejoin0 $dDC0_aeaB (ds_debZ `cast` ...)) `cast` ...
    }

$fReband0**tN0
$fReband0**tN0 = $fReband0**tN0_$creband0 `cast` ...

$fReband0**t:+:_$creband0
$fReband0**t:+:_$creband0 =
  \ @ t_ae6F
    @ l_ae6G
    @ r_ae6H
    $dReband0_aeap
    $dReband1_aeaq
    @ p1_t9T
    @ p0_t9U
    ds_debU ->
    case ds_debU of _ {
      L x_ae6I -> ($dReband0_aeap `cast` ...) x_ae6I;
      R x_ae6J -> ($dReband1_aeaq `cast` ...) x_ae6J
    }

$fReband0**t:+:
$fReband0**t:+: = $fReband0**t:+:_$creband0 `cast` ...

$fReband1**tN1_$creband1
$fReband1**tN1_$creband1 =
  \ @ t_ae6C
    @ dc_ae6D
    $dDC1_aead
    cobox_aeae
    @ p1_t9P
    @ p0_t9Q
    eta_B1 ->
    case cobox_aeae of _ { Eq# cobox2_dec7 ->
    (rejoin1 $dDC1_aead (eta_B1 `cast` ...)) `cast` ...
    }

$fReband1**tN1
$fReband1**tN1 = $fReband1**tN1_$creband1 `cast` ...

$fReband1**t:+:_$creband1
$fReband1**t:+:_$creband1 =
  \ @ t_ae6x
    @ l_ae6y
    @ r_ae6z
    $dReband1_aea1
    $dReband2_aea2
    @ p1_t9B
    @ p0_t9C
    ds_debL ->
    case ds_debL of _ {
      L x_ae6A -> ($dReband1_aea1 `cast` ...) x_ae6A;
      R x_ae6B -> ($dReband2_aea2 `cast` ...) x_ae6B
    }

$fReband1**t:+:
$fReband1**t:+: = $fReband1**t:+:_$creband1 `cast` ...

$fReband2**tN2_$creband2
$fReband2**tN2_$creband2 =
  \ @ t_ae6u
    @ dc_ae6v
    $dDC2_ae9P
    cobox_ae9Q
    @ p1_t9w
    @ p0_t9x
    eta_B1 ->
    case cobox_ae9Q of _ { Eq# cobox2_dec4 ->
    (rejoin2 $dDC2_ae9P (eta_B1 `cast` ...)) `cast` ...
    }

$fReband2**tN2
$fReband2**tN2 = $fReband2**tN2_$creband2 `cast` ...

$fReband2**t:+:_$creband2
$fReband2**t:+:_$creband2 =
  \ @ t_ae6p
    @ l_ae6q
    @ r_ae6r
    $dReband2_ae9D
    $dReband1_ae9E
    @ p1_t9i
    @ p0_t9j
    ds_debA ->
    case ds_debA of _ {
      L x_ae6s -> ($dReband2_ae9D `cast` ...) x_ae6s;
      R x_ae6t -> ($dReband1_ae9E `cast` ...) x_ae6t
    }

$fReband2**t:+:
$fReband2**t:+: = $fReband2**t:+:_$creband2 `cast` ...



[ 7 of 11] Compiling Data.Yoko.MinCtors.Minima ( Data/Yoko/MinCtors/Minima.hs, Data/Yoko/MinCtors/Minima.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 817, types: 2,866, coercions: 1,129}

$p1SiblingInC
$p1SiblingInC =
  \ @ k_aeKy @ ts_aeJ2 @ t_aeJ3 tpl_B1 -> tpl_B1 `cast` ...

a_rf8x
a_rf8x = \ @ k_aeKy @ ts_aeJ2 @ t_aeJ3 tpl_B1 -> tpl_B1

$fSiblingInCktst
$fSiblingInCktst = a_rf8x `cast` ...

addMinima1_$dEq
addMinima1_$dEq = $fEq(,) $fEqInt $fEqInt

addMinima1_$dOrd
addMinima1_$dOrd = $fOrd(,) addMinima1_$dEq $fOrdInt $fOrdInt

$fFunctorMin2
$fFunctorMin2 =
  \ @ a_t7L @ b_t7M f_aeKr ds_dePd -> f_aeKr (ds_dePd `cast` ...)

$fFunctorMin_$cfmap
$fFunctorMin_$cfmap = $fFunctorMin2 `cast` ...

$fFunctorMin1
$fFunctorMin1 = \ @ a_a8w9 @ b_a8wa x_a8wc _ -> x_a8wc

$fFunctorMin_$c<$
$fFunctorMin_$c<$ = $fFunctorMin1 `cast` ...

$fFunctorMin
$fFunctorMin =
  D:Functor ($fFunctorMin2 `cast` ...) ($fFunctorMin1 `cast` ...)

plug0'1
plug0'1 =
  \ i_aeJj eta_XY ->
    mapKeysMonotonic
      (\ ds_deOU ->
         case ds_deOU of _ { (np1_aeJk, np0_aeJl) ->
         ($fNumInt_$c* i_aeJj np1_aeJk, $fNumInt_$c* i_aeJj np0_aeJl)
         })
      (map
         ((\ ds_dePd -> $fNumInt_$c* i_aeJj (ds_dePd `cast` ...))
          `cast` ...)
         (eta_XY `cast` ...))

scaleSiblingInTs
scaleSiblingInTs =
  \ @ k_t30 @ ts_t31 i_aeJu eta_X14 ->
    let {
      lvl3_sf6h
      lvl3_sf6h = $fFunctorCVec_$cfmap ($fNumInt_$c* i_aeJu) } in
    (mapKeysMonotonic
       (\ ds_deOB ->
          case ds_deOB of _ { (r_aeJv, np1_aeJw, np0_aeJx) ->
          (lvl3_sf6h r_aeJv,
           $fNumInt_$c* i_aeJu np1_aeJw,
           $fNumInt_$c* i_aeJu np0_aeJx)
          })
       (map
          ((\ ds_dePd -> $fNumInt_$c* i_aeJu (ds_dePd `cast` ...))
           `cast` ...)
          (eta_X14 `cast` ...)))
    `cast` ...

addSiblingInTs1
addSiblingInTs1 =
  \ @ k_t1v @ ts_t1w _ x_aVp y_aVq ->
    $fOrdInt_$cmin (x_aVp `cast` ...) (y_aVq `cast` ...)

plug0
plug0 =
  \ @ k_t1v @ ts_t1w $dOrd_aeLP ->
    let {
      $dEq_seTn
      $dEq_seTn = $p1Ord $dOrd_aeLP } in
    let {
      $dEq1_seTm
      $dEq1_seTm = $fEq(,,) $dEq_seTn $fEqInt $fEqInt } in
    let {
      $dOrd1_seTl
      $dOrd1_seTl =
        $fOrd(,,) $dEq1_seTm $dOrd_aeLP $fOrdInt $fOrdInt } in
    \ f_aeK4 s0_aeK5 ->
      letrec {
        go_a16W
        go_a16W =
          \ ds_a16X ->
            case ds_a16X of _ {
              [] -> (Tip) `cast` ...;
              : y_a172 ys_a173 ->
                case y_a172 of _ { (x_aUm, ds1_aUn) ->
                case x_aUm of _ { (ds2_deOH, np0_aeK6) ->
                (unionWithKey
                   $dOrd1_seTl
                   ((addSiblingInTs1) `cast` ...)
                   (map
                      ((\ ds3_dePd ->
                          $fNumInt_$c+ (ds3_dePd `cast` ...) (ds1_aUn `cast` ...))
                       `cast` ...)
                      ((scaleSiblingInTs np0_aeK6 s0_aeK5) `cast` ...))
                   ((go_a16W ys_a173) `cast` ...))
                `cast` ...
                }
                }
            }; } in
      go_a16W ($fDataMap_go ([]) (f_aeK4 `cast` ...))

Rec {
addSiblingInTs_w
addSiblingInTs_w =
  \ @ k1_t9V @ ts1_t9W ds2_d8gW ds3_d8gX ->
    case ds2_d8gW of _ {
      VNil rb_d8pE ->
        case ds3_d8gX of _ {
          VNil rb1_d8pC -> ($WVNil) `cast` ...;
          VCons @ ipv0_s8r3 @ ipv1_s8r4 ipv_s8r5 ipv1_s8r6 ipv2_s8r7 ->
            cvZipWith1
        };
      VCons @ t_a82h @ ts2_a82i rb_d8pe a3_a7VH as_a7VI ->
        case ds3_d8gX of _ {
          VNil ipv_s8ra -> cvZipWith1;
          VCons @ t1_a82k @ ts3_a82l rb1_d8pc b_a7VJ bs_a7VK ->
            (VCons
               @~ <(':) k1_t9V t1_a82k ts2_a82i>
               (($fNumInt_$c+ (a3_a7VH `cast` ...) (b_a7VJ `cast` ...))
                `cast` ...)
               (addSiblingInTs_w as_a7VI (bs_a7VK `cast` ...)))
            `cast` ...
        }
    }
end Rec }

addSiblingInTs
addSiblingInTs =
  \ @ k_t2T @ ts_t2U $dOrd_aeLw ->
    let {
      $dEq_seTf
      $dEq_seTf = $p1Ord $dOrd_aeLw } in
    let {
      $dEq1_seTe
      $dEq1_seTe = $fEq(,,) $dEq_seTf $fEqInt $fEqInt } in
    let {
      $dOrd1_seTd
      $dOrd1_seTd =
        $fOrd(,,) $dEq1_seTe $dOrd_aeLw $fOrdInt $fOrdInt } in
    \ m_aeJy m'_aeJz ->
      let {
        lvl3_sf6l
        lvl3_sf6l = $fDataMap_go ([]) (m'_aeJz `cast` ...) } in
      letrec {
        go_a16W
        go_a16W =
          \ ds_a16X ->
            case ds_a16X of _ {
              [] -> (Tip) `cast` ...;
              : y_a172 ys_a173 ->
                case y_a172 of _ { (x_aUm, ds1_aUn) ->
                case x_aUm of _ { (rs_aeJA, np1_aeJB, np0_aeJC) ->
                letrec {
                  go1_X183
                  go1_X183 =
                    \ ds2_X185 ->
                      case ds2_X185 of _ {
                        [] -> (Tip) `cast` ...;
                        : y1_X18c ys1_X18e ->
                          case y1_X18c of _ { (x1_XVC, ds3_XVE) ->
                          case x1_XVC of _ { (rs'_aeJE, np1'_aeJF, np0'_aeJG) ->
                          (unionWithKey
                             $dOrd1_seTd
                             ((addSiblingInTs1) `cast` ...)
                             (Bin
                                1
                                ((addSiblingInTs_w (rs_aeJA `cast` ...) (rs'_aeJE `cast` ...))
                                 `cast` ...,
                                 $fNumInt_$c+ np1_aeJB np1'_aeJF,
                                 $fNumInt_$c+ np0_aeJC np0'_aeJG)
                                (case ds1_aUn `cast` ... of _ { I# x2_aeQG ->
                                 case ds3_XVE `cast` ... of _ { I# y2_aeQK ->
                                 (I# (+# x2_aeQG y2_aeQK)) `cast` ...
                                 }
                                 })
                                (Tip)
                                (Tip))
                             ((go1_X183 ys1_X18e) `cast` ...))
                          `cast` ...
                          }
                          }
                      }; } in
                (unionWithKey
                   $dOrd1_seTd
                   ((addSiblingInTs1) `cast` ...)
                   ((go1_X183 lvl3_sf6l) `cast` ...)
                   ((go_a16W ys_a173) `cast` ...))
                `cast` ...
                }
                }
            }; } in
      go_a16W ($fDataMap_go ([]) (m_aeJy `cast` ...))

plug10
plug10 =
  \ @ k_t1l @ ts_t1m $dOrd_aeLW ->
    let {
      $dEq_seT7
      $dEq_seT7 = $p1Ord $dOrd_aeLW } in
    let {
      $dEq1_seT6
      $dEq1_seT6 = $fEq(,,) $dEq_seT7 $fEqInt $fEqInt } in
    let {
      $dOrd1_seT5
      $dOrd1_seT5 =
        $fOrd(,,) $dEq1_seT6 $dOrd_aeLW $fOrdInt $fOrdInt } in
    let {
      lvl3_sf6n
      lvl3_sf6n = addSiblingInTs $dOrd_aeLW } in
    \ f_aeK8 s1_aeK9 s0_aeKa ->
      letrec {
        go_a16W
        go_a16W =
          \ ds_a16X ->
            case ds_a16X of _ {
              [] -> (Tip) `cast` ...;
              : y_a172 ys_a173 ->
                case y_a172 of _ { (x_aUm, ds1_aUn) ->
                case x_aUm of _ { (np1_aeKb, np0_aeKc) ->
                (unionWithKey
                   $dOrd1_seT5
                   ((addSiblingInTs1) `cast` ...)
                   (map
                      ((\ ds2_dePd ->
                          $fNumInt_$c+ (ds2_dePd `cast` ...) (ds1_aUn `cast` ...))
                       `cast` ...)
                      ((lvl3_sf6n
                          (scaleSiblingInTs np1_aeKb s1_aeK9)
                          (scaleSiblingInTs np0_aeKc s0_aeKa))
                       `cast` ...))
                   ((go_a16W ys_a173) `cast` ...))
                `cast` ...
                }
                }
            }; } in
      go_a16W ($fDataMap_go ([]) (f_aeK8 `cast` ...))

addMinima2
addMinima2 =
  \ _ x_aVp y_aVq ->
    $fOrdInt_$cmin (x_aVp `cast` ...) (y_aVq `cast` ...)

plug0'
plug0' =
  \ f_aeKe s0_aeKf ->
    letrec {
      go_a16W
      go_a16W =
        \ ds_a16X ->
          case ds_a16X of _ {
            [] -> (Tip) `cast` ...;
            : y_a172 ys_a173 ->
              case y_a172 of _ { (x_aUm, ds1_aUn) ->
              case x_aUm of _ { (ds2_deP6, np0_aeKg) ->
              (unionWithKey
                 addMinima1_$dOrd
                 (addMinima2 `cast` ...)
                 (map
                    ((\ ds3_dePd ->
                        $fNumInt_$c+ (ds3_dePd `cast` ...) (ds1_aUn `cast` ...))
                     `cast` ...)
                    (plug0'1 np0_aeKg s0_aeKf))
                 ((go_a16W ys_a173) `cast` ...))
              `cast` ...
              }
              }
          }; } in
    go_a16W ($fDataMap_go ([]) (f_aeKe `cast` ...))

addMinima1
addMinima1 =
  \ m_aeJm m'_aeJn ->
    let {
      lvl3_sf6r
      lvl3_sf6r = $fDataMap_go ([]) (m'_aeJn `cast` ...) } in
    letrec {
      go_a16W
      go_a16W =
        \ ds_a16X ->
          case ds_a16X of _ {
            [] -> (Tip) `cast` ...;
            : y_a172 ys_a173 ->
              case y_a172 of _ { (x_aUm, ds1_aUn) ->
              case x_aUm of _ { (np1_aeJo, np0_aeJp) ->
              letrec {
                go1_X17W
                go1_X17W =
                  \ ds2_X17Y ->
                    case ds2_X17Y of _ {
                      [] -> (Tip) `cast` ...;
                      : y1_X185 ys1_X187 ->
                        case y1_X185 of _ { (x1_XVv, ds3_XVx) ->
                        case x1_XVv of _ { (np1'_aeJr, np0'_aeJs) ->
                        (unionWithKey
                           addMinima1_$dOrd
                           (addMinima2 `cast` ...)
                           (Bin
                              1
                              ($fNumInt_$c+ np1_aeJo np1'_aeJr, $fNumInt_$c+ np0_aeJp np0'_aeJs)
                              (case ds1_aUn `cast` ... of _ { I# x2_aeQG ->
                               case ds3_XVx `cast` ... of _ { I# y2_aeQK ->
                               (I# (+# x2_aeQG y2_aeQK)) `cast` ...
                               }
                               })
                              (Tip)
                              (Tip))
                           ((go1_X17W ys1_X187) `cast` ...))
                        `cast` ...
                        }
                        }
                    }; } in
              (unionWithKey
                 addMinima1_$dOrd
                 (addMinima2 `cast` ...)
                 ((go1_X17W lvl3_sf6r) `cast` ...)
                 ((go_a16W ys_a173) `cast` ...))
              `cast` ...
              }
              }
          }; } in
    go_a16W ($fDataMap_go ([]) (m_aeJm `cast` ...))

plug10'
plug10' =
  \ f_aeKi s1_aeKj s0_aeKk ->
    letrec {
      go_a16W
      go_a16W =
        \ ds_a16X ->
          case ds_a16X of _ {
            [] -> (Tip) `cast` ...;
            : y_a172 ys_a173 ->
              case y_a172 of _ { (x_aUm, ds1_aUn) ->
              case x_aUm of _ { (np1_aeKl, np0_aeKm) ->
              (unionWithKey
                 addMinima1_$dOrd
                 (addMinima2 `cast` ...)
                 (map
                    ((\ ds2_dePd ->
                        $fNumInt_$c+ (ds2_dePd `cast` ...) (ds1_aUn `cast` ...))
                     `cast` ...)
                    ((addMinima1
                        ((plug0'1 np1_aeKl s1_aeKj) `cast` ...)
                        ((plug0'1 np0_aeKm s0_aeKk) `cast` ...))
                     `cast` ...))
                 ((go_a16W ys_a173) `cast` ...))
              `cast` ...
              }
              }
          }; } in
    go_a16W ($fDataMap_go ([]) (f_aeKi `cast` ...))

lvl_rf8y
lvl_rf8y =
  \ @ k_t1U @ ts_t1V -> $fFoldableCVec_$cfoldMap $fMonoidAll

lvl1_rf8z
lvl1_rf8z =
  \ x_aePE ->
    case x_aePE of _ { I# y_aeR2 ->
    case y_aeR2 of _ {
      __DEFAULT -> False;
      0 -> True
    }
    }

a1_rf8A
a1_rf8A = addMinima2

Rec {
poly_go_rf8B
poly_go_rf8B =
  \ @ k_t1U @ ts_t1V ds_a16X ->
    case ds_a16X of _ {
      [] -> (Tip) `cast` ...;
      : y_a172 ys_a173 ->
        case y_a172 of _ { (x_aUm, ds1_aUn) ->
        case x_aUm of _ { (recs_aeJK, np1_aeJL, np0_aeJM) ->
        case (lvl_rf8y (lvl1_rf8z `cast` ...) recs_aeJK) `cast` ... of _ {
          False ->
            (unionWithKey
               addMinima1_$dOrd
               (a1_rf8A `cast` ...)
               (Tip)
               ((poly_go_rf8B ys_a173) `cast` ...))
            `cast` ...;
          True ->
            (unionWithKey
               addMinima1_$dOrd
               (a1_rf8A `cast` ...)
               (Bin 1 (np1_aeJL, np0_aeJM) ds1_aUn (Tip) (Tip))
               ((poly_go_rf8B ys_a173) `cast` ...))
            `cast` ...
        }
        }
        }
    }
end Rec }

lvl2_rf8C
lvl2_rf8C =
  \ @ k_t1U @ ts_t1V ctors_aeJJ ->
    poly_go_rf8B ($fDataMap_go ([]) (ctors_aeJJ `cast` ...))

initialize_reIX
initialize_reIX =
  \ @ k_t1U @ ts_t1V -> $fFunctorCVec_$cfmap (lvl2_rf8C)

Rec {
w_rf8D
w_rf8D =
  \ @ k1_t9V @ ts1_t9W ds2_d8gW ds3_d8gX ->
    case ds2_d8gW of _ {
      VNil rb_d8pE ->
        case ds3_d8gX of _ {
          VNil rb1_d8pC -> ($WVNil) `cast` ...;
          VCons @ ipv0_s8r3 @ ipv1_s8r4 ipv_s8r5 ipv1_s8r6 ipv2_s8r7 ->
            cvZipWith1
        };
      VCons @ t_a82h @ ts2_a82i rb_d8pe a3_a7VH as_a7VI ->
        case ds3_d8gX of _ {
          VNil ipv_s8ra -> cvZipWith1;
          VCons @ t1_a82k @ ts3_a82l rb1_d8pc b_a7VJ bs_a7VK ->
            (VCons
               @~ <(':) k1_t9V t1_a82k ts2_a82i>
               (case a3_a7VH `cast` ... of wild2_aV4 {
                  Bin rb2_aeUm ds1_aeUn ds4_aeUo ds5_aeUp ds6_aeUq ->
                    wild2_aV4 `cast` ...;
                  Tip -> b_a7VJ
                })
               (w_rf8D as_a7VI (bs_a7VK `cast` ...)))
            `cast` ...
        }
    }
end Rec }

a2_rf8E
a2_rf8E = addMinima2

Rec {
lgo_rf8F
lgo_rf8F =
  \ z_aeRH ds_aeRI ->
    case ds_aeRI of _ {
      [] -> z_aeRH;
      : x_aeRN xs_aeRO -> lgo_rf8F (addMinima1 z_aeRH x_aeRN) xs_aeRO
    }
end Rec }

$wsolve_sibling_set'
$wsolve_sibling_set' =
  \ @ k_aeKS @ ts_aeJf ww_sf3o w1_sf3s w2_sf3t ->
    letrec {
      w3_seST
      w3_seST =
        \ x_aeK2 ->
          let {
            a3_seVe
            a3_seVe =
              letrec {
                w4_sf6c
                w4_sf6c =
                  \ @ k1_tdm @ ts1_tdn x1_a7WM ->
                    case x1_a7WM of _ {
                      VNil rb_d8nh -> Just (($WVNil) `cast` ...);
                      VCons @ t_a87l @ ts2_a87m rb_d8n5 a4_a7WN as_a7WO ->
                        case a4_a7WN `cast` ... of _ { (idx_aeJV, times_aeJW) ->
                        case times_aeJW of wild2_aeRg { I# x2_aeRi ->
                        case <=# x2_aeRi 0 of _ {
                          False ->
                            case (cvAt1 idx_aeJV (x_aeK2 `cast` ...)) `cast` ... of wild4_aV4 {
                              Bin rb1_aeUm ds1_aeUn ds2_aeUo ds3_aeUp ds4_aeUq ->
                                case w4_sf6c as_a7WO of _ {
                                  Nothing -> Nothing;
                                  Just x3_aeZe ->
                                    Just
                                      ((VCons
                                          @~ <(':) k1_tdm t_a87l ts2_a87m>
                                          ((Just
                                              ((plug0'1 wild2_aeRg (wild4_aV4 `cast` ...))
                                               `cast` ...))
                                           `cast` ...)
                                          x3_aeZe)
                                       `cast` ...)
                                };
                              Tip -> Nothing
                            };
                          True ->
                            case w4_sf6c as_a7WO of _ {
                              Nothing -> Nothing;
                              Just x3_aeZe ->
                                Just
                                  ((VCons
                                      @~ <(':) k1_tdm t_a87l ts2_a87m>
                                      ((Nothing) `cast` ...)
                                      x3_aeZe)
                                   `cast` ...)
                            }
                        }
                        }
                        }
                    }; } in
              letrec {
                go_sf6a
                go_sf6a =
                  \ ds_a16X ->
                    case ds_a16X of _ {
                      [] -> (Tip) `cast` ...;
                      : y_a172 ys_a173 ->
                        case y_a172 of _ { (x1_aUm, ds1_aUn) ->
                        case x1_aUm of _ { (recs_aeJQ, np1_aeJR, np0_aeJS) ->
                        case w4_sf6c
                               (cvAddIndexes2 (w1_sf3s `cast` ...) (recs_aeJQ `cast` ...))
                        of _ {
                          Nothing ->
                            (unionWithKey
                               addMinima1_$dOrd
                               (a2_rf8E `cast` ...)
                               (Tip)
                               ((go_sf6a ys_a173) `cast` ...))
                            `cast` ...;
                          Just a4_aeZr ->
                            (unionWithKey
                               addMinima1_$dOrd
                               (a2_rf8E `cast` ...)
                               ((lgo_rf8F
                                   ((Bin 1 (np1_aeJR, np0_aeJS) ds1_aUn (Tip) (Tip)) `cast` ...)
                                   (catMaybes1
                                      ((($fFoldableCVec8 ((:) `cast` ...) (a4_aeZr `cast` ...))
                                        `cast` ...)
                                         ([]))))
                                `cast` ...)
                               ((go_sf6a ys_a173) `cast` ...))
                            `cast` ...
                        }
                        }
                        }
                    }; } in
              w_rf8D
                (x_aeK2 `cast` ...)
                (($fFunctorCVec_$cfmap
                    (\ w5_s17r -> go_sf6a ($fDataMap_go ([]) (w5_s17r `cast` ...)))
                    w2_sf3t)
                 `cast` ...) } in
          case ww_sf3o x_aeK2 (a3_seVe `cast` ...) of _ {
            False -> w3_seST (a3_seVe `cast` ...);
            True -> x_aeK2
          }; } in
    (w3_seST (initialize_reIX w2_sf3t)) `cast` ...

solve_sibling_set'
solve_sibling_set' =
  \ @ k_aeKS @ ts_aeJf w1_sf3m _ w3_sf3s w4_sf3t ->
    case w1_sf3m of _ { D:Eq ww_sf3o ww1_sf3p ->
    ($wsolve_sibling_set' ww_sf3o w3_sf3s w4_sf3t) `cast` ...
    }

solve_sibling_set1
solve_sibling_set1 =
  \ @ k_t2H @ ts_t2I @ t_aeLq irred_aeLr _ eta1_XT ->
    case irred_aeLr `cast` ... of _ { Eq# cobox1_dePn ->
    eta1_XT `cast` ...
    }

solve_sibling_set
solve_sibling_set =
  \ @ k_t2H @ ts_t2I $dEq_aeMC _ $dVFunctor_aeME $dVEnum_aeMF ->
    let {
      g_X13E
      g_X13E =
        ($dVFunctor_aeME `cast` ...) (Proxy) (solve_sibling_set1) } in
    \ x_X13J ->
      case $dEq_aeMC of _ { D:Eq ww_sf3o ww1_sf3p ->
      ($wsolve_sibling_set'
         ww_sf3o $dVEnum_aeMF ((g_X13E x_X13J) `cast` ...))
      `cast` ...
      }



[ 8 of 11] Compiling Data.Yoko.Invariant ( Data/Yoko/Invariant.hs, Data/Yoko/Invariant.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 451, types: 1,560, coercions: 1,64}

gen_invmap
gen_invmap =
  \ @ a_t1B
    @ b_t1C
    @ t_t1D
    $dInvariant2_agpn
    $dDT1_agpo
    eta_B2
    eta1_B1 ->
    let {
      g_X131
      g_X131 = disband1 $dDT1_agpo } in
    let {
      f_X12Y
      f_X12Y =
        ($dInvariant2_agpn `cast` ...) (id) (id) eta_B2 eta1_B1 } in
    let {
      f1_a121
      f1_a121 = (($p1DT1 $dDT1_agpo) `cast` ...) } in
    \ x_X135 -> f1_a121 (f_X12Y (g_X131 x_X135))

gen_invmap2
gen_invmap2 =
  \ @ a_t1n
    @ c_t1o
    @ b_t1p
    @ d_t1q
    @ t_t1r
    $dInvariant2_agp8
    $dDT2_agp9
    eta_B4
    eta1_B3
    eta2_B2
    eta3_B1 ->
    let {
      g_X136
      g_X136 = disband2 $dDT2_agp9 } in
    let {
      f_X133
      f_X133 =
        ($dInvariant2_agp8 `cast` ...) eta_B4 eta1_B3 eta2_B2 eta3_B1 } in
    let {
      f1_a121
      f1_a121 = (($p1DT2 $dDT2_agp9) `cast` ...) } in
    \ x_X13a -> f1_a121 (f_X133 (g_X136 x_X13a))

$fInvariant2U_$cinvmap2
$fInvariant2U_$cinvmap2 =
  \ @ a_t6f @ c_t6g @ b_t6h @ d_t6i _ _ _ _ _ -> U

$fInvariant2U
$fInvariant2U = $fInvariant2U_$cinvmap2 `cast` ...

$fInvariant2:*:_$cinvmap2
$fInvariant2:*:_$cinvmap2 =
  \ @ l_agow
    @ r_agox
    $dInvariant2_agrT
    $dInvariant1_agrU
    @ a_t5X
    @ c_t5Y
    @ b_t5Z
    @ d_t60
    f_agoy
    f'_agoz
    g_agoA
    g'_agoB
    ds_dguC ->
    case ds_dguC of _ { :*: l_agoC r_agoD ->
    :*:
      (($dInvariant2_agrT `cast` ...)
         f_agoy f'_agoz g_agoA g'_agoB l_agoC)
      (($dInvariant1_agrU `cast` ...)
         f_agoy f'_agoz g_agoA g'_agoB r_agoD)
    }

$fInvariant2:*:
$fInvariant2:*: = $fInvariant2:*:_$cinvmap2 `cast` ...

$fInvariant2C1
$fInvariant2C1 =
  \ @ k_agoI
    @ dc_agop
    @ r_agoq
    $dInvariant2_agrK
    @ a_t5J
    @ c_t5K
    @ b_t5L
    @ d_t5M
    f_agor
    f'_agos
    g_agot
    g'_agou
    ds_dguB ->
    ($dInvariant2_agrK `cast` ...)
      f_agor f'_agos g_agot g'_agou (ds_dguB `cast` ...)

$fInvariant2C_$cinvmap2
$fInvariant2C_$cinvmap2 = $fInvariant2C1 `cast` ...

$fInvariant2C
$fInvariant2C = $fInvariant2C1 `cast` ...

$fInvariant2N3
$fInvariant2N3 =
  \ @ dc_agon @ a_t5C @ c_t5D @ b_t5E @ d_t5F _ _ _ _ ds4_dguA ->
    ds4_dguA

$fInvariant2N0_$cinvmap2
$fInvariant2N0_$cinvmap2 = $fInvariant2N3 `cast` ...

$fInvariant2N0
$fInvariant2N0 = $fInvariant2N3 `cast` ...

$fInvariant2N4
$fInvariant2N4 =
  \ @ dc_agoj
    $dInvariant2_agrq
    $dGeneric1_agrr
    @ a_t5i
    @ c_t5j
    @ b_t5k
    @ d_t5l
    _
    _
    g_agok
    g'_agol
    ds2_dgui ->
    obj1
      $dGeneric1_agrr
      (($dInvariant2_agrq `cast` ...)
         (id)
         (id)
         g_agok
         g'_agol
         (rep1 $dGeneric1_agrr (ds2_dgui `cast` ...)))

$fInvariant2N1_$cinvmap2
$fInvariant2N1_$cinvmap2 = $fInvariant2N4 `cast` ...

$fInvariant2N1
$fInvariant2N1 = $fInvariant2N4 `cast` ...

$fInvariant2N5
$fInvariant2N5 =
  \ @ dc_agod
    $dInvariant2_agra
    $dGeneric2_agrb
    @ a_t50
    @ c_t51
    @ b_t52
    @ d_t53
    f_agoe
    f'_agof
    g_agog
    g'_agoh
    ds_dgu0 ->
    obj2
      $dGeneric2_agrb
      (($dInvariant2_agra `cast` ...)
         f_agoe
         f'_agof
         g_agog
         g'_agoh
         (rep2 $dGeneric2_agrb (ds_dgu0 `cast` ...)))

$fInvariant2N2_$cinvmap2
$fInvariant2N2_$cinvmap2 = $fInvariant2N5 `cast` ...

$fInvariant2N2
$fInvariant2N2 = $fInvariant2N5 `cast` ...

$fInvariant2:+:_$cinvmap2
$fInvariant2:+:_$cinvmap2 =
  \ @ l_ago5
    @ r_ago6
    $dInvariant2_agqY
    $dInvariant1_agqZ
    @ a_t4E
    @ c_t4F
    @ b_t4G
    @ d_t4H
    f_ago7
    f'_ago8
    g_ago9
    g'_agoa
    ds_dgtU ->
    case ds_dgtU of _ {
      L x_agob ->
        L (($dInvariant2_agqY `cast` ...)
             f_ago7 f'_ago8 g_ago9 g'_agoa x_agob);
      R x_agoc ->
        R (($dInvariant1_agqZ `cast` ...)
             f_ago7 f'_ago8 g_ago9 g'_agoa x_agoc)
    }

$fInvariant2:+:
$fInvariant2:+: = $fInvariant2:+:_$cinvmap2 `cast` ...

lvl_rgwM
lvl_rgwM = unpackCString# "invmap2 @Void"

$fInvariant2Void_$cinvmap2
$fInvariant2Void_$cinvmap2 =
  \ @ a_t4z @ c_t4A @ b_t4B @ d_t4C -> error lvl_rgwM

$fInvariant2Void
$fInvariant2Void = $fInvariant2Void_$cinvmap2 `cast` ...

$fInvariant2Rec3
$fInvariant2Rec3 =
  \ @ lbl_ago1
    @ t_ago2
    @ a_t4r
    @ c_t4s
    @ b_t4t
    @ d_t4u
    _
    _
    _
    _
    ds4_dgtT ->
    ds4_dgtT

$fInvariant2Rec0_$cinvmap2
$fInvariant2Rec0_$cinvmap2 = $fInvariant2Rec3 `cast` ...

$fInvariant2Rec0
$fInvariant2Rec0 = $fInvariant2Rec3 `cast` ...

$fInvariant2Rec4
$fInvariant2Rec4 =
  \ @ lbl_agnT
    @ t_agnU
    @ r_agnV
    $dInvariant_agqC
    $dInvariant2_agqD
    @ a_t45
    @ c_t46
    @ b_t47
    @ d_t48
    f_agnW
    f'_agnX
    g_agnY
    g'_agnZ
    ds_dgtO ->
    ($dInvariant_agqC `cast` ...)
      (($dInvariant2_agqD `cast` ...) f_agnW f'_agnX g_agnY g'_agnZ)
      (($dInvariant2_agqD `cast` ...) f'_agnX f_agnW g'_agnZ g_agnY)
      (ds_dgtO `cast` ...)

$fInvariant2Rec1_$cinvmap2
$fInvariant2Rec1_$cinvmap2 = $fInvariant2Rec4 `cast` ...

$fInvariant2Rec1
$fInvariant2Rec1 = $fInvariant2Rec4 `cast` ...

$fInvariant2Rec5
$fInvariant2Rec5 =
  \ @ lbl_agnK
    @ t_agnL
    @ r_agnM
    @ s_agnN
    $dInvariant2_agqj
    $dInvariant1_agqk
    $dInvariant3_agql
    @ a_t3w
    @ c_t3x
    @ b_t3y
    @ d_t3z
    f_agnO
    f'_agnP
    g_agnQ
    g'_agnR
    ds_dgtN ->
    ($dInvariant2_agqj `cast` ...)
      (($dInvariant1_agqk `cast` ...) f_agnO f'_agnP g_agnQ g'_agnR)
      (($dInvariant1_agqk `cast` ...) f'_agnP f_agnO g'_agnR g_agnQ)
      (($dInvariant3_agql `cast` ...) f_agnO f'_agnP g_agnQ g'_agnR)
      (($dInvariant3_agql `cast` ...) f'_agnP f_agnO g'_agnR g_agnQ)
      (ds_dgtN `cast` ...)

$fInvariant2Rec2_$cinvmap2
$fInvariant2Rec2_$cinvmap2 = $fInvariant2Rec5 `cast` ...

$fInvariant2Rec2
$fInvariant2Rec2 = $fInvariant2Rec5 `cast` ...

$fInvariant2Dep3
$fInvariant2Dep3 =
  \ @ t_agnI @ a_t3p @ c_t3q @ b_t3r @ d_t3s _ _ _ _ ds4_dgtM ->
    ds4_dgtM

$fInvariant2Dep0_$cinvmap2
$fInvariant2Dep0_$cinvmap2 = $fInvariant2Dep3 `cast` ...

$fInvariant2Dep0
$fInvariant2Dep0 = $fInvariant2Dep3 `cast` ...

$fInvariant2Dep4
$fInvariant2Dep4 =
  \ @ t_agnB
    @ r_agnC
    $dInvariant_agpZ
    $dInvariant2_agq0
    @ a_t34
    @ c_t35
    @ b_t36
    @ d_t37
    f_agnD
    f'_agnE
    g_agnF
    g'_agnG
    ds_dgtH ->
    ($dInvariant_agpZ `cast` ...)
      (($dInvariant2_agq0 `cast` ...) f_agnD f'_agnE g_agnF g'_agnG)
      (($dInvariant2_agq0 `cast` ...) f'_agnE f_agnD g'_agnG g_agnF)
      (ds_dgtH `cast` ...)

$fInvariant2Dep1_$cinvmap2
$fInvariant2Dep1_$cinvmap2 = $fInvariant2Dep4 `cast` ...

$fInvariant2Dep1
$fInvariant2Dep1 = $fInvariant2Dep4 `cast` ...

$fInvariant2Dep5
$fInvariant2Dep5 =
  \ @ t_agnt
    @ r_agnu
    @ s_agnv
    $dInvariant2_agpG
    $dInvariant1_agpH
    $dInvariant3_agpI
    @ a_t2w
    @ c_t2x
    @ b_t2y
    @ d_t2z
    f_agnw
    f'_agnx
    g_agny
    g'_agnz
    ds_dgtG ->
    ($dInvariant2_agpG `cast` ...)
      (($dInvariant1_agpH `cast` ...) f_agnw f'_agnx g_agny g'_agnz)
      (($dInvariant1_agpH `cast` ...) f'_agnx f_agnw g'_agnz g_agny)
      (($dInvariant3_agpI `cast` ...) f_agnw f'_agnx g_agny g'_agnz)
      (($dInvariant3_agpI `cast` ...) f'_agnx f_agnw g'_agnz g_agny)
      (ds_dgtG `cast` ...)

$fInvariant2Dep2_$cinvmap2
$fInvariant2Dep2_$cinvmap2 = $fInvariant2Dep5 `cast` ...

$fInvariant2Dep2
$fInvariant2Dep2 = $fInvariant2Dep5 `cast` ...

$fInvariant2Par3
$fInvariant2Par3 =
  \ @ a_t2q @ c_t2r @ b_t2s @ d_t2t f_agnr _ _ _ ds3_dgtF ->
    f_agnr (ds3_dgtF `cast` ...)

$fInvariant2Par1_$cinvmap2
$fInvariant2Par1_$cinvmap2 = $fInvariant2Par3 `cast` ...

$fInvariant2Par1
$fInvariant2Par1 = $fInvariant2Par3 `cast` ...

$fInvariant2Par2
$fInvariant2Par2 =
  \ @ a_t2k @ c_t2l @ b_t2m @ d_t2n _ _ g_agnp _ ds3_dgtB ->
    g_agnp (ds3_dgtB `cast` ...)

$fInvariant2Par0_$cinvmap2
$fInvariant2Par0_$cinvmap2 = $fInvariant2Par2 `cast` ...

$fInvariant2Par0
$fInvariant2Par0 = $fInvariant2Par2 `cast` ...



[ 9 of 11] Compiling Data.Yoko.TH     ( Data/Yoko/TH.hs, Data/Yoko/TH.o )

==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 6,688, types: 10,126, coercions: 1,375}

Rec {
$wpoly_go10
$wpoly_go10 =
  \ @ a_XVRn ww_sYxg ww1_sYxh w13_sYxj ->
    case w13_sYxj of _ {
      Bin rb_aVRt kx_aVRu ds2_aVRv l_aVRw r_aVRx ->
        case kx_aVRu of _ { Name ww2_sZ8k ww3_sZ8j ->
        case $fEqForeign_$ccompare ww1_sYxh ww3_sZ8j of _ {
          LT -> $wpoly_go10 ww_sYxg ww1_sYxh l_aVRw;
          EQ ->
            case $fOrd[]_$ccompare (ww_sYxg `cast` ...) (ww2_sZ8k `cast` ...)
            of _ {
              LT -> $wpoly_go10 ww_sYxg ww1_sYxh l_aVRw;
              EQ -> True;
              GT -> $wpoly_go10 ww_sYxg ww1_sYxh r_aVRx
            };
          GT -> $wpoly_go10 ww_sYxg ww1_sYxh r_aVRx
        }
        };
      Tip -> False
    }
end Rec }

$smember1
$smember1 =
  \ @ a_XVRn w13_sYxe w14_sYxj ->
    case w13_sYxe of _ { Name ww_sYxg ww1_sYxh ->
    $wpoly_go10 ww_sYxg ww1_sYxh w14_sYxj
    }

$smember
$smember = $smember1

$fNameDCInsts
$fNameDCInsts = DCInsts `cast` ...

$fNameInvInsts
$fNameInvInsts = InvInsts `cast` ...

$fNameMappings
$fNameMappings = Mappings `cast` ...

$fNameRenamer
$fNameRenamer = Renamer `cast` ...

$fNameTarget
$fNameTarget = Target `cast` ...

a_rZHj
a_rZHj = C# 'S'

a1_rZHk
a1_rZHk = : a_rZHj ([])

a2_rZHl
a2_rZHl = unpackCString# "main"

a3_rZHm
a3_rZHm = unpackCString# "Data.Yoko.TypeBasics"

a4_rZHn
a4_rZHn = NameG DataName (a2_rZHl `cast` ...) (a3_rZHm `cast` ...)

lvl_rZHo
lvl_rZHo = Name (a1_rZHk `cast` ...) a4_rZHn

lvl1_rZHp
lvl1_rZHp = PromotedT lvl_rZHo

a5_rZHq
a5_rZHq = C# 'Z'

a6_rZHr
a6_rZHr = : a5_rZHq ([])

a7_rZHs
a7_rZHs = NameG DataName (a2_rZHl `cast` ...) (a3_rZHm `cast` ...)

lvl2_rZHt
lvl2_rZHt = Name (a6_rZHr `cast` ...) a7_rZHs

lvl3_rZHu
lvl3_rZHu = PromotedT lvl2_rZHt

halves_rU33
halves_rU33 =
  \ @ a_tB @ b_tC as_aU9V nil_aU9W appnd_aU9X single_aU9Y ->
    letrec {
      w13_sW7F
      w13_sW7F =
        \ ds2_dVbB ds3_dVbC ->
          case ds3_dVbC of wild_X2r {
            [] -> nil_aU9W;
            : a201_aUa0 ds4_dVbD ->
              case ds4_dVbD of _ {
                [] -> single_aU9Y a201_aUa0;
                : ipv_sVyf ipv1_sVyg ->
                  let {
                    lk_sW7J
                    lk_sW7J =
                      case ds2_dVbB of _ { I# ww_aXV1 ->
                      case divInt# ww_aXV1 2 of ww1_aXV9 { __DEFAULT -> I# ww1_aXV9 }
                      } } in
                  let {
                    ds5_sW7I
                    ds5_sW7I =
                      case lk_sW7J of _ { I# n#_aVxY ->
                      case <# n#_aVxY 0 of _ {
                        False ->
                          case $wsplitAt# n#_aVxY wild_X2r of _ { (# ww1_aXW0, ww2_aXW1 #) ->
                          (ww1_aXW0, ww2_aXW1)
                          };
                        True -> ([], wild_X2r)
                      }
                      } } in
                  appnd_aU9X
                    (case ds5_sW7I of _ { (l_XUl4, r_XUiC) ->
                     w13_sW7F lk_sW7J l_XUl4
                     })
                    (case ds5_sW7I of _ { (l_aUik, r_XUl4) ->
                     w13_sW7F ($fNumInt_$c- ds2_dVbB lk_sW7J) r_XUl4
                     })
              }
          }; } in
    w13_sW7F (length as_aU9V) as_aU9V

lvl4_rZHv
lvl4_rZHv = Name (([]) `cast` ...) NameS

lvl5_rZHw
lvl5_rZHw = C# 'x'

Rec {
lgo_rZHx
lgo_rZHx =
  \ z_aeRH ds2_aeRI ->
    case ds2_aeRI of _ {
      [] -> z_aeRH;
      : x8_aeRN xs_aeRO -> lgo_rZHx (AppE z_aeRH (VarE x8_aeRN)) xs_aeRO
    }
end Rec }

$wpat_exp_rZHy
$wpat_exp_rZHy =
  \ w13_sYxo w14_sYxp w15_sYxq ->
    let {
      ns_sW7D
      ns_sW7D =
        case w15_sYxq of _ { I# x8_aVyp ->
        let {
          y_aWMa
          y_aWMa = -# x8_aVyp 1 } in
        case ># 0 y_aWMa of _ {
          False ->
            letrec {
              go_aWMd
              go_aWMd =
                \ x9_aWMe ->
                  : (case reverse1
                            (: lvl5_rZHw ($wshowSignedInt 0 x9_aWMe ([]))) ([])
                     of _ {
                       [] -> lvl4_rZHv;
                       : ds2_aXWo rev_aXWp ->
                         case ds2_aXWo of wild3_aXWr { C# ds3_aXWt ->
                         case ds3_aXWt of _ {
                           __DEFAULT ->
                             case mkName_$s$wsplit2 wild3_aXWr ([]) rev_aXWp
                             of _ { (# ww1_aXWf, ww2_aXWg #) ->
                             Name ww1_aXWf ww2_aXWg
                             };
                           '.' ->
                             case mkName_$s$wsplit2 wild3_aXWr ([]) rev_aXWp
                             of _ { (# ww1_aXWf, ww2_aXWg #) ->
                             Name ww1_aXWf ww2_aXWg
                             }
                         }
                         }
                     })
                    (case ==# x9_aWMe y_aWMa of _ {
                       False -> go_aWMd (+# x9_aWMe 1);
                       True -> []
                     }); } in
            go_aWMd 0;
          True -> []
        }
        } } in
    (# ConP w13_sYxo (map VarP ns_sW7D),
       lgo_rZHx (ConE w14_sYxp) ns_sW7D #)

a8_rZHz
a8_rZHz = C# '.'

a9_rZHA
a9_rZHA = : a8_rZHz ([])

a10_rZHB
a10_rZHB = unpackCString# "base"

a11_rZHC
a11_rZHC = unpackCString# "GHC.Base"

a12_rZHD
a12_rZHD =
  NameG VarName (a10_rZHB `cast` ...) (a11_rZHC `cast` ...)

lvl6_rZHE
lvl6_rZHE = Name (a9_rZHA `cast` ...) a12_rZHD

lvl7_rZHF
lvl7_rZHF = VarE lvl6_rZHE

Rec {
lgo1_rZHG
lgo1_rZHG =
  \ z_aeRH ds2_aeRI ->
    case ds2_aeRI of _ {
      [] -> z_aeRH;
      : x8_aeRN xs_aeRO ->
        lgo1_rZHG
          (AppT
             z_aeRH
             (VarT
                (case x8_aeRN of _ {
                   PlainTV n_a26w -> n_a26w;
                   KindedTV n_a26x ds3_d2ar -> n_a26x
                 })))
          xs_aeRO
    }
end Rec }

tvbKind_rU2V
tvbKind_rU2V =
  \ ds2_dVeL ->
    case ds2_dVeL of _ {
      PlainTV ds3_dVeN -> StarT;
      KindedTV ds3_dVeM k_aU9B -> k_aU9B
    }

Rec {
renameCon_rU2U
renameCon_rU2U =
  \ f_aU9n ds2_dVeQ ->
    case ds2_dVeQ of _ {
      NormalC n_aU9o fields_aU9p -> NormalC (f_aU9n n_aU9o) fields_aU9p;
      RecC n_aU9r fields_aU9s -> RecC (f_aU9n n_aU9r) fields_aU9s;
      InfixC fieldL_aU9u n_aU9v fieldR_aU9w ->
        InfixC fieldL_aU9u (f_aU9n n_aU9v) fieldR_aU9w;
      ForallC tvbs_aU9y cxt_aU9z c_aU9A ->
        ForallC tvbs_aU9y cxt_aU9z (renameCon_rU2U f_aU9n c_aU9A)
    }
end Rec }

Rec {
conName_rU2T
conName_rU2T =
  \ ds2_dVeV ->
    case ds2_dVeV of _ {
      NormalC n_aU9j ds3_dVeX -> n_aU9j;
      RecC n_aU9k ds3_dVeW -> n_aU9k;
      InfixC ds3_dVeY n_aU9l ds4_dVeZ -> n_aU9l;
      ForallC ds3_dVf0 ds4_dVf1 c_aU9m -> conName_rU2T c_aU9m
    }
end Rec }

dcInsts
dcInsts =
  \ ds2_dVsD ->
    case ds2_dVsD
    of _ { YokoOptions ds3_dVsE ds4_dVsF ds5_dVsG ds6_dVsH ->
    ds6_dVsH
    }

objF
objF =
  \ ds2_dVrT ->
    case ds2_dVrT of _ { FieldRO ds3_dVrU ds4_dVrV -> ds4_dVrV }

repF
repF =
  \ ds2_dVrP ->
    case ds2_dVrP of _ { FieldRO ds3_dVrQ ds4_dVrR -> ds3_dVrQ }

objE
objE =
  \ ds2_dVsf ->
    case ds2_dVsf of _ { ConRO ds3_dVsg ds4_dVsh ds5_dVsi ds6_dVsj ->
    ds6_dVsj
    }

objP
objP =
  \ ds2_dVs9 ->
    case ds2_dVs9 of _ { ConRO ds3_dVsa ds4_dVsb ds5_dVsc ds6_dVsd ->
    ds5_dVsc
    }

repE
repE =
  \ ds2_dVs3 ->
    case ds2_dVs3 of _ { ConRO ds3_dVs4 ds4_dVs5 ds5_dVs6 ds6_dVs7 ->
    ds4_dVs5
    }

repP
repP =
  \ ds2_dVrX ->
    case ds2_dVrX of _ { ConRO ds3_dVrY ds4_dVrZ ds5_dVs0 ds6_dVs1 ->
    ds3_dVrY
    }

yokoDefaults
yokoDefaults = YokoOptions (id) (id) (id) (id)

containerCtor
containerCtor =
  \ ds2_dVsO ->
    case ds2_dVsO of _ { Mapping ds3_dVsP ds4_dVsQ ds5_dVsR ->
    ds4_dVsQ
    }

containerTypeName
containerTypeName =
  \ ds2_dVsJ ->
    case ds2_dVsJ of _ { Mapping ds3_dVsK ds4_dVsL ds5_dVsM ->
    ds3_dVsK
    }

methodName
methodName =
  \ ds2_dVsT ->
    case ds2_dVsT of _ { Mapping ds3_dVsU ds4_dVsV ds5_dVsW ->
    ds5_dVsW
    }

invInsts
invInsts =
  \ ds2_dVsx ->
    case ds2_dVsx
    of _ { YokoOptions ds3_dVsy ds4_dVsz ds5_dVsA ds6_dVsB ->
    ds5_dVsA
    }

mappings
mappings =
  \ ds2_dVsr ->
    case ds2_dVsr
    of _ { YokoOptions ds3_dVss ds4_dVst ds5_dVsu ds6_dVsv ->
    ds4_dVst
    }

renamer
renamer =
  \ ds2_dVsl ->
    case ds2_dVsl
    of _ { YokoOptions ds3_dVsm ds4_dVsn ds5_dVso ds6_dVsp ->
    ds3_dVsm
    }

$fNameBindingGroup
$fNameBindingGroup = BindingGroup `cast` ...

$fNameTargetData
$fNameTargetData = TargetData `cast` ...

$fNameTargetType
$fNameTargetType = TargetType `cast` ...

$fNameTargetCxt
$fNameTargetCxt = TargetCxt `cast` ...

$fNameTargetTVBs
$fNameTargetTVBs = TargetTVBs `cast` ...

$fNameTargetPars
$fNameTargetPars = TargetPars `cast` ...

$fNameConName
$fNameConName = ConName `cast` ...

$fNameConFields
$fNameConFields = ConFields `cast` ...

$fShowTargetType3
$fShowTargetType3 = unpackCString# "TargetType"

$fShowTargetType2
$fShowTargetType2 = ++ $fShowTargetType3

$fShowTargetType_$cshowsPrec
$fShowTargetType_$cshowsPrec =
  \ _ ds3_dVtz ->
    case ds3_dVtz of _ { TargetType -> $fShowTargetType2 }

$fShowTargetType1
$fShowTargetType1 =
  \ ds2_dVtz ->
    case ds2_dVtz of _ { TargetType -> $fShowTargetType2 }

$fShowTargetType_$cshowList
$fShowTargetType_$cshowList = showList__ $fShowTargetType1

$fShowTargetType_$cshow
$fShowTargetType_$cshow =
  \ x8_a12A -> case x8_a12A of _ { TargetType -> $fShowTargetType3 }

$fShowTargetType
$fShowTargetType =
  D:Show
    $fShowTargetType_$cshowsPrec
    $fShowTargetType_$cshow
    $fShowTargetType_$cshowList

$fShowTargetTVBs3
$fShowTargetTVBs3 = unpackCString# "TargetTVBs"

$fShowTargetTVBs2
$fShowTargetTVBs2 = ++ $fShowTargetTVBs3

$fShowTargetTVBs_$cshowsPrec
$fShowTargetTVBs_$cshowsPrec =
  \ _ ds3_dVtw ->
    case ds3_dVtw of _ { TargetTVBs -> $fShowTargetTVBs2 }

$fShowTargetTVBs1
$fShowTargetTVBs1 =
  \ ds2_dVtw ->
    case ds2_dVtw of _ { TargetTVBs -> $fShowTargetTVBs2 }

$fShowTargetTVBs_$cshowList
$fShowTargetTVBs_$cshowList = showList__ $fShowTargetTVBs1

$fShowTargetTVBs_$cshow
$fShowTargetTVBs_$cshow =
  \ x8_a12A -> case x8_a12A of _ { TargetTVBs -> $fShowTargetTVBs3 }

$fShowTargetTVBs
$fShowTargetTVBs =
  D:Show
    $fShowTargetTVBs_$cshowsPrec
    $fShowTargetTVBs_$cshow
    $fShowTargetTVBs_$cshowList

$fShowTargetPars3
$fShowTargetPars3 = unpackCString# "TargetPars"

$fShowTargetPars2
$fShowTargetPars2 = ++ $fShowTargetPars3

$fShowTargetPars_$cshowsPrec
$fShowTargetPars_$cshowsPrec =
  \ _ ds3_dVtt ->
    case ds3_dVtt of _ { TargetPars -> $fShowTargetPars2 }

$fShowTargetPars1
$fShowTargetPars1 =
  \ ds2_dVtt ->
    case ds2_dVtt of _ { TargetPars -> $fShowTargetPars2 }

$fShowTargetPars_$cshowList
$fShowTargetPars_$cshowList = showList__ $fShowTargetPars1

$fShowTargetPars_$cshow
$fShowTargetPars_$cshow =
  \ x8_a12A -> case x8_a12A of _ { TargetPars -> $fShowTargetPars3 }

$fShowTargetPars
$fShowTargetPars =
  D:Show
    $fShowTargetPars_$cshowsPrec
    $fShowTargetPars_$cshow
    $fShowTargetPars_$cshowList

$fShowTargetData3
$fShowTargetData3 = unpackCString# "TargetData"

$fShowTargetData2
$fShowTargetData2 = ++ $fShowTargetData3

$fShowTargetData_$cshowsPrec
$fShowTargetData_$cshowsPrec =
  \ _ ds3_dVtq ->
    case ds3_dVtq of _ { TargetData -> $fShowTargetData2 }

$fShowTargetData1
$fShowTargetData1 =
  \ ds2_dVtq ->
    case ds2_dVtq of _ { TargetData -> $fShowTargetData2 }

$fShowTargetData_$cshowList
$fShowTargetData_$cshowList = showList__ $fShowTargetData1

$fShowTargetData_$cshow
$fShowTargetData_$cshow =
  \ x8_a12A -> case x8_a12A of _ { TargetData -> $fShowTargetData3 }

$fShowTargetData
$fShowTargetData =
  D:Show
    $fShowTargetData_$cshowsPrec
    $fShowTargetData_$cshow
    $fShowTargetData_$cshowList

$fShowTargetCxt3
$fShowTargetCxt3 = unpackCString# "TargetCxt"

$fShowTargetCxt2
$fShowTargetCxt2 = ++ $fShowTargetCxt3

$fShowTargetCxt_$cshowsPrec
$fShowTargetCxt_$cshowsPrec =
  \ _ ds3_dVtn ->
    case ds3_dVtn of _ { TargetCxt -> $fShowTargetCxt2 }

$fShowTargetCxt1
$fShowTargetCxt1 =
  \ ds2_dVtn -> case ds2_dVtn of _ { TargetCxt -> $fShowTargetCxt2 }

$fShowTargetCxt_$cshowList
$fShowTargetCxt_$cshowList = showList__ $fShowTargetCxt1

$fShowTargetCxt_$cshow
$fShowTargetCxt_$cshow =
  \ x8_a12A -> case x8_a12A of _ { TargetCxt -> $fShowTargetCxt3 }

$fShowTargetCxt
$fShowTargetCxt =
  D:Show
    $fShowTargetCxt_$cshowsPrec
    $fShowTargetCxt_$cshow
    $fShowTargetCxt_$cshowList

$fShowTarget3
$fShowTarget3 = unpackCString# "Target"

$fShowTarget2
$fShowTarget2 = ++ $fShowTarget3

$fShowTarget_$cshowsPrec
$fShowTarget_$cshowsPrec =
  \ _ ds3_dVtk -> case ds3_dVtk of _ { Target -> $fShowTarget2 }

$fShowTarget1
$fShowTarget1 =
  \ ds2_dVtk -> case ds2_dVtk of _ { Target -> $fShowTarget2 }

$fShowTarget_$cshowList
$fShowTarget_$cshowList = showList__ $fShowTarget1

$fShowTarget_$cshow
$fShowTarget_$cshow =
  \ x8_a12A -> case x8_a12A of _ { Target -> $fShowTarget3 }

$fShowTarget
$fShowTarget =
  D:Show
    $fShowTarget_$cshowsPrec
    $fShowTarget_$cshow
    $fShowTarget_$cshowList

$fShowRenamer3
$fShowRenamer3 = unpackCString# "Renamer"

$fShowRenamer2
$fShowRenamer2 = ++ $fShowRenamer3

$fShowRenamer_$cshowsPrec
$fShowRenamer_$cshowsPrec =
  \ _ ds3_dVth -> case ds3_dVth of _ { Renamer -> $fShowRenamer2 }

$fShowRenamer1
$fShowRenamer1 =
  \ ds2_dVth -> case ds2_dVth of _ { Renamer -> $fShowRenamer2 }

$fShowRenamer_$cshowList
$fShowRenamer_$cshowList = showList__ $fShowRenamer1

$fShowRenamer_$cshow
$fShowRenamer_$cshow =
  \ x8_a12A -> case x8_a12A of _ { Renamer -> $fShowRenamer3 }

$fShowRenamer
$fShowRenamer =
  D:Show
    $fShowRenamer_$cshowsPrec
    $fShowRenamer_$cshow
    $fShowRenamer_$cshowList

$fShowMappings3
$fShowMappings3 = unpackCString# "Mappings"

$fShowMappings2
$fShowMappings2 = ++ $fShowMappings3

$fShowMappings_$cshowsPrec
$fShowMappings_$cshowsPrec =
  \ _ ds3_dVte -> case ds3_dVte of _ { Mappings -> $fShowMappings2 }

$fShowMappings1
$fShowMappings1 =
  \ ds2_dVte -> case ds2_dVte of _ { Mappings -> $fShowMappings2 }

$fShowMappings_$cshowList
$fShowMappings_$cshowList = showList__ $fShowMappings1

$fShowMappings_$cshow
$fShowMappings_$cshow =
  \ x8_a12A -> case x8_a12A of _ { Mappings -> $fShowMappings3 }

$fShowMappings
$fShowMappings =
  D:Show
    $fShowMappings_$cshowsPrec
    $fShowMappings_$cshow
    $fShowMappings_$cshowList

$fShowInvInsts3
$fShowInvInsts3 = unpackCString# "InvInsts"

$fShowInvInsts2
$fShowInvInsts2 = ++ $fShowInvInsts3

$fShowInvInsts_$cshowsPrec
$fShowInvInsts_$cshowsPrec =
  \ _ ds3_dVtb -> case ds3_dVtb of _ { InvInsts -> $fShowInvInsts2 }

$fShowInvInsts1
$fShowInvInsts1 =
  \ ds2_dVtb -> case ds2_dVtb of _ { InvInsts -> $fShowInvInsts2 }

$fShowInvInsts_$cshowList
$fShowInvInsts_$cshowList = showList__ $fShowInvInsts1

$fShowInvInsts_$cshow
$fShowInvInsts_$cshow =
  \ x8_a12A -> case x8_a12A of _ { InvInsts -> $fShowInvInsts3 }

$fShowInvInsts
$fShowInvInsts =
  D:Show
    $fShowInvInsts_$cshowsPrec
    $fShowInvInsts_$cshow
    $fShowInvInsts_$cshowList

$fShowConName3
$fShowConName3 = unpackCString# "ConName"

$fShowConName2
$fShowConName2 = ++ $fShowConName3

$fShowConName_$cshowsPrec
$fShowConName_$cshowsPrec =
  \ _ ds3_dVt8 -> case ds3_dVt8 of _ { ConName -> $fShowConName2 }

$fShowConName1
$fShowConName1 =
  \ ds2_dVt8 -> case ds2_dVt8 of _ { ConName -> $fShowConName2 }

$fShowConName_$cshowList
$fShowConName_$cshowList = showList__ $fShowConName1

$fShowConName_$cshow
$fShowConName_$cshow =
  \ x8_a12A -> case x8_a12A of _ { ConName -> $fShowConName3 }

$fShowConName
$fShowConName =
  D:Show
    $fShowConName_$cshowsPrec
    $fShowConName_$cshow
    $fShowConName_$cshowList

$fShowConFields3
$fShowConFields3 = unpackCString# "ConFields"

$fShowConFields2
$fShowConFields2 = ++ $fShowConFields3

$fShowConFields_$cshowsPrec
$fShowConFields_$cshowsPrec =
  \ _ ds3_dVt5 ->
    case ds3_dVt5 of _ { ConFields -> $fShowConFields2 }

$fShowConFields1
$fShowConFields1 =
  \ ds2_dVt5 -> case ds2_dVt5 of _ { ConFields -> $fShowConFields2 }

$fShowConFields_$cshowList
$fShowConFields_$cshowList = showList__ $fShowConFields1

$fShowConFields_$cshow
$fShowConFields_$cshow =
  \ x8_a12A -> case x8_a12A of _ { ConFields -> $fShowConFields3 }

$fShowConFields
$fShowConFields =
  D:Show
    $fShowConFields_$cshowsPrec
    $fShowConFields_$cshow
    $fShowConFields_$cshowList

$fShowBindingGroup3
$fShowBindingGroup3 = unpackCString# "BindingGroup"

$fShowBindingGroup2
$fShowBindingGroup2 = ++ $fShowBindingGroup3

$fShowBindingGroup_$cshowsPrec
$fShowBindingGroup_$cshowsPrec =
  \ _ ds3_dVt2 ->
    case ds3_dVt2 of _ { BindingGroup -> $fShowBindingGroup2 }

$fShowBindingGroup1
$fShowBindingGroup1 =
  \ ds2_dVt2 ->
    case ds2_dVt2 of _ { BindingGroup -> $fShowBindingGroup2 }

$fShowBindingGroup_$cshowList
$fShowBindingGroup_$cshowList = showList__ $fShowBindingGroup1

$fShowBindingGroup_$cshow
$fShowBindingGroup_$cshow =
  \ x8_a12A ->
    case x8_a12A of _ { BindingGroup -> $fShowBindingGroup3 }

$fShowBindingGroup
$fShowBindingGroup =
  D:Show
    $fShowBindingGroup_$cshowsPrec
    $fShowBindingGroup_$cshow
    $fShowBindingGroup_$cshowList

$fShowDCInsts3
$fShowDCInsts3 = unpackCString# "DCInsts"

$fShowDCInsts2
$fShowDCInsts2 = ++ $fShowDCInsts3

$fShowDCInsts_$cshowsPrec
$fShowDCInsts_$cshowsPrec =
  \ _ ds3_dVsZ -> case ds3_dVsZ of _ { DCInsts -> $fShowDCInsts2 }

$fShowDCInsts1
$fShowDCInsts1 =
  \ ds2_dVsZ -> case ds2_dVsZ of _ { DCInsts -> $fShowDCInsts2 }

$fShowDCInsts_$cshowList
$fShowDCInsts_$cshowList = showList__ $fShowDCInsts1

$fShowDCInsts_$cshow
$fShowDCInsts_$cshow =
  \ x8_a12A -> case x8_a12A of _ { DCInsts -> $fShowDCInsts3 }

$fShowDCInsts
$fShowDCInsts =
  D:Show
    $fShowDCInsts_$cshowsPrec
    $fShowDCInsts_$cshow
    $fShowDCInsts_$cshowList

lvl8_rZHH
lvl8_rZHH =
  \ ds2_dVc2 ->
    case ds2_dVc2 of _ { (ds3_dVc3, x8_aU9K, y_aU9L) ->
    (x8_aU9K, y_aU9L)
    }

lvl9_rZHI
lvl9_rZHI = unpackCString# "no support for existential types."

w_rZHJ
w_rZHJ = unpackAppendCString# "yokoTH: " lvl9_rZHI

a13_rZHK
a13_rZHK =
  \ @ m_a2cC w13_a2pG ->
    case w13_a2pG
    of _
    { D:Quasi ww_a2pI
              ww1_a2pJ
              ww2_a2pK
              ww3_a2pL
              ww4_a2pM
              ww5_a2pN
              ww6_a2pO
              ww7_a2pP
              ww8_a2pQ
              ww9_a2pR
              ww10_a2pS ->
    $wa1 w_rZHJ ww_a2pI ww3_a2pL
    }

conFields_rU30
conFields_rU30 =
  \ ds2_dVc9 ->
    case ds2_dVc9 of _ {
      NormalC ds3_dVcb fds_aU9I -> ($fMonadQ3 fds_aU9I) `cast` ...;
      RecC ds3_dVca fds_aU9J ->
        let {
          x8_a2mH
          x8_a2mH = map lvl8_rZHH fds_aU9J } in
        (\ @ m_a2mI $dQuasi_a2mJ -> return ($p1Quasi $dQuasi_a2mJ) x8_a2mH)
        `cast` ...;
      InfixC fdl_aU9M ds3_dVcc fdr_aU9N ->
        let {
          a201_sXFj
          a201_sXFj = : fdr_aU9N ([]) } in
        let {
          x8_a2mH
          x8_a2mH = : fdl_aU9M a201_sXFj } in
        (\ @ m_a2mI $dQuasi_a2mJ -> return ($p1Quasi $dQuasi_a2mJ) x8_a2mH)
        `cast` ...;
      ForallC ds3_dVcd ds4_dVce ds5_dVcf -> a13_rZHK `cast` ...
    }

Rec {
namesIn_rU35
namesIn_rU35 =
  \ ds2_dVbo ->
    case ds2_dVbo of _ {
      __DEFAULT -> Tip;
      ForallT tvbs_aUa8 ds3_dVbq ty_aUa9 ->
        case namesIn_rU35 ty_aUa9 of wild1_aVDw {
          Bin ipv_aVDy ipv1_aVDz ipv2_aVDA ipv3_aVDB ->
            case $sfromList_go5 (Tip) (map tvbName tvbs_aUa8) of wild2_aVDD {
              Bin ipv4_aVDF ipv5_aVDG ipv6_aVDH ipv7_aVDI ->
                $sdifference_$shedgeDiff
                  (NothingS) (NothingS) wild1_aVDw wild2_aVDD;
              Tip -> wild1_aVDw
            };
          Tip -> Tip
        };
      AppT ty1_aUaa ty2_aUab ->
        case namesIn_rU35 ty1_aUaa of wild1_aVEd {
          Bin ipv_aVEf ipv1_aVEg ipv2_aVEh ipv3_aVEi ->
            case namesIn_rU35 ty2_aUab of wild2_aVEk {
              Bin ipv4_aVEm ipv5_aVEn ipv6_aVEo ipv7_aVEp ->
                $shedgeUnion1 (NothingS) (NothingS) wild1_aVEd wild2_aVEk;
              Tip -> wild1_aVEd
            };
          Tip -> namesIn_rU35 ty2_aUab
        };
      SigT ty_aUac ds3_dVbp -> namesIn_rU35 ty_aUac;
      VarT n_aUad -> singleton n_aUad;
      ConT n_aUae -> singleton n_aUae
    }
end Rec }

a14_rZHL
a14_rZHL = unpackCString# "EQ"

a15_rZHM
a15_rZHM = unpackCString# "ghc-prim"

a16_rZHN
a16_rZHN = unpackCString# "GHC.Types"

a17_rZHO
a17_rZHO =
  NameG DataName (a15_rZHM `cast` ...) (a16_rZHN `cast` ...)

lvl10_rZHP
lvl10_rZHP = Name (a14_rZHL `cast` ...) a17_rZHO

lvl11_rZHQ
lvl11_rZHQ = PromotedT lvl10_rZHP

lvl12_rZHR
lvl12_rZHR = EqualP lvl11_rZHQ

a18_rZHS
a18_rZHS = unpackCString# "Spine"

a19_rZHT
a19_rZHT = unpackCString# "type-spine-0.2"

a20_rZHU
a20_rZHU = unpackCString# "Type.Spine.Base"

a21_rZHV
a21_rZHV =
  NameG TcClsName (a19_rZHT `cast` ...) (a20_rZHU `cast` ...)

a22_rZHW
a22_rZHW = Name (a18_rZHS `cast` ...) a21_rZHV

lvl13_rZHX
lvl13_rZHX = ConT a22_rZHW

a23_rZHY
a23_rZHY =
  \ @ m_aWQG eta_aWQH -> return ($p1Quasi eta_aWQH) lvl13_rZHX

a24_rZHZ
a24_rZHZ = unpackCString# "Compare"

a25_rZI0
a25_rZI0 = unpackCString# "type-ord-0.2"

a26_rZI1
a26_rZI1 = unpackCString# "Type.Ord.Base"

a27_rZI2
a27_rZI2 =
  NameG TcClsName (a25_rZI0 `cast` ...) (a26_rZI1 `cast` ...)

lvl14_rZI3
lvl14_rZI3 = Name (a24_rZHZ `cast` ...) a27_rZI2

lvl15_rZI4
lvl15_rZI4 = ConT lvl14_rZI3

a28_rZI5
a28_rZI5 =
  \ @ m_XXg9 eta_XXgb -> return ($p1Quasi eta_XXgb) lvl15_rZI4

lvl16_rZI6
lvl16_rZI6 = patError "Data/Yoko/TH.hs:(431,24)-(434,30)|case"

a29_rZI7
a29_rZI7 = unpackCString# "DC0"

a30_rZI8
a30_rZI8 = unpackCString# "Data.Yoko.View"

a31_rZI9
a31_rZI9 =
  NameG TcClsName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl17_rZIa
lvl17_rZIa = Name (a29_rZI7 `cast` ...) a31_rZI9

a32_rZIb
a32_rZIb = unpackCString# "rejoin0"

a33_rZIc
a33_rZIc = NameG VarName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl18_rZId
lvl18_rZId = Name (a32_rZIb `cast` ...) a33_rZIc

lvl19_rZIe
lvl19_rZIe = (lvl17_rZIa, lvl18_rZId)

a34_rZIf
a34_rZIf = unpackCString# "DC1"

a35_rZIg
a35_rZIg =
  NameG TcClsName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl20_rZIh
lvl20_rZIh = Name (a34_rZIf `cast` ...) a35_rZIg

a36_rZIi
a36_rZIi = unpackCString# "rejoin1"

a37_rZIj
a37_rZIj = NameG VarName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl21_rZIk
lvl21_rZIk = Name (a36_rZIi `cast` ...) a37_rZIj

lvl22_rZIl
lvl22_rZIl = (lvl20_rZIh, lvl21_rZIk)

a38_rZIm
a38_rZIm = unpackCString# "DC2"

a39_rZIn
a39_rZIn =
  NameG TcClsName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl23_rZIo
lvl23_rZIo = Name (a38_rZIm `cast` ...) a39_rZIn

a40_rZIp
a40_rZIp = unpackCString# "rejoin2"

a41_rZIq
a41_rZIq = NameG VarName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl24_rZIr
lvl24_rZIr = Name (a40_rZIp `cast` ...) a41_rZIq

lvl25_rZIs
lvl25_rZIs = (lvl23_rZIo, lvl24_rZIr)

lvl26_rZIt
lvl26_rZIt = patError "Data/Yoko/TH.hs:(436,32)-(439,39)|case"

a42_rZIu
a42_rZIu = unpackCString# "Generic0"

a43_rZIv
a43_rZIv = unpackCString# "Data.Yoko.Representation"

a44_rZIw
a44_rZIw =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl27_rZIx
lvl27_rZIx = Name (a42_rZIu `cast` ...) a44_rZIw

a45_rZIy
a45_rZIy = unpackCString# "rep0"

a46_rZIz
a46_rZIz = NameG VarName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl28_rZIA
lvl28_rZIA = Name (a45_rZIy `cast` ...) a46_rZIz

a47_rZIB
a47_rZIB = unpackCString# "obj0"

a48_rZIC
a48_rZIC = NameG VarName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl29_rZID
lvl29_rZID = Name (a47_rZIB `cast` ...) a48_rZIC

lvl30_rZIE
lvl30_rZIE = (lvl27_rZIx, lvl28_rZIA, lvl29_rZID)

a49_rZIF
a49_rZIF = unpackCString# "Generic1"

a50_rZIG
a50_rZIG =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl31_rZIH
lvl31_rZIH = Name (a49_rZIF `cast` ...) a50_rZIG

a51_rZII
a51_rZII = unpackCString# "rep1"

a52_rZIJ
a52_rZIJ = NameG VarName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl32_rZIK
lvl32_rZIK = Name (a51_rZII `cast` ...) a52_rZIJ

a53_rZIL
a53_rZIL = unpackCString# "obj1"

a54_rZIM
a54_rZIM = NameG VarName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl33_rZIN
lvl33_rZIN = Name (a53_rZIL `cast` ...) a54_rZIM

lvl34_rZIO
lvl34_rZIO = (lvl31_rZIH, lvl32_rZIK, lvl33_rZIN)

a55_rZIP
a55_rZIP = unpackCString# "Generic2"

a56_rZIQ
a56_rZIQ =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl35_rZIR
lvl35_rZIR = Name (a55_rZIP `cast` ...) a56_rZIQ

a57_rZIS
a57_rZIS = unpackCString# "rep2"

a58_rZIT
a58_rZIT = NameG VarName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl36_rZIU
lvl36_rZIU = Name (a57_rZIS `cast` ...) a58_rZIT

a59_rZIV
a59_rZIV = unpackCString# "obj2"

a60_rZIW
a60_rZIW = NameG VarName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl37_rZIX
lvl37_rZIX = Name (a59_rZIV `cast` ...) a60_rZIW

lvl38_rZIY
lvl38_rZIY = (lvl35_rZIR, lvl36_rZIU, lvl37_rZIX)

a61_rZIZ
a61_rZIZ = unpackCString# "Codomain"

a62_rZJ0
a62_rZJ0 =
  NameG TcClsName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl39_rZJ1
lvl39_rZJ1 = Name (a61_rZIZ `cast` ...) a62_rZJ0

a63_rZJ2
a63_rZJ2 = unpackCString# "Tag"

a64_rZJ3
a64_rZJ3 =
  NameG TcClsName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl40_rZJ4
lvl40_rZJ4 = Name (a63_rZJ2 `cast` ...) a64_rZJ3

ds_rZJ5
ds_rZJ5 = __integer 0

lvl41_rZJ6
lvl41_rZJ6 =
  \ eta_aVQW ->
    (case eta_aVQW of _ { (x8_aVQZ, y_aVR0) -> x8_aVQZ },
     case eta_aVQW of _ { (x8_aVR4, y_aVR5) -> y_aVR5 ds_rZJ5 })

a65_rZJ7
a65_rZJ7 = C# 'U'

a66_rZJ8
a66_rZJ8 = : a65_rZJ7 ([])

a67_rZJ9
a67_rZJ9 =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl42_rZJa
lvl42_rZJa = Name (a66_rZJ8 `cast` ...) a67_rZJ9

lvl43_rZJb
lvl43_rZJb = ConT lvl42_rZJa

a68_rZJc
a68_rZJc = : a65_rZJ7 ([])

a69_rZJd
a69_rZJd =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl44_rZJe
lvl44_rZJe = Name (a68_rZJc `cast` ...) a69_rZJd

lvl45_rZJf
lvl45_rZJf = ConE lvl44_rZJe

lvl46_rZJg
lvl46_rZJg = ConRO ([]) lvl45_rZJf WildP ([])

lvl47_rZJh
lvl47_rZJh = \ s_aUc4 -> (lvl46_rZJg, s_aUc4)

lvl48_rZJi
lvl48_rZJi = (lvl43_rZJb, lvl47_rZJh)

a70_rZJj
a70_rZJj =
  \ @ m_a2mI $dQuasi_a2mJ ->
    return ($p1Quasi $dQuasi_a2mJ) lvl48_rZJi

a71_rZJk
a71_rZJk = unpackCString# ":*:"

a72_rZJl
a72_rZJl =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl49_rZJm
lvl49_rZJm = Name (a71_rZJk `cast` ...) a72_rZJl

lvl50_rZJn
lvl50_rZJn = ConT lvl49_rZJm

a73_rZJo
a73_rZJo =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl51_rZJp
lvl51_rZJp = Name (a71_rZJk `cast` ...) a73_rZJo

lvl52_rZJq
lvl52_rZJq = ConE lvl51_rZJp

a74_rZJr
a74_rZJr =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl53_rZJs
lvl53_rZJs = Name (a71_rZJk `cast` ...) a74_rZJr

a75_rZJt
a75_rZJt =
  \ l_aUc5 r_aUc6 @ m_a2cY eta_B1 ->
    let {
      a201_sZit
      a201_sZit = $p1Quasi eta_B1 } in
    let {
      lvl174_sZdj
      lvl174_sZdj = return a201_sZit } in
    let {
      lvl175_sZdi
      lvl175_sZdi = (r_aUc6 `cast` ...) eta_B1 } in
    let {
      a202_sZiv
      a202_sZiv = $p1Quasi eta_B1 } in
    let {
      lvl176_sZdh
      lvl176_sZdh = >>= a202_sZiv } in
    >>=
      ($p1Quasi eta_B1)
      ((l_aUc5 `cast` ...) eta_B1)
      (\ x8_a2mY ->
         case x8_a2mY of _ { (tyL_aUc7, roL_aUc8) ->
         let {
           lvl177_sWzW
           lvl177_sWzW = AppT lvl50_rZJn tyL_aUc7 } in
         lvl176_sZdh
           lvl175_sZdi
           (\ x9_X2Dq ->
              case x9_X2Dq of _ { (tyR_aUc9, roR_aUca) ->
              lvl174_sZdj
                (AppT lvl177_sWzW tyR_aUc9,
                 \ s_aUcb ->
                   case roL_aUc8 s_aUcb of _ { (roL1_aUcc, s1_aUcd) ->
                   case roR_aUca s1_aUcd of _ { (roR1_aUce, s2_aUcf) ->
                   (ConRO
                      (case roL1_aUcc of _ { ConRO ds2_dVrY ds3_dVrZ ds4_dVs0 ds5_dVs1 ->
                       ++
                         ds2_dVrY
                         (case roR1_aUce of _ { ConRO ds6_XVIk ds7_XVIm ds8_XVIo ds9_XVIq ->
                          ds6_XVIk
                          })
                       })
                      (AppE
                         (AppE
                            lvl52_rZJq
                            (case roL1_aUcc of _ { ConRO ds2_dVs4 ds3_dVs5 ds4_dVs6 ds5_dVs7 ->
                             ds3_dVs5
                             }))
                         (case roR1_aUce of _ { ConRO ds2_dVs4 ds3_dVs5 ds4_dVs6 ds5_dVs7 ->
                          ds3_dVs5
                          }))
                      (ConP
                         lvl53_rZJs
                         (: (case roL1_aUcc
                             of _ { ConRO ds2_dVsa ds3_dVsb ds4_dVsc ds5_dVsd ->
                             ds4_dVsc
                             })
                            (: (case roR1_aUce
                                of _ { ConRO ds2_dVsa ds3_dVsb ds4_dVsc ds5_dVsd ->
                                ds4_dVsc
                                })
                               ([]))))
                      (case roL1_aUcc of _ { ConRO ds2_dVsg ds3_dVsh ds4_dVsi ds5_dVsj ->
                       ++
                         ds5_dVsj
                         (case roR1_aUce of _ { ConRO ds6_XVIC ds7_XVIE ds8_XVIG ds9_XVII ->
                          ds9_XVII
                          })
                       }),
                    s2_aUcf)
                   }
                   })
              })
         })

lvl54_rZJu
lvl54_rZJu = __integer 1

$wlvl_rZJv
$wlvl_rZJv =
  \ w13_sYxu ->
    (# case w13_sYxu of _ { (x8_aVQZ, y_aVR0) -> x8_aVQZ },
       let {
         fRO_aUci
         fRO_aUci = case w13_sYxu of _ { (x8_aVR4, y_aVR5) -> y_aVR5 } } in
       let {
         lvl174_sZdn
         lvl174_sZdn =
           case fRO_aUci of _ { FieldRO ds2_dVrU ds3_dVrV -> ds3_dVrV } } in
       let {
         lvl175_sZdm
         lvl175_sZdm =
           case fRO_aUci of _ { FieldRO ds2_dVrQ ds3_dVrR -> ds2_dVrQ } } in
       \ s_aUcj ->
         (let {
            n_sW7g
            n_sW7g =
              case reverse1 (: lvl5_rZHw ($w$cshowsPrec 0 s_aUcj ([]))) ([])
              of _ {
                [] -> lvl4_rZHv;
                : ds2_aXWo rev_aXWp ->
                  case ds2_aXWo of wild1_aXWr { C# ds3_aXWt ->
                  case ds3_aXWt of _ {
                    __DEFAULT ->
                      case mkName_$s$wsplit2 wild1_aXWr ([]) rev_aXWp
                      of _ { (# ww1_aXWf, ww2_aXWg #) ->
                      Name ww1_aXWf ww2_aXWg
                      };
                    '.' ->
                      case mkName_$s$wsplit2 wild1_aXWr ([]) rev_aXWp
                      of _ { (# ww1_aXWf, ww2_aXWg #) ->
                      Name ww1_aXWf ww2_aXWg
                      }
                  }
                  }
              } } in
          ConRO
            (: (VarP n_sW7g) ([]))
            (AppE lvl175_sZdm (VarE n_sW7g))
            (VarP n_sW7g)
            (: (AppE lvl174_sZdn (VarE n_sW7g)) ([])),
          plusInteger s_aUcj lvl54_rZJu) #)

lvl55_rZJw
lvl55_rZJw =
  \ w13_sYxu ->
    case $wlvl_rZJv w13_sYxu of _ { (# ww1_sYzg, ww2_sYzh #) ->
    (ww1_sYzg, ww2_sYzh)
    }

lvl56_rZJx
lvl56_rZJx = patError "Data/Yoko/TH.hs:(290,24)-(293,24)|case"

a76_rZJy
a76_rZJy = unpackCString# "Rec0"

a77_rZJz
a77_rZJz =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl57_rZJA
lvl57_rZJA = Name (a76_rZJy `cast` ...) a77_rZJz

a78_rZJB
a78_rZJB =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl58_rZJC
lvl58_rZJC = Name (a76_rZJy `cast` ...) a78_rZJB

lvl59_rZJD
lvl59_rZJD = (lvl57_rZJA, lvl58_rZJC)

a79_rZJE
a79_rZJE = unpackCString# "Rec1"

a80_rZJF
a80_rZJF =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl60_rZJG
lvl60_rZJG = Name (a79_rZJE `cast` ...) a80_rZJF

a81_rZJH
a81_rZJH =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl61_rZJI
lvl61_rZJI = Name (a79_rZJE `cast` ...) a81_rZJH

lvl62_rZJJ
lvl62_rZJJ = (lvl60_rZJG, lvl61_rZJI)

a82_rZJK
a82_rZJK = unpackCString# "Rec2"

a83_rZJL
a83_rZJL =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl63_rZJM
lvl63_rZJM = Name (a82_rZJK `cast` ...) a83_rZJL

a84_rZJN
a84_rZJN =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl64_rZJO
lvl64_rZJO = Name (a82_rZJK `cast` ...) a84_rZJN

lvl65_rZJP
lvl65_rZJP = (lvl63_rZJM, lvl64_rZJO)

lvl66_rZJQ
lvl66_rZJQ = : lvl5_rZHw ([])

x_rZJR
x_rZJR =
  case reverse1 lvl66_rZJQ ([]) of _ {
    [] -> lvl4_rZHv;
    : ds2_aXWo rev_aXWp ->
      case ds2_aXWo of wild1_aXWr { C# ds3_aXWt ->
      case ds3_aXWt of _ {
        __DEFAULT ->
          case mkName_$s$wsplit2 wild1_aXWr ([]) rev_aXWp
          of _ { (# ww1_aXWf, ww2_aXWg #) ->
          Name ww1_aXWf ww2_aXWg
          };
        '.' ->
          case mkName_$s$wsplit2 wild1_aXWr ([]) rev_aXWp
          of _ { (# ww1_aXWf, ww2_aXWg #) ->
          Name ww1_aXWf ww2_aXWg
          }
      }
      }
  }

a85_rZJS
a85_rZJS = VarP x_rZJR

lvl67_rZJT
lvl67_rZJT = : a85_rZJS ([])

lvl68_rZJU
lvl68_rZJU = VarE x_rZJR

a86_rZJV
a86_rZJV = unpackCString# "Dep0"

a87_rZJW
a87_rZJW =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl69_rZJX
lvl69_rZJX = Name (a86_rZJV `cast` ...) a87_rZJW

lvl70_rZJY
lvl70_rZJY = ConT lvl69_rZJX

a88_rZJZ
a88_rZJZ =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl71_rZK0
lvl71_rZK0 = Name (a86_rZJV `cast` ...) a88_rZJZ

lvl72_rZK1
lvl72_rZK1 = ConE lvl71_rZK0

a89_rZK2
a89_rZK2 = unpackCString# "unDep0"

a90_rZK3
a90_rZK3 = NameG VarName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl73_rZK4
lvl73_rZK4 = Name (a89_rZK2 `cast` ...) a90_rZK3

lvl74_rZK5
lvl74_rZK5 = VarE lvl73_rZK4

lvl75_rZK6
lvl75_rZK6 = FieldRO lvl72_rZK1 lvl74_rZK5

lvl76_rZK7
lvl76_rZK7 = unpackCString# "no support for ForallT."

w1_rZK8
w1_rZK8 = unpackAppendCString# "yokoTH: " lvl76_rZK7

a91_rZK9
a91_rZK9 =
  \ @ m_X2Gu w13_X2Tz ->
    case w13_X2Tz
    of _
    { D:Quasi ww_a2pI
              ww1_a2pJ
              ww2_a2pK
              ww3_a2pL
              ww4_a2pM
              ww5_a2pN
              ww6_a2pO
              ww7_a2pP
              ww8_a2pQ
              ww9_a2pR
              ww10_a2pS ->
    $wa1 w1_rZK8 ww_a2pI ww3_a2pL
    }

lvl77_rZKa
lvl77_rZKa =
  unpackCString# "impossible: AppT is guarded by peelApp."

w2_rZKb
w2_rZKb = unpackAppendCString# "yokoTH: " lvl77_rZKa

a92_rZKc
a92_rZKc =
  \ @ m_X2GA w13_X2TF ->
    case w13_X2TF
    of _
    { D:Quasi ww_a2pI
              ww1_a2pJ
              ww2_a2pK
              ww3_a2pL
              ww4_a2pM
              ww5_a2pN
              ww6_a2pO
              ww7_a2pP
              ww8_a2pQ
              ww9_a2pR
              ww10_a2pS ->
    $wa1 w2_rZKb ww_a2pI ww3_a2pL
    }

lvl78_rZKd
lvl78_rZKd =
  unpackCString# "no support for poly- or higher-kinded parameters."

w3_rZKe
w3_rZKe = unpackAppendCString# "yokoTH: " lvl78_rZKd

a93_rZKf
a93_rZKf =
  \ @ m_X2GG w13_X2TL ->
    case w13_X2TL
    of _
    { D:Quasi ww_a2pI
              ww1_a2pJ
              ww2_a2pK
              ww3_a2pL
              ww4_a2pM
              ww5_a2pN
              ww6_a2pO
              ww7_a2pP
              ww8_a2pQ
              ww9_a2pR
              ww10_a2pS ->
    $wa1 w3_rZKe ww_a2pI ww3_a2pL
    }

lvl79_rZKg
lvl79_rZKg = patError "Data/Yoko/TH.hs:(311,33)-(313,43)|case"

a94_rZKh
a94_rZKh = unpackCString# "Par0"

a95_rZKi
a95_rZKi =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl80_rZKj
lvl80_rZKj = Name (a94_rZKh `cast` ...) a95_rZKi

a96_rZKk
a96_rZKk =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl81_rZKl
lvl81_rZKl = Name (a94_rZKh `cast` ...) a96_rZKk

a97_rZKm
a97_rZKm = unpackCString# "unPar0"

a98_rZKn
a98_rZKn = NameG VarName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl82_rZKo
lvl82_rZKo = Name (a97_rZKm `cast` ...) a98_rZKn

lvl83_rZKp
lvl83_rZKp = (lvl80_rZKj, lvl81_rZKl, lvl82_rZKo)

a99_rZKq
a99_rZKq = unpackCString# "Par1"

a100_rZKr
a100_rZKr =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl84_rZKs
lvl84_rZKs = Name (a99_rZKq `cast` ...) a100_rZKr

a101_rZKt
a101_rZKt =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl85_rZKu
lvl85_rZKu = Name (a99_rZKq `cast` ...) a101_rZKt

a102_rZKv
a102_rZKv = unpackCString# "unPar1"

a103_rZKw
a103_rZKw =
  NameG VarName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl86_rZKx
lvl86_rZKx = Name (a102_rZKv `cast` ...) a103_rZKw

lvl87_rZKy
lvl87_rZKy = (lvl84_rZKs, lvl85_rZKu, lvl86_rZKx)

lvl88_rZKz
lvl88_rZKz =
  unpackCString# "impossible: expandSyn is guarded by yoko0."

w4_rZKA
w4_rZKA = unpackAppendCString# "yokoTH: " lvl88_rZKz

a104_rZKB
a104_rZKB =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl89_rZKC
lvl89_rZKC = Name (a76_rZJy `cast` ...) a104_rZKB

lvl90_rZKD
lvl90_rZKD = ConT lvl89_rZKC

a105_rZKE
a105_rZKE =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl91_rZKF
lvl91_rZKF = Name (a76_rZJy `cast` ...) a105_rZKE

lvl92_rZKG
lvl92_rZKG = ConE lvl91_rZKF

a106_rZKH
a106_rZKH = unpackCString# "unRec0"

a107_rZKI
a107_rZKI =
  NameG VarName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl93_rZKJ
lvl93_rZKJ = Name (a106_rZKH `cast` ...) a107_rZKI

lvl94_rZKK
lvl94_rZKK = VarE lvl93_rZKJ

lvl95_rZKL
lvl95_rZKL = FieldRO lvl92_rZKG lvl94_rZKK

lvl96_rZKM
lvl96_rZKM = unpackCString# "no support for promoted types."

w5_rZKN
w5_rZKN = unpackAppendCString# "yokoTH: " lvl96_rZKM

a108_rZKO
a108_rZKO =
  \ @ m_X2HI w13_X2UN ->
    case w13_X2UN
    of _
    { D:Quasi ww_a2pI
              ww1_a2pJ
              ww2_a2pK
              ww3_a2pL
              ww4_a2pM
              ww5_a2pN
              ww6_a2pO
              ww7_a2pP
              ww8_a2pQ
              ww9_a2pR
              ww10_a2pS ->
    $wa1 w5_rZKN ww_a2pI ww3_a2pL
    }

lvl97_rZKP
lvl97_rZKP = unpackCString# "no support for unboxed tuples."

w6_rZKQ
w6_rZKQ = unpackAppendCString# "yokoTH: " lvl97_rZKP

a109_rZKR
a109_rZKR =
  \ @ m_X2HO w13_X2UT ->
    case w13_X2UT
    of _
    { D:Quasi ww_a2pI
              ww1_a2pJ
              ww2_a2pK
              ww3_a2pL
              ww4_a2pM
              ww5_a2pN
              ww6_a2pO
              ww7_a2pP
              ww8_a2pQ
              ww9_a2pR
              ww10_a2pS ->
    $wa1 w6_rZKQ ww_a2pI ww3_a2pL
    }

w7_rZKS
w7_rZKS = unpackAppendCString# "yokoTH: " lvl96_rZKM

a110_rZKT
a110_rZKT =
  \ @ m_X2HU w13_X2UZ ->
    case w13_X2UZ
    of _
    { D:Quasi ww_a2pI
              ww1_a2pJ
              ww2_a2pK
              ww3_a2pL
              ww4_a2pM
              ww5_a2pN
              ww6_a2pO
              ww7_a2pP
              ww8_a2pQ
              ww9_a2pR
              ww10_a2pS ->
    $wa1 w7_rZKS ww_a2pI ww3_a2pL
    }

w8_rZKU
w8_rZKU = unpackAppendCString# "yokoTH: " lvl96_rZKM

a111_rZKV
a111_rZKV =
  \ @ m_X2I0 w13_X2V5 ->
    case w13_X2V5
    of _
    { D:Quasi ww_a2pI
              ww1_a2pJ
              ww2_a2pK
              ww3_a2pL
              ww4_a2pM
              ww5_a2pN
              ww6_a2pO
              ww7_a2pP
              ww8_a2pQ
              ww9_a2pR
              ww10_a2pS ->
    $wa1 w8_rZKU ww_a2pI ww3_a2pL
    }

w9_rZKW
w9_rZKW = unpackAppendCString# "yokoTH: " lvl96_rZKM

a112_rZKX
a112_rZKX =
  \ @ m_X2I6 w13_X2Vb ->
    case w13_X2Vb
    of _
    { D:Quasi ww_a2pI
              ww1_a2pJ
              ww2_a2pK
              ww3_a2pL
              ww4_a2pM
              ww5_a2pN
              ww6_a2pO
              ww7_a2pP
              ww8_a2pQ
              ww9_a2pR
              ww10_a2pS ->
    $wa1 w9_rZKW ww_a2pI ww3_a2pL
    }

lvl98_rZKY
lvl98_rZKY = unpackCString# "no support for kinds."

w10_rZKZ
w10_rZKZ = unpackAppendCString# "yokoTH: " lvl98_rZKY

a113_rZL0
a113_rZL0 =
  \ @ m_X2Ic w13_X2Vh ->
    case w13_X2Vh
    of _
    { D:Quasi ww_a2pI
              ww1_a2pJ
              ww2_a2pK
              ww3_a2pL
              ww4_a2pM
              ww5_a2pN
              ww6_a2pO
              ww7_a2pP
              ww8_a2pQ
              ww9_a2pR
              ww10_a2pS ->
    $wa1 w10_rZKZ ww_a2pI ww3_a2pL
    }

lvl99_rZL1
lvl99_rZL1 = unpackCString# "no support for constraint kinds."

w11_rZL2
w11_rZL2 = unpackAppendCString# "yokoTH: " lvl99_rZL1

a114_rZL3
a114_rZL3 =
  \ @ m_X2Ii w13_X2Vn ->
    case w13_X2Vn
    of _
    { D:Quasi ww_a2pI
              ww1_a2pJ
              ww2_a2pK
              ww3_a2pL
              ww4_a2pM
              ww5_a2pN
              ww6_a2pO
              ww7_a2pP
              ww8_a2pQ
              ww9_a2pR
              ww10_a2pS ->
    $wa1 w11_rZL2 ww_a2pI ww3_a2pL
    }

lvl100_rZL4
lvl100_rZL4 = unpackCString# "no support for type literals."

w12_rZL5
w12_rZL5 = unpackAppendCString# "yokoTH: " lvl100_rZL4

a115_rZL6
a115_rZL6 =
  \ @ m_X2Io w13_X2Vt ->
    case w13_X2Vt
    of _
    { D:Quasi ww_a2pI
              ww1_a2pJ
              ww2_a2pK
              ww3_a2pL
              ww4_a2pM
              ww5_a2pN
              ww6_a2pO
              ww7_a2pP
              ww8_a2pQ
              ww9_a2pR
              ww10_a2pS ->
    $wa1 w12_rZL5 ww_a2pI ww3_a2pL
    }

a116_rZL7
a116_rZL7 = unpackCString# "Rep"

a117_rZL8
a117_rZL8 =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl101_rZL9
lvl101_rZL9 = Name (a116_rZL7 `cast` ...) a117_rZL8

a118_rZLa
a118_rZLa = C# 'C'

a119_rZLb
a119_rZLb = : a118_rZLa ([])

a120_rZLc
a120_rZLc =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl102_rZLd
lvl102_rZLd = Name (a119_rZLb `cast` ...) a120_rZLc

lvl103_rZLe
lvl103_rZLe = ConT lvl102_rZLd

a121_rZLf
a121_rZLf = : a118_rZLa ([])

a122_rZLg
a122_rZLg =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl104_rZLh
lvl104_rZLh = Name (a121_rZLf `cast` ...) a122_rZLg

lvl105_rZLi
lvl105_rZLi = ConE lvl104_rZLh

a123_rZLj
a123_rZLj = : a118_rZLa ([])

a124_rZLk
a124_rZLk =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl106_rZLl
lvl106_rZLl = Name (a123_rZLj `cast` ...) a124_rZLk

lvl107_rZLm
lvl107_rZLm = patError "Data/Yoko/TH.hs:(496,37)-(499,42)|case"

a125_rZLn
a125_rZLn = unpackCString# "DT0"

a126_rZLo
a126_rZLo =
  NameG TcClsName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl108_rZLp
lvl108_rZLp = Name (a125_rZLn `cast` ...) a126_rZLo

a127_rZLq
a127_rZLq = unpackCString# "disband0"

a128_rZLr
a128_rZLr =
  NameG VarName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl109_rZLs
lvl109_rZLs = Name (a127_rZLq `cast` ...) a128_rZLr

a129_rZLt
a129_rZLt = unpackCString# "N0"

a130_rZLu
a130_rZLu =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl110_rZLv
lvl110_rZLv = Name (a129_rZLt `cast` ...) a130_rZLu

a131_rZLw
a131_rZLw =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl111_rZLx
lvl111_rZLx = Name (a129_rZLt `cast` ...) a131_rZLw

lvl112_rZLy
lvl112_rZLy = (lvl108_rZLp, lvl109_rZLs, lvl110_rZLv, lvl111_rZLx)

a132_rZLz
a132_rZLz = unpackCString# "DT1"

a133_rZLA
a133_rZLA =
  NameG TcClsName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl113_rZLB
lvl113_rZLB = Name (a132_rZLz `cast` ...) a133_rZLA

a134_rZLC
a134_rZLC = unpackCString# "disband1"

a135_rZLD
a135_rZLD =
  NameG VarName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl114_rZLE
lvl114_rZLE = Name (a134_rZLC `cast` ...) a135_rZLD

a136_rZLF
a136_rZLF = unpackCString# "N1"

a137_rZLG
a137_rZLG =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl115_rZLH
lvl115_rZLH = Name (a136_rZLF `cast` ...) a137_rZLG

a138_rZLI
a138_rZLI =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl116_rZLJ
lvl116_rZLJ = Name (a136_rZLF `cast` ...) a138_rZLI

lvl117_rZLK
lvl117_rZLK = (lvl113_rZLB, lvl114_rZLE, lvl115_rZLH, lvl116_rZLJ)

a139_rZLL
a139_rZLL = unpackCString# "DT2"

a140_rZLM
a140_rZLM =
  NameG TcClsName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl118_rZLN
lvl118_rZLN = Name (a139_rZLL `cast` ...) a140_rZLM

a141_rZLO
a141_rZLO = unpackCString# "disband2"

a142_rZLP
a142_rZLP =
  NameG VarName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl119_rZLQ
lvl119_rZLQ = Name (a141_rZLO `cast` ...) a142_rZLP

a143_rZLR
a143_rZLR = unpackCString# "N2"

a144_rZLS
a144_rZLS =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl120_rZLT
lvl120_rZLT = Name (a143_rZLR `cast` ...) a144_rZLS

a145_rZLU
a145_rZLU =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl121_rZLV
lvl121_rZLV = Name (a143_rZLR `cast` ...) a145_rZLU

lvl122_rZLW
lvl122_rZLW = (lvl118_rZLN, lvl119_rZLQ, lvl120_rZLT, lvl121_rZLV)

lvl123_rZLX
lvl123_rZLX = patError "Data/Yoko/TH.hs:(501,17)-(504,56)|case"

a146_rZLY
a146_rZLY = unpackCString# "Invariant"

a147_rZLZ
a147_rZLZ = unpackCString# "invariant-0.1.0"

a148_rZM0
a148_rZM0 = unpackCString# "Data.Functor.Invariant"

a149_rZM1
a149_rZM1 =
  NameG TcClsName (a147_rZLZ `cast` ...) (a148_rZM0 `cast` ...)

lvl124_rZM2
lvl124_rZM2 = Name (a146_rZLY `cast` ...) a149_rZM1

a150_rZM3
a150_rZM3 = unpackCString# "invmap"

a151_rZM4
a151_rZM4 =
  NameG VarName (a147_rZLZ `cast` ...) (a148_rZM0 `cast` ...)

lvl125_rZM5
lvl125_rZM5 = Name (a150_rZM3 `cast` ...) a151_rZM4

a152_rZM6
a152_rZM6 = unpackCString# "gen_invmap"

a153_rZM7
a153_rZM7 = unpackCString# "Data.Yoko.Invariant"

a154_rZM8
a154_rZM8 =
  NameG VarName (a2_rZHl `cast` ...) (a153_rZM7 `cast` ...)

lvl126_rZM9
lvl126_rZM9 = Name (a152_rZM6 `cast` ...) a154_rZM8

a155_rZMa
a155_rZMa = unpackCString# "Invariant2"

a156_rZMb
a156_rZMb =
  NameG TcClsName (a147_rZLZ `cast` ...) (a148_rZM0 `cast` ...)

lvl127_rZMc
lvl127_rZMc = Name (a155_rZMa `cast` ...) a156_rZMb

a157_rZMd
a157_rZMd = unpackCString# "invmap2"

a158_rZMe
a158_rZMe =
  NameG VarName (a147_rZLZ `cast` ...) (a148_rZM0 `cast` ...)

lvl128_rZMf
lvl128_rZMf = Name (a157_rZMd `cast` ...) a158_rZMe

a159_rZMg
a159_rZMg = unpackCString# "gen_invmap2"

a160_rZMh
a160_rZMh =
  NameG VarName (a2_rZHl `cast` ...) (a153_rZM7 `cast` ...)

lvl129_rZMi
lvl129_rZMi = Name (a159_rZMg `cast` ...) a160_rZMh

lvl130_rZMj
lvl130_rZMj = C# '`'

a161_rZMk
a161_rZMk = unpackCString# ":+:"

a162_rZMl
a162_rZMl =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl131_rZMm
lvl131_rZMm = Name (a161_rZMk `cast` ...) a162_rZMl

lvl132_rZMn
lvl132_rZMn = ConT lvl131_rZMm

a163_rZMo
a163_rZMo = C# 'L'

a164_rZMp
a164_rZMp = : a163_rZMo ([])

a165_rZMq
a165_rZMq =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl133_rZMr
lvl133_rZMr = Name (a164_rZMp `cast` ...) a165_rZMq

a166_rZMs
a166_rZMs = C# 'R'

a167_rZMt
a167_rZMt = : a166_rZMs ([])

a168_rZMu
a168_rZMu =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl134_rZMv
lvl134_rZMv = Name (a167_rZMt `cast` ...) a168_rZMu

lvl135_rZMw
lvl135_rZMw = ConE lvl134_rZMv

lvl136_rZMx
lvl136_rZMx = AppE lvl7_rZHF lvl135_rZMw

lvl137_rZMy
lvl137_rZMy =
  \ eta_aVU0 ->
    (AppE
       lvl136_rZMx (case eta_aVU0 of _ { (x8_aVU3, y_aVU4) -> x8_aVU3 }),
     case eta_aVU0 of _ { (x8_aVU8, y_aVU9) -> y_aVU9 })

lvl138_rZMz
lvl138_rZMz = ConE lvl133_rZMr

lvl139_rZMA
lvl139_rZMA = AppE lvl7_rZHF lvl138_rZMz

a169_rZMB
a169_rZMB =
  \ l_aUcC r_aUcD @ m_a2cY eta_B1 ->
    let {
      a201_sZjp
      a201_sZjp = $p1Quasi eta_B1 } in
    let {
      lvl174_sZdI
      lvl174_sZdI = return a201_sZjp } in
    let {
      lvl175_sZdH
      lvl175_sZdH = (r_aUcD `cast` ...) eta_B1 } in
    let {
      a202_sZjr
      a202_sZjr = $p1Quasi eta_B1 } in
    let {
      lvl176_sZdG
      lvl176_sZdG = >>= a202_sZjr } in
    >>=
      ($p1Quasi eta_B1)
      ((l_aUcC `cast` ...) eta_B1)
      (\ x8_a2mY ->
         case x8_a2mY of _ { (l1_aUcE, ls_aUcF) ->
         let {
           lvl177_sWGb
           lvl177_sWGb = AppT lvl132_rZMn l1_aUcE } in
         lvl176_sZdG
           lvl175_sZdH
           (\ x9_X2HX ->
              case x9_X2HX of _ { (r1_aUcG, rs_aUcH) ->
              lvl174_sZdI
                (AppT lvl177_sWGb r1_aUcG,
                 let {
                   z_a112
                   z_a112 = map lvl137_rZMy rs_aUcH } in
                 letrec {
                   go_a113
                   go_a113 =
                     \ ds2_a114 ->
                       case ds2_a114 of _ {
                         [] -> z_a112;
                         : y_a119 ys_a11a ->
                           : (AppE
                                lvl139_rZMA (case y_a119 of _ { (x10_aVU3, y1_aVU4) -> x10_aVU3 }),
                              case y_a119 of _ { (x10_aVU8, y1_aVU9) -> y1_aVU9 })
                             (go_a113 ys_a11a)
                       }; } in
                 go_a113 ls_aUcF)
              })
         })

a170_rZMC
a170_rZMC = unpackCString# "DCs"

a171_rZMD
a171_rZMD =
  NameG TcClsName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl140_rZME
lvl140_rZME = Name (a170_rZMC `cast` ...) a171_rZMD

x1_rZMF
x1_rZMF = ((), [])

a172_rZMG
a172_rZMG =
  \ @ m_X2W2 $dQuasi_X2W4 -> return ($p1Quasi $dQuasi_X2W4) x1_rZMF

a173_rZMH
a173_rZMH = unpackCString# "NonRecDT"

a174_rZMI
a174_rZMI =
  NameG DataName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

a175_rZMJ
a175_rZMJ = Name (a173_rZMH `cast` ...) a174_rZMI

a176_rZMK
a176_rZMK = PromotedT a175_rZMJ

x2_rZML
x2_rZML = (a176_rZMK, [])

a177_rZMM
a177_rZMM =
  \ @ m_X2Wi $dQuasi_X2Wk -> return ($p1Quasi $dQuasi_X2Wk) x2_rZML

a178_rZMN
a178_rZMN =
  \ ds2_aVH4 ->
    (case ds2_aVH4 of _ { (a201_aVH7, w13_aVH8) ->
     catMaybes1 a201_aVH7
     },
     case ds2_aVH4 of _ { (a201_aVHc, w13_aVHd) -> w13_aVHd })

x3_rZMO
x3_rZMO = (Nothing, [])

lvl141_rZMP
lvl141_rZMP =
  \ x8_a123 ->
    VarT
      (case x8_a123 of _ {
         PlainTV n_a26w -> n_a26w;
         KindedTV n_a26x ds2_d2ar -> n_a26x
       })

lvl142_rZMQ
lvl142_rZMQ =
  irrefutPatError "Data/Yoko/TH.hs:537:13-45|(l, _ : r)"

a179_rZMR
a179_rZMR = unpackCString# "RecDT"

a180_rZMS
a180_rZMS =
  NameG DataName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl143_rZMT
lvl143_rZMT = Name (a179_rZMR `cast` ...) a180_rZMS

lvl144_rZMU
lvl144_rZMU = PromotedT lvl143_rZMT

a181_rZMV
a181_rZMV = unpackCString# "DTs"

a182_rZMW
a182_rZMW =
  NameG TcClsName (a2_rZHl `cast` ...) (a30_rZI8 `cast` ...)

lvl145_rZMX
lvl145_rZMX = Name (a181_rZMV `cast` ...) a182_rZMW

lvl146_rZMY
lvl146_rZMY = C# ','

lvl147_rZMZ
lvl147_rZMZ = : lvl146_rZMY ([])

lvl148_rZN0
lvl148_rZN0 =
  \ x8_a123 ->
    case x8_a123 of _ {
      PlainTV n_a26w ->
        case n_a26w of _ { Name occ_aVGr ds2_aVGs -> occ_aVGr `cast` ... };
      KindedTV n_a26x ds2_d2ar ->
        case n_a26x of _ { Name occ_aVGr ds3_aVGs -> occ_aVGr `cast` ... }
    }

lvl149_rZN1
lvl149_rZN1 = unpackCString# "1 parameter"

lvl150_rZN2
lvl150_rZN2 = $fEqForeign_$c==1 StarT StarT

lvl151_rZN3
lvl151_rZN3 =
  \ x8_a123 ->
    case x8_a123 of _ {
      PlainTV ds2_dVeN ->
        case lvl150_rZN2 of _ {
          False -> True;
          True -> False
        };
      KindedTV ds2_dVeM k_aU9B ->
        case $fEqForeign_$c==1 k_aU9B StarT of _ {
          False -> True;
          True -> False
        }
    }

a183_rZN4
a183_rZN4 =
  \ ds2_aVH4 ->
    (Right
       (case ds2_aVH4 of _ { (a201_aVH7, w13_aVH8) ->
        case a201_aVH7 of _ { (x8_a2bS, ds3_a2bT) -> x8_a2bS }
        }),
     case ds2_aVH4 of _ { (a201_aVHc, w13_aVHd) -> w13_aVHd })

$wlvl1_rZN5
$wlvl1_rZN5 =
  \ ww_sYxB ww1_sYxC w13_sYxE ->
    let {
      a201_sXnk
      a201_sXnk =
        case ww1_sYxC of _ { I# x8_aeQG -> I# (+# x8_aeQG 1) } } in
    let {
      a202_sXni
      a202_sXni = $sinsert_$sgo10 w13_sYxE (Just ww1_sYxC) ww_sYxB } in
    let {
      lvl174_sWHS
      lvl174_sWHS = (a202_sXni, a201_sXnk) } in
    let {
      lvl175_sWHT
      lvl175_sWHT = (a202_sXni, a201_sXnk) } in
    let {
      a203_sXne
      a203_sXne = $sinsert_$sgo10 w13_sYxE (Nothing) ww_sYxB } in
    let {
      lvl176_sWHU
      lvl176_sWHU = (a203_sXne, ww1_sYxC) } in
    \ @ m_X2IL $dQuasi_X2IN ->
      let {
        a204_sZjQ
        a204_sZjQ = $p1Quasi $dQuasi_X2IN } in
      let {
        lvl177_sZdM
        lvl177_sZdM = return a204_sZjQ } in
      let {
        a205_sZjS
        a205_sZjS = $p1Quasi $dQuasi_X2IN } in
      let {
        lvl178_sZdL
        lvl178_sZdL = >>= a205_sZjS } in
      >>=
        ($p1Quasi $dQuasi_X2IN)
        (let {
           a206_sZjU
           a206_sZjU = $p1Quasi $dQuasi_X2IN } in
         let {
           lvl179_sZdK
           lvl179_sZdK = return a206_sZjU } in
         >>=
           ($p1Quasi $dQuasi_X2IN)
           (qReify $dQuasi_X2IN w13_sYxE)
           (\ x8_a2mY -> lvl179_sZdK (x8_a2mY, [])))
        (\ x8_a2mY ->
           let {
             w14_aY03
             w14_aY03 =
               case x8_a2mY of _ { (a206_aY06, w15_aY07) -> w15_aY07 } } in
           lvl178_sZdL
             (lvl177_sZdM
                (case x8_a2mY of _ { (a206_aY0b, w15_aY0c) ->
                 case a206_aY0b of _ {
                   __DEFAULT -> lvl174_sWHS;
                   TyConI ds2_dVpt ->
                     case ds2_dVpt of _ {
                       __DEFAULT -> lvl175_sWHT;
                       TySynD ds3_dVpu ds4_dVpv ds5_dVpw -> lvl176_sWHU
                     }
                 }
                 },
                 []))
             (\ x9_X2I8 ->
                lvl177_sZdM
                  (case x9_X2I8 of _ { (b_aY0h, w'_aY0i) -> b_aY0h },
                   ++ w14_aY03 (case x9_X2I8 of _ { (b_aY0m, w'_aY0n) -> w'_aY0n }))))

lvl152_rZN6
lvl152_rZN6 =
  \ w13_sYxz w14_sYxE ->
    case w13_sYxz of _ { (ww_sYxB, ww1_sYxC) ->
    ($wlvl1_rZN5 ww_sYxB ww1_sYxC w14_sYxE) `cast` ...
    }

lvl153_rZN7
lvl153_rZN7 = I# 0

lvl154_rZN8
lvl154_rZN8 = (Tip, lvl153_rZN7)

a184_rZN9
a184_rZN9 = C# '_'

ds1_rZNa
ds1_rZNa = : a184_rZN9 ([])

lvl155_rZNb
lvl155_rZNb = \ ds2_dVrJ -> ++ ds2_dVrJ ds1_rZNa

lvl156_rZNc
lvl156_rZNc = I# 1

a185_rZNd
a185_rZNd = unpackCString# "Dep1"

a186_rZNe
a186_rZNe =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl157_rZNf
lvl157_rZNf = Name (a185_rZNd `cast` ...) a186_rZNe

a187_rZNg
a187_rZNg =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl158_rZNh
lvl158_rZNh = Name (a185_rZNd `cast` ...) a187_rZNg

a188_rZNi
a188_rZNi =
  NameG VarName (a147_rZLZ `cast` ...) (a148_rZM0 `cast` ...)

lvl159_rZNj
lvl159_rZNj = Name (a150_rZM3 `cast` ...) a188_rZNi

lvl160_rZNk
lvl160_rZNk = Mapping lvl157_rZNf lvl158_rZNh lvl159_rZNj

lvl161_rZNl
lvl161_rZNl = (lvl156_rZNc, lvl160_rZNk)

lvl162_rZNm
lvl162_rZNm = I# 2

a189_rZNn
a189_rZNn = unpackCString# "Dep2"

a190_rZNo
a190_rZNo =
  NameG TcClsName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl163_rZNp
lvl163_rZNp = Name (a189_rZNn `cast` ...) a190_rZNo

a191_rZNq
a191_rZNq =
  NameG DataName (a2_rZHl `cast` ...) (a43_rZIv `cast` ...)

lvl164_rZNr
lvl164_rZNr = Name (a189_rZNn `cast` ...) a191_rZNq

a192_rZNs
a192_rZNs =
  NameG VarName (a147_rZLZ `cast` ...) (a148_rZM0 `cast` ...)

lvl165_rZNt
lvl165_rZNt = Name (a157_rZMd `cast` ...) a192_rZNs

lvl166_rZNu
lvl166_rZNu = Mapping lvl163_rZNp lvl164_rZNr lvl165_rZNt

lvl167_rZNv
lvl167_rZNv = (lvl162_rZNm, lvl166_rZNu)

lvl168_rZNw
lvl168_rZNw = : lvl167_rZNv ([])

lvl169_rZNx
lvl169_rZNx = : lvl161_rZNl lvl168_rZNw

lvl170_rZNy
lvl170_rZNy =
  \ @ a_aVGO @ b_aVGP w13_aXZN w14_aXZO @ m_X2Iq $dQuasi_X2Is ->
    let {
      a201_sZk4
      a201_sZk4 = $p1Quasi $dQuasi_X2Is } in
    let {
      lvl174_sZdQ
      lvl174_sZdQ = return a201_sZk4 } in
    let {
      a202_sZk6
      a202_sZk6 = $p1Quasi $dQuasi_X2Is } in
    let {
      lvl175_sZdP
      lvl175_sZdP = >>= a202_sZk6 } in
    >>=
      ($p1Quasi $dQuasi_X2Is)
      ((w13_aXZN `cast` ...) $dQuasi_X2Is)
      (\ x8_X35a ->
         let {
           w15_XYmb
           w15_XYmb =
             case x8_X35a of _ { (a203_aY06, w16_aY07) -> w16_aY07 } } in
         lvl175_sZdP
           (((w14_aXZO
                (case x8_X35a of _ { (a203_XYmn, w16_XYmp) -> a203_XYmn }))
             `cast` ...)
              $dQuasi_X2Is)
           (\ x9_X2Jb ->
              lvl174_sZdQ
                (case x9_X2Jb of _ { (b_aY0h, w'_aY0i) -> b_aY0h },
                 ++ w15_XYmb (case x9_X2Jb of _ { (b_aY0m, w'_aY0n) -> w'_aY0n }))))

a193_rZNz
a193_rZNz =
  \ @ a_aXcA a201_aXcB @ m_a2cY eta_B1 ->
    return ($p1Quasi eta_B1) (a201_aXcB, [])

x4_rZNA
x4_rZNA = ([], [])

a194_rZNB
a194_rZNB =
  \ @ m_X2Yw $dQuasi_X2Yy -> return ($p1Quasi $dQuasi_X2Yy) x4_rZNA

x5_rZNC
x5_rZNC = x1_rZMF

a195_rZND
a195_rZND =
  \ @ m_X2Yi $dQuasi_X2Yk -> return ($p1Quasi $dQuasi_X2Yk) x1_rZMF

Rec {
a196_rZNE
a196_rZNE =
  \ ds2_X1od @ m_a2cY eta_B1 ->
    case ds2_X1od of _ {
      [] -> return ($p1Quasi eta_B1) ([]);
      : y_X1om ys_X1oo ->
        let {
          lvl174_sZdU
          lvl174_sZdU = a196_rZNE ys_X1oo eta_B1 } in
        let {
          a201_sZkd
          a201_sZkd = $p1Quasi eta_B1 } in
        let {
          lvl175_sZdT
          lvl175_sZdT = return a201_sZkd } in
        let {
          a202_sZkf
          a202_sZkf = $p1Quasi eta_B1 } in
        let {
          lvl176_sZdS
          lvl176_sZdS = >>= a202_sZkf } in
        >>=
          ($p1Quasi eta_B1)
          (fmap
             ($p1Applicative ($p2Quasi eta_B1))
             lvl12_rZHR
             (let {
                a203_sWR2
                a203_sWR2 =
                  case y_X1om of _ {
                    PlainTV n_a26w -> n_a26w;
                    KindedTV n_a26x ds3_d2ar -> n_a26x
                  } } in
              let {
                x8_a2mH
                x8_a2mH = VarT a203_sWR2 } in
              let {
                a204_sWR4
                a204_sWR4 =
                  \ @ m1_a2mI $dQuasi_a2mJ ->
                    return ($p1Quasi $dQuasi_a2mJ) x8_a2mH } in
              let {
                a205_sWRh
                a205_sWRh = appT1 (a23_rZHY `cast` ...) (a204_sWR4 `cast` ...) } in
              appT1
                ((appT1 (a28_rZI5 `cast` ...) (a205_sWRh `cast` ...)) `cast` ...)
                (a205_sWRh `cast` ...)
                eta_B1))
          (\ x8_X2Ki ->
             lvl176_sZdS
               lvl174_sZdU (\ x9_X2LN -> lvl175_sZdT (: x8_X2Ki x9_X2LN)))
    }
end Rec }

Rec {
lgo2_rZNF
lgo2_rZNF =
  \ z_aeRH ds2_aeRI ->
    case ds2_aeRI of _ {
      [] -> z_aeRH;
      : x8_aeRN xs_aeRO -> lgo2_rZNF (AppT z_aeRH x8_aeRN) xs_aeRO
    }
end Rec }

x6_rZNG
x6_rZNG = ([], [])

Rec {
go5_rZNH
go5_rZNH =
  \ z'_aY2A ds2_aY2B ->
    case ds2_aY2B of _ {
      Bin rb_aY2E x8_aY2F l_aY2G r_aY2H ->
        go5_rZNH
          (let {
             ys_X3m5
             ys_X3m5 = go5_rZNH z'_aY2A r_aY2H } in
           let {
             a201_sZkk
             a201_sZkk = Just x8_aY2F } in
           let {
             lvl174_sZdV
             lvl174_sZdV = (a201_sZkk, []) } in
           (\ @ m_a2cY eta_B1 ->
              let {
                a202_sZkm
                a202_sZkm = $p1Quasi eta_B1 } in
              let {
                lvl175_sZe7
                lvl175_sZe7 = return a202_sZkm } in
              let {
                a203_sZko
                a203_sZko = $p1Quasi eta_B1 } in
              let {
                lvl176_sZe3
                lvl176_sZe3 = >>= a203_sZko } in
              let {
                lvl177_sZe5
                lvl177_sZe5 = (ys_X3m5 `cast` ...) eta_B1 } in
              >>=
                ($p1Quasi eta_B1)
                (let {
                   a204_sZkq
                   a204_sZkq = $p1Quasi eta_B1 } in
                 let {
                   lvl178_sZe2
                   lvl178_sZe2 = return a204_sZkq } in
                 let {
                   lvl179_sZe1
                   lvl179_sZe1 = return ($p1Quasi eta_B1) x3_rZMO } in
                 let {
                   lvl180_sZe0
                   lvl180_sZe0 = return ($p1Quasi eta_B1) lvl174_sZdV } in
                 let {
                   lvl181_sZdZ
                   lvl181_sZdZ = return ($p1Quasi eta_B1) lvl174_sZdV } in
                 let {
                   a205_sZks
                   a205_sZks = $p1Quasi eta_B1 } in
                 let {
                   lvl182_sZdY
                   lvl182_sZdY = >>= a205_sZks } in
                 >>=
                   ($p1Quasi eta_B1)
                   (let {
                      a206_sZku
                      a206_sZku = $p1Quasi eta_B1 } in
                    let {
                      lvl183_sZdX
                      lvl183_sZdX = return a206_sZku } in
                    >>=
                      ($p1Quasi eta_B1)
                      (qReify eta_B1 x8_aY2F)
                      (\ x9_X2KY -> lvl183_sZdX (x9_X2KY, [])))
                   (\ x9_X2KX ->
                      let {
                        w13_XYo4
                        w13_XYo4 =
                          case x9_X2KX of _ { (a206_aY06, w14_aY07) -> w14_aY07 } } in
                      lvl182_sZdY
                        (case x9_X2KX of _ { (a206_XYog, w14_XYoi) ->
                         case a206_XYog of _ {
                           __DEFAULT -> lvl181_sZdZ;
                           TyConI ds3_dVkW ->
                             case ds3_dVkW of _ {
                               __DEFAULT -> lvl180_sZe0;
                               TySynD ds4_dVkX ds5_dVkY ds6_dVkZ -> lvl179_sZe1
                             }
                         }
                         })
                        (\ x10_X2L2 ->
                           lvl178_sZe2
                             (case x10_X2L2 of _ { (b_aY0h, w'_aY0i) -> b_aY0h },
                              ++
                                w13_XYo4 (case x10_X2L2 of _ { (b_aY0m, w'_aY0n) -> w'_aY0n })))))
                (\ x9_X2KZ ->
                   let {
                     w13_XYo6
                     w13_XYo6 =
                       case x9_X2KZ of _ { (a204_aY06, w14_aY07) -> w14_aY07 } } in
                   lvl176_sZe3
                     (let {
                        x10_acbM
                        x10_acbM =
                          case x9_X2KZ of _ { (a204_XYoj, w14_XYol) -> a204_XYoj } } in
                      lvl176_sZe3
                        lvl177_sZe5
                        (\ x11_X2L7 ->
                           let {
                             w14_XYoe
                             w14_XYoe =
                               case x11_X2L7 of _ { (a204_aY06, w15_aY07) -> w15_aY07 } } in
                           lvl176_sZe3
                             (lvl175_sZe7
                                (: x10_acbM
                                   (case x11_X2L7 of _ { (a204_XYoq, w15_XYos) -> a204_XYoq }),
                                 []))
                             (\ x12_X2Lc ->
                                lvl175_sZe7
                                  (case x12_X2Lc of _ { (b_aY0h, w'_aY0i) -> b_aY0h },
                                   ++
                                     w14_XYoe
                                     (case x12_X2Lc of _ { (b_aY0m, w'_aY0n) -> w'_aY0n })))))
                     (\ x10_X2L4 ->
                        lvl175_sZe7
                          (case x10_X2L4 of _ { (b_aY0h, w'_aY0i) -> b_aY0h },
                           ++
                             w13_XYo6 (case x10_X2L4 of _ { (b_aY0m, w'_aY0n) -> w'_aY0n })))))
           `cast` ...)
          l_aY2G;
      Tip -> z'_aY2A
    }
end Rec }

lvl171_rZNI
lvl171_rZNI =
  \ @ m_X2Zl $dQuasi_X2Zn -> return ($p1Quasi $dQuasi_X2Zn) x6_rZNG

lvl172_rZNJ
lvl172_rZNJ = unpackCString# "' must have constructors."

x7_rZNK
x7_rZNK = x1_rZMF

a197_rZNL
a197_rZNL =
  \ @ m_X2Yr $dQuasi_X3me -> return ($p1Quasi $dQuasi_X3me) x1_rZMF

a198_rZNM
a198_rZNM =
  \ @ m_X2YX $dQuasi_X2YZ -> return ($p1Quasi $dQuasi_X2YZ) x1_rZMF

a199_rZNN
a199_rZNN =
  \ @ m_X32h $dQuasi_X32j -> return ($p1Quasi $dQuasi_X32j) ([])

Rec {
$wlgo_rZNO
$wlgo_rZNO =
  \ ww_sYyK ww1_sYyL w13_sYyN ->
    case w13_sYyN of _ {
      [] -> (# ww_sYyK, ww1_sYyL #);
      : x8_aeRN xs_aeRO ->
        case x8_aeRN of _ { (tyR_aUb8, fROR_aUb9) ->
        $wlgo_rZNO
          (AppT ww_sYyK tyR_aUb8)
          (FieldRO
             (AppE
                (AppE
                   (case ww1_sYyL of _ { FieldRO ds2_dVrQ ds3_dVrR -> ds2_dVrQ })
                   (case fROR_aUb9 of _ { FieldRO ds2_dVrQ ds3_dVrR -> ds2_dVrQ }))
                (case fROR_aUb9 of _ { FieldRO ds2_dVrU ds3_dVrV -> ds3_dVrV }))
             (AppE
                (AppE
                   (case ww1_sYyL of _ { FieldRO ds2_dVrU ds3_dVrV -> ds3_dVrV })
                   (case fROR_aUb9 of _ { FieldRO ds2_dVrU ds3_dVrV -> ds3_dVrV }))
                (case fROR_aUb9 of _ { FieldRO ds2_dVrQ ds3_dVrR -> ds2_dVrQ })))
          xs_aeRO
        }
    }
end Rec }

Rec {
lgo3_rZNP
lgo3_rZNP =
  \ z_aeRH ds2_aeRI ->
    case ds2_aeRI of _ {
      [] -> z_aeRH;
      : x8_aeRN xs_aeRO -> lgo3_rZNP (AppT z_aeRH x8_aeRN) xs_aeRO
    }
end Rec }

lvl173_rZNQ
lvl173_rZNQ = unpackCString# " arguments."

Rec {
$wtoNat_rZNR
$wtoNat_rZNR =
  \ ww_sYyt ->
    case ww_sYyt of wild_XFN {
      __DEFAULT -> AppT lvl1_rZHp ($wtoNat_rZNR (-# wild_XFN 1));
      0 -> lvl3_rZHu
    }
end Rec }

Rec {
$wtoNat1_rZNS
$wtoNat1_rZNS =
  \ ww_sYyz ->
    case ww_sYyz of wild_XFV {
      __DEFAULT -> AppT lvl1_rZHp ($wtoNat1_rZNS (-# wild_XFV 1));
      0 -> lvl3_rZHu
    }
end Rec }

Rec {
lgo4_rZNT
lgo4_rZNT =
  \ z_aeRH ds2_aeRI ->
    case ds2_aeRI of _ {
      [] -> z_aeRH;
      : x8_aeRN xs_aeRO -> lgo4_rZNT (AppT z_aeRH x8_aeRN) xs_aeRO
    }
end Rec }

Rec {
lgo5_rZNU
lgo5_rZNU =
  \ z_aeRH ds2_aeRI ->
    case ds2_aeRI of _ {
      [] -> z_aeRH;
      : x8_aeRN xs_aeRO -> lgo5_rZNU (AppT z_aeRH x8_aeRN) xs_aeRO
    }
end Rec }

Rec {
lgo6_rZNV
lgo6_rZNV =
  \ z_aeRH ds2_aeRI ->
    case ds2_aeRI of _ {
      [] -> z_aeRH;
      : x8_aeRN xs_aeRO -> lgo6_rZNV (AppE z_aeRH x8_aeRN) xs_aeRO
    }
end Rec }

a200_rZNW
a200_rZNW = unpackCString# "] involves poly- or higher-kinds."

yokoTH_with
yokoTH_with =
  \ options_aU96 n_aU97 ->
    let {
      ds2_X2J4
      ds2_X2J4 = scc n_aU97 } in
    let {
      a201_sXrR
      a201_sXrR =
        case options_aU96
        of _ { YokoOptions ds3_dVsy ds4_dVsz ds5_dVsA ds6_dVsB ->
        (ds5_dVsA True) `cast` ...
        } } in
    let {
      a202_sXrM
      a202_sXrM =
        case options_aU96
        of _ { YokoOptions ds3_dVss ds4_dVst ds5_dVsu ds6_dVsv ->
        (ds4_dVst lvl169_rZNx) `cast` ...
        } } in
    let {
      f_X1DG
      f_X1DG =
        case options_aU96
        of _ { YokoOptions ds3_dVsm ds4_dVsn ds5_dVso ds6_dVsp ->
        ds3_dVsm lvl155_rZNb
        } } in
    let {
      $wa_sYzk
      $wa_sYzk =
        \ w13_sYxH ->
          case reverse1 (f_X1DG (nameBase w13_sYxH)) ([]) of _ {
            [] -> (# ([]) `cast` ..., NameS #);
            : ds3_aXWo rev_aXWp ->
              case ds3_aXWo of wild1_aXWr { C# ds4_aXWt ->
              mkName_$s$wsplit2 wild1_aXWr ([]) rev_aXWp
              }
          } } in
    let {
      a203_sXxO
      a203_sXxO =
        \ w13_sYxH ->
          case $wa_sYzk w13_sYxH of _ { (# ww1_sYzn, ww2_sYzo #) ->
          Name ww1_sYzn ww2_sYzo
          } } in
    let {
      lvl174_sZaL
      lvl174_sZaL =
        \ w13_sYy8 ->
          case w13_sYy8 of _ { (ww_sYya, ww1_sYyb) ->
          case ww1_sYyb of _ { (ww3_sYyd, ww4_sYye) ->
          let {
            ds3_sW63
            ds3_sW63 =
              case $wpat_exp_rZHy
                     ww3_sYyd
                     (case $wa_sYzk ww3_sYyd of _ { (# ww6_sYzn, ww7_sYzo #) ->
                      Name ww6_sYzn ww7_sYzo
                      })
                     ww4_sYye
              of _ { (# ww6_sYza, ww7_sYzb #) ->
              (ww6_sYza, ww7_sYzb)
              } } in
          Clause
            (: (case ds3_sW63 of _ { (pat_XUQ8, exp_XUHT) -> pat_XUQ8 }) ([]))
            (NormalB
               (AppE
                  ww_sYya (case ds3_sW63 of _ { (pat_aUDv, exp_XUQ8) -> exp_XUQ8 })))
            ([])
          }
          } } in
    let {
      w13_sZaP
      w13_sZaP =
        unpackAppendCString#
          "yokoTH: "
          (: lvl130_rZMj
             (case n_aU97 of _ { Name ww_aVTK ww1_aVTL ->
              ++ ($wshowName' Alone ww_aVTK ww1_aVTL) lvl172_rZNJ
              })) } in
    let {
      lvl175_sZeg
      lvl175_sZeg =
        \ @ m_X2Af w14_X2Nk ->
          case w14_X2Nk
          of _
          { D:Quasi ww_a2pI
                    ww1_a2pJ
                    ww2_a2pK
                    ww3_a2pL
                    ww4_a2pM
                    ww5_a2pN
                    ww6_a2pO
                    ww7_a2pP
                    ww8_a2pQ
                    ww9_a2pR
                    ww10_a2pS ->
          $wa1 w13_sZaP ww_a2pI ww3_a2pL
          } } in
    let {
      lvl176_sZa1
      lvl176_sZa1 = \ ds3_dVkC -> $fEqName_$c== ds3_dVkC n_aU97 } in
    let {
      lvl177_sZ9f
      lvl177_sZ9f =
        case n_aU97 of _ { Name occ_aVGr ds3_aVGs ->
        occ_aVGr `cast` ...
        } } in
    (\ @ m_a2nd $dQuasi_a2ne ->
       fmap
         ($p1Applicative ($p2Quasi $dQuasi_a2ne))
         (snd)
         (let {
            a204_sZlo
            a204_sZlo = $p1Quasi $dQuasi_a2ne } in
          let {
            lvl178_sZey
            lvl178_sZey = return a204_sZlo } in
          let {
            a205_sZlq
            a205_sZlq = $p1Quasi $dQuasi_a2ne } in
          let {
            lvl179_sZej
            lvl179_sZej = >>= a205_sZlq } in
          let {
            a206_sZls
            a206_sZls = $p1Quasi $dQuasi_a2ne } in
          let {
            lvl180_sZew
            lvl180_sZew = >>= a206_sZls } in
          let {
            lvl181_sZeu
            lvl181_sZeu =
              let {
                a207_sZlu
                a207_sZlu = $p1Quasi $dQuasi_a2ne } in
              let {
                lvl182_sZet
                lvl182_sZet = return a207_sZlu } in
              >>=
                ($p1Quasi $dQuasi_a2ne)
                (qLocation $dQuasi_a2ne)
                (\ x8_X2Jc -> lvl182_sZet (x8_X2Jc, [])) } in
          let {
            a207_sZlw
            a207_sZlw = $p1Quasi $dQuasi_a2ne } in
          let {
            lvl182_sZes
            lvl182_sZes = >>= a207_sZlw } in
          let {
            lvl183_sZeq
            lvl183_sZeq =
              let {
                a208_sZly
                a208_sZly = $p1Quasi $dQuasi_a2ne } in
              let {
                lvl184_sZen
                lvl184_sZen = return a208_sZly } in
              let {
                a209_sZlB
                a209_sZlB = $p2Quasi $dQuasi_a2ne } in
              let {
                a210_sZlC
                a210_sZlC = $p1Applicative a209_sZlB } in
              let {
                lvl185_sZeo
                lvl185_sZeo = fmap a210_sZlC } in
              let {
                a211_sZlE
                a211_sZlE = $p1Quasi $dQuasi_a2ne } in
              let {
                lvl186_sZem
                lvl186_sZem = >>= a211_sZlE } in
              >>=
                ($p1Quasi $dQuasi_a2ne)
                (let {
                   a212_sZlG
                   a212_sZlG = $p1Quasi $dQuasi_a2ne } in
                 let {
                   lvl187_sZel
                   lvl187_sZel = return a212_sZlG } in
                 >>=
                   ($p1Quasi $dQuasi_a2ne)
                   ((ds2_X2J4 `cast` ...) $dQuasi_a2ne)
                   (\ x8_X2IK -> lvl187_sZel (x8_X2IK, [])))
                (\ x8_X2IJ ->
                   let {
                     w14_XYlQ
                     w14_XYlQ =
                       case x8_X2IJ of _ { (a212_aY06, w15_aY07) -> w15_aY07 } } in
                   lvl186_sZem
                     (case x8_X2IJ of _ { (a212_aY0b, w15_aY0c) ->
                      case a212_aY0b of _ {
                        Left n1_aU9c -> lvl184_sZen (Left n1_aU9c, []);
                        Right ns_aU9d ->
                          lvl185_sZeo
                            a183_rZN4
                            ((($wfoldM
                                 (lvl170_rZNy `cast` ...)
                                 (a193_rZNz `cast` ...)
                                 lvl152_rZN6
                                 lvl154_rZN8
                                 ($fDataSet_go ([]) ns_aU9d))
                              `cast` ...)
                               $dQuasi_a2ne)
                      }
                      })
                     (\ x9_X2IQ ->
                        lvl184_sZen
                          (case x9_X2IQ of _ { (b_aY0h, w'_aY0i) -> b_aY0h },
                           ++
                             w14_XYlQ
                             (case x9_X2IQ of _ { (b_aY0m, w'_aY0n) -> w'_aY0n })))) } in
          let {
            a208_sZlN
            a208_sZlN = $p1Quasi $dQuasi_a2ne } in
          let {
            lvl184_sZek
            lvl184_sZek = >>= a208_sZlN } in
          >>=
            ($p1Quasi $dQuasi_a2ne)
            (let {
               a209_sZlP
               a209_sZlP = $p1Quasi $dQuasi_a2ne } in
             let {
               lvl185_sZei
               lvl185_sZei = return a209_sZlP } in
             >>=
               ($p1Quasi $dQuasi_a2ne)
               (case $dQuasi_a2ne
                of _
                { D:Quasi ww_s2qT
                          ww1_s2qU
                          ww2_s2qV
                          ww3_s2qW
                          ww4_s2qX
                          ww5_s2qY
                          ww6_s2qZ
                          ww7_s2r0
                          ww8_s2r1
                          ww9_s2r2
                          ww10_s2r3 ->
                $wa n_aU97 ww_s2qT ww3_s2qW ww6_s2qZ
                })
               (\ x8_a2mY -> lvl185_sZei (x8_a2mY, [])))
            (\ x8_a2mY ->
               let {
                 w14_aY03
                 w14_aY03 =
                   case x8_a2mY of _ { (a209_aY06, w15_aY07) -> w15_aY07 } } in
               lvl179_sZej
                 (lvl184_sZek
                    lvl183_sZeq
                    (\ x9_X2II ->
                       let {
                         w15_XYlP
                         w15_XYlP =
                           case x9_X2II of _ { (a209_aY06, w16_aY07) -> w16_aY07 } } in
                       lvl179_sZej
                         (case x8_a2mY of _ { (a209_aY0b, w16_aY0c) ->
                          case a209_aY0b of _ { DataType tvbs_aUbj cons_aUbk ->
                          let {
                            x10_X92A
                            x10_X92A =
                              case cons_aUbk of _ {
                                Left x11_aVGj -> : x11_aVGj ([]);
                                Right y_aVGm -> y_aVGm
                              } } in
                          let {
                            lvl185_sWHm
                            lvl185_sWHm = map tvbKind_rU2V tvbs_aUbj } in
                          let {
                            x11_a8qS
                            x11_a8qS =
                              case $wlen (drop_drop# 2 tvbs_aUbj) 0 of ww_a2qe { __DEFAULT ->
                              case $wlen tvbs_aUbj 0 of ww1_X2N0 { __DEFAULT ->
                              case ># ww_a2qe ww1_X2N0 of _ {
                                False ->
                                  let {
                                    lvl186_sZeC
                                    lvl186_sZeC = ([], tvbs_aUbj) } in
                                  letrec {
                                    go_aWMd
                                    go_aWMd =
                                      \ x12_aWMe ->
                                        : (case <# x12_aWMe 0 of _ {
                                             False -> splitAt_splitAt# x12_aWMe tvbs_aUbj;
                                             True -> lvl186_sZeC
                                           })
                                          (case ==# x12_aWMe ww1_X2N0 of _ {
                                             False -> go_aWMd (+# x12_aWMe 1);
                                             True -> []
                                           }); } in
                                  go_aWMd ww_a2qe;
                                True -> []
                              }
                              }
                              } } in
                          let {
                            activated_sW5n
                            activated_sW5n =
                              case options_aU96
                              of _ { YokoOptions ds3_dVsE ds4_dVsF ds5_dVsG ds6_dVsH ->
                              ds6_dVsH
                                (case cons_aUbk of _ {
                                   Left x12_aVGj -> : (conName_rU2T x12_aVGj) ([]);
                                   Right y_aVGm -> map conName_rU2T y_aVGm
                                 })
                              } } in
                          let {
                            scc_aU9i
                            scc_aU9i =
                              case x9_X2II of _ { (a210_XYoI, w17_XYoK) -> a210_XYoI } } in
                          let {
                            lvl186_sZeD
                            lvl186_sZeD =
                              \ x12_X2Jy ->
                                let {
                                  w17_XYmF
                                  w17_XYmF =
                                    case x12_X2Jy of _ { (a210_aY06, w18_aY07) -> w18_aY07 } } in
                                lvl179_sZej
                                  (let {
                                     nAndFieldss_aUbt
                                     nAndFieldss_aUbt =
                                       case x12_X2Jy of _ { (a210_XYmS, w18_XYmU) ->
                                       a210_XYmS
                                       } } in
                                   letrec {
                                     go_X1nO
                                     go_X1nO =
                                       \ ds3_a114 ->
                                         case ds3_a114 of _ {
                                           [] -> a195_rZND `cast` ...;
                                           : y_a119 ys_a11a ->
                                             let {
                                               ds4_X2JV
                                               ds4_X2JV =
                                                 case y_a119 of _ { (tvbs1_aUbw, pars_aUbx) ->
                                                 case filter lvl151_rZN3 pars_aUbx of wild4_X4y {
                                                   [] ->
                                                     let {
                                                       a210_sXsr
                                                       a210_sXsr =
                                                         lgo1_rZHG (ConT n_aU97) tvbs1_aUbw } in
                                                     let {
                                                       lvl187_sZ9Z
                                                       lvl187_sZ9Z = : a210_sXsr ([]) } in
                                                     let {
                                                       ds5_sZ9X
                                                       ds5_sZ9X =
                                                         case $wlen pars_aUbx 0 of _ {
                                                           __DEFAULT -> lvl107_rZLm;
                                                           0 -> lvl112_rZLy;
                                                           1 -> lvl117_rZLK;
                                                           2 -> lvl122_rZLW
                                                         } } in
                                                     let {
                                                       nDT_sZaB
                                                       nDT_sZaB =
                                                         case ds5_sZ9X
                                                         of _
                                                         { (nDT1_XUNp, nDisband_XUFq, nN_XUFs, nNCtor_XUFu) ->
                                                         nDT1_XUNp
                                                         } } in
                                                     let {
                                                       a211_sZaD
                                                       a211_sZaD = ConT nDT_sZaB } in
                                                     let {
                                                       lvl188_sZaF
                                                       lvl188_sZaF = AppT a211_sZaD a210_sXsr } in
                                                     let {
                                                       ds6_sZca
                                                       ds6_sZca =
                                                         case $wlen pars_aUbx 0 of _ {
                                                           __DEFAULT -> lvl16_rZI6;
                                                           0 -> lvl19_rZIe;
                                                           1 -> lvl22_rZIl;
                                                           2 -> lvl25_rZIs
                                                         } } in
                                                     let {
                                                       a212_sZcg
                                                       a212_sZcg =
                                                         case ds6_sZca
                                                         of _ { (nDC_aUnO, nRejoin_XUAe) ->
                                                         nRejoin_XUAe
                                                         } } in
                                                     let {
                                                       a213_sZcc
                                                       a213_sZcc =
                                                         case ds6_sZca
                                                         of _ { (nDC_XUAe, nRejoin_XUs5) ->
                                                         nDC_XUAe
                                                         } } in
                                                     let {
                                                       a214_sZce
                                                       a214_sZce = ConT a213_sZcc } in
                                                     let {
                                                       parNs_sZbc
                                                       parNs_sZbc = map tvbName pars_aUbx } in
                                                     let {
                                                       ds7_sZbe
                                                       ds7_sZbe =
                                                         case $wlen parNs_sZbc 0 of _ {
                                                           __DEFAULT -> lvl56_rZJx;
                                                           0 -> lvl59_rZJD;
                                                           1 -> lvl62_rZJJ;
                                                           2 -> lvl65_rZJP
                                                         } } in
                                                     let {
                                                       nRecTy_sZbg
                                                       nRecTy_sZbg =
                                                         case ds7_sZbe
                                                         of _ { (nRecTy1_XUvY, nRecCtor_XUlu) ->
                                                         nRecTy1_XUvY
                                                         } } in
                                                     let {
                                                       lvl189_sZby
                                                       lvl189_sZby = ConT nRecTy_sZbg } in
                                                     let {
                                                       lvl190_sZbw
                                                       lvl190_sZbw =
                                                         case $wlen parNs_sZbc 0
                                                         of ww_a2qe { __DEFAULT ->
                                                         I# ww_a2qe
                                                         } } in
                                                     let {
                                                       lvl191_sZbu
                                                       lvl191_sZbu = reverse1 parNs_sZbc ([]) } in
                                                     letrec {
                                                       go1_sZbk
                                                       go1_sZbk =
                                                         \ z'_aY2A ds8_aY2B ->
                                                           case ds8_aY2B of _ {
                                                             Bin rb_aY2E x13_aY2F l_aY2G r_aY2H ->
                                                               case x13_aY2F
                                                               of w18_sZbq
                                                               { Name ww_sZbp ww1_sZbo ->
                                                               go1_sZbk
                                                                 (case scc_aU9i of _ {
                                                                    Left ds9_dVeu ->
                                                                      case elem
                                                                             $fEqName
                                                                             w18_sZbq
                                                                             parNs_sZbc
                                                                      of _ {
                                                                        False ->
                                                                          go1_sZbk z'_aY2A r_aY2H;
                                                                        True -> True
                                                                      };
                                                                    Right bg_aUas ->
                                                                      case $wpoly_go10
                                                                             ww_sZbp
                                                                             ww1_sZbo
                                                                             bg_aUas
                                                                      of _ {
                                                                        False ->
                                                                          case elem
                                                                                 $fEqName
                                                                                 w18_sZbq
                                                                                 parNs_sZbc
                                                                          of _ {
                                                                            False ->
                                                                              go1_sZbk
                                                                                z'_aY2A r_aY2H;
                                                                            True -> True
                                                                          };
                                                                        True -> True
                                                                      }
                                                                  })
                                                                 l_aY2G
                                                               };
                                                             Tip -> z'_aY2A
                                                           }; } in
                                                     let {
                                                       lvl192_sZbs
                                                       lvl192_sZbs =
                                                         \ x13_a123 ->
                                                           go1_sZbk
                                                             False (namesIn_rU35 x13_a123) } in
                                                     let {
                                                       nRecCtor_sZbi
                                                       nRecCtor_sZbi =
                                                         case ds7_sZbe
                                                         of _ { (nRecTy1_aUiY, nRecCtor1_XUvY) ->
                                                         nRecCtor1_XUvY
                                                         } } in
                                                     letrec {
                                                       go2_sZbF
                                                       go2_sZbF =
                                                         \ ds8_X1qi ->
                                                           case ds8_X1qi of _ {
                                                             [] -> a199_rZNN `cast` ...;
                                                             : y1_X1qp ys1_X1qr ->
                                                               let {
                                                                 m'_acbL
                                                                 m'_acbL = go2_sZbF ys1_X1qr } in
                                                               let {
                                                                 m_acbK
                                                                 m_acbK =
                                                                   case $wpeelAppAcc ([]) y1_X1qp
                                                                   of _
                                                                   { (# ww1_s2rt, ww2_s2ru #) ->
                                                                   w18_sZbB ww1_s2rt ww2_s2ru
                                                                   } } in
                                                               (\ @ m1_X2KQ $dQuasi1_X2KS ->
                                                                  let {
                                                                    a215_sZn0
                                                                    a215_sZn0 =
                                                                      $p1Quasi $dQuasi1_X2KS } in
                                                                  let {
                                                                    lvl193_sZfW
                                                                    lvl193_sZfW =
                                                                      return a215_sZn0 } in
                                                                  let {
                                                                    lvl194_sZfV
                                                                    lvl194_sZfV =
                                                                      (m'_acbL `cast` ...)
                                                                        $dQuasi1_X2KS } in
                                                                  let {
                                                                    a216_sZn2
                                                                    a216_sZn2 =
                                                                      $p1Quasi $dQuasi1_X2KS } in
                                                                  let {
                                                                    lvl195_sZfU
                                                                    lvl195_sZfU = >>= a216_sZn2 } in
                                                                  >>=
                                                                    ($p1Quasi $dQuasi1_X2KS)
                                                                    ((m_acbK `cast` ...)
                                                                       $dQuasi1_X2KS)
                                                                    (\ x13_X2Mo ->
                                                                       lvl195_sZfU
                                                                         lvl194_sZfV
                                                                         (\ x14_X2Qj ->
                                                                            lvl193_sZfW
                                                                              (: x13_X2Mo
                                                                                 x14_X2Qj))))
                                                               `cast` ...
                                                           };
                                                       $wappliedType_sZbA
                                                       $wappliedType_sZbA =
                                                         \ ww_sYyV
                                                           ww1_sYyW
                                                           ww2_sYyX
                                                           w19_sYyZ
                                                           w20_sYz0 ->
                                                           let {
                                                             ds8_X3an
                                                             ds8_X3an = go2_sZbF w20_sYz0 } in
                                                           let {
                                                             lvl193_sWHG
                                                             lvl193_sWHG = ConE ww1_sYyW } in
                                                           let {
                                                             lvl194_sZfX
                                                             lvl194_sZfX =
                                                               AppE lvl7_rZHF lvl193_sWHG } in
                                                           let {
                                                             a215_sXHF
                                                             a215_sXHF =
                                                               ConP ww1_sYyW lvl67_rZJT } in
                                                           let {
                                                             a216_sXix
                                                             a216_sXix = : a215_sXHF ([]) } in
                                                           let {
                                                             lvl195_sWHH
                                                             lvl195_sWHH =
                                                               LamE a216_sXix lvl68_rZJU } in
                                                           let {
                                                             a217_sXis
                                                             a217_sXis = VarE ww2_sYyX } in
                                                           let {
                                                             a218_sXiv
                                                             a218_sXiv =
                                                               FieldRO a217_sXis a217_sXis } in
                                                           let {
                                                             a219_sXip
                                                             a219_sXip = AppT ww_sYyV w19_sYyZ } in
                                                           \ @ m1_X3a1 $dQuasi1_X2KR ->
                                                             let {
                                                               a220_sZn4
                                                               a220_sZn4 =
                                                                 $p1Quasi $dQuasi1_X2KR } in
                                                             let {
                                                               lvl196_sZfY
                                                               lvl196_sZfY = return a220_sZn4 } in
                                                             >>=
                                                               ($p1Quasi $dQuasi1_X2KR)
                                                               ((ds8_X3an `cast` ...) $dQuasi1_X2KR)
                                                               (\ x13_X2Mc ->
                                                                  let {
                                                                    eta_aVQW
                                                                    eta_aVQW =
                                                                      case $wlgo_rZNO
                                                                             a219_sXip
                                                                             a218_sXiv
                                                                             x13_X2Mc
                                                                      of _
                                                                      { (# ww4_sYzF, ww5_sYzG #) ->
                                                                      (ww4_sYzF, ww5_sYzG)
                                                                      } } in
                                                                  let {
                                                                    fRO_aUbc
                                                                    fRO_aUbc =
                                                                      case eta_aVQW
                                                                      of _ { (x14_aVR4, y1_aVR5) ->
                                                                      y1_aVR5
                                                                      } } in
                                                                  lvl196_sZfY
                                                                    (case eta_aVQW
                                                                     of _ { (x14_aVQZ, y1_aVR0) ->
                                                                     x14_aVQZ
                                                                     },
                                                                     FieldRO
                                                                       (AppE
                                                                          lvl194_sZfX
                                                                          (case fRO_aUbc
                                                                           of _
                                                                           { FieldRO ds9_dVrQ
                                                                                     ds10_dVrR ->
                                                                           ds9_dVrQ
                                                                           }))
                                                                       (AppE
                                                                          (AppE
                                                                             lvl7_rZHF
                                                                             (case fRO_aUbc
                                                                              of _
                                                                              { FieldRO ds9_dVrU
                                                                                        ds10_dVrV ->
                                                                              ds10_dVrV
                                                                              }))
                                                                          lvl195_sWHH)));
                                                       w18_sZbB
                                                       w18_sZbB =
                                                         \ ty_aUaw tys_aUax ->
                                                           let {
                                                             $wfail_sYzy
                                                             $wfail_sYzy =
                                                               case $wbreak lvl192_sZbs tys_aUax
                                                               of _ { (# ww1_aY2k, ww2_aY2l #) ->
                                                               let {
                                                                 container_aUkD
                                                                 container_aUkD =
                                                                   lgo3_rZNP ty_aUaw ww1_aY2k } in
                                                               case ww2_aY2l of wild5_aVxQ {
                                                                 [] ->
                                                                   let {
                                                                     a215_sXj5
                                                                     a215_sXj5 =
                                                                       AppT
                                                                         lvl70_rZJY
                                                                         container_aUkD } in
                                                                   let {
                                                                     x13_X324
                                                                     x13_X324 =
                                                                       (a215_sXj5, lvl75_rZK6) } in
                                                                   \ @ m1_X329 $dQuasi1_X32b ->
                                                                     return
                                                                       ($p1Quasi $dQuasi1_X32b)
                                                                       x13_X324;
                                                                 : ds8_aXiU ds9_aXiV ->
                                                                   case lookup
                                                                          $fEqInt
                                                                          (case $wlen wild5_aVxQ 0
                                                                           of ww3_a2qe
                                                                           { __DEFAULT ->
                                                                           I# ww3_a2qe
                                                                           })
                                                                          (a202_sXrM `cast` ...)
                                                                   of _ {
                                                                     Nothing ->
                                                                       let {
                                                                         w19_X2Oq
                                                                         w19_X2Oq =
                                                                           unpackAppendCString#
                                                                             "yokoTH: "
                                                                             (unpackAppendCString#
                                                                                "no case in the given YokoOptions for type constructors with "
                                                                                (case $wlen
                                                                                        wild5_aVxQ 0
                                                                                 of ww3_a2qe
                                                                                 { __DEFAULT ->
                                                                                 ++
                                                                                   ($wshowSignedInt
                                                                                      0
                                                                                      ww3_a2qe
                                                                                      ([]))
                                                                                   lvl173_rZNQ
                                                                                 })) } in
                                                                       \ @ m1_a2cC w20_a2pG ->
                                                                         case w20_a2pG
                                                                         of _
                                                                         { D:Quasi ww3_a2pI
                                                                                   ww4_a2pJ
                                                                                   ww5_a2pK
                                                                                   ww6_a2pL
                                                                                   ww7_a2pM
                                                                                   ww8_a2pN
                                                                                   ww9_a2pO
                                                                                   ww10_a2pP
                                                                                   ww11_a2pQ
                                                                                   ww12_a2pR
                                                                                   ww13_a2pS ->
                                                                         $wa1
                                                                           w19_X2Oq
                                                                           ww3_a2pI
                                                                           ww6_a2pL
                                                                         };
                                                                     Just ds10_dVdZ ->
                                                                       case ds10_dVdZ
                                                                       of _
                                                                       { Mapping ds11_dVe0
                                                                                 ds12_dVe1
                                                                                 ds13_dVe2 ->
                                                                       $wappliedType_sZbA
                                                                         (ConT ds11_dVe0)
                                                                         ds12_dVe1
                                                                         ds13_dVe2
                                                                         container_aUkD
                                                                         wild5_aVxQ
                                                                       }
                                                                   }
                                                               }
                                                               } } in
                                                           case ty_aUaw of wild5_XbX {
                                                             __DEFAULT -> $wfail_sYzy `cast` ...;
                                                             ForallT ds8_dVd3 ds9_dVd4 ds10_dVd5 ->
                                                               a91_rZK9 `cast` ...;
                                                             AppT ds8_dVd6 ds9_dVd7 ->
                                                               a92_rZKc `cast` ...;
                                                             SigT ty1_aUay ds8_dVcZ ->
                                                               case $wpeelAppAcc tys_aUax ty1_aUay
                                                               of _ { (# ww1_s2rt, ww2_s2ru #) ->
                                                               w18_sZbB ww1_s2rt ww2_s2ru
                                                               };
                                                             VarT n1_aUaz ->
                                                               case findIndices
                                                                      (\ ds8_dVcy ->
                                                                         $fEqName_$c==
                                                                           ds8_dVcy n1_aUaz)
                                                                      lvl191_sZbu
                                                               of _ {
                                                                 [] -> $wfail_sYzy `cast` ...;
                                                                 : a215_aVSb _ ->
                                                                   case tys_aUax of _ {
                                                                     [] ->
                                                                       let {
                                                                         ds9_sW76
                                                                         ds9_sW76 =
                                                                           case a215_aVSb
                                                                           of _ { I# ds10_dVcl ->
                                                                           case ds10_dVcl of _ {
                                                                             __DEFAULT ->
                                                                               lvl79_rZKg;
                                                                             0 -> lvl83_rZKp;
                                                                             1 -> lvl87_rZKy
                                                                           }
                                                                           } } in
                                                                       let {
                                                                         a216_sXjQ
                                                                         a216_sXjQ =
                                                                           case ds9_sW76
                                                                           of _
                                                                           { (tyn_aUjT, ctor_aUjU, dtor_XUxu) ->
                                                                           dtor_XUxu
                                                                           } } in
                                                                       let {
                                                                         a217_sXjR
                                                                         a217_sXjR =
                                                                           VarE a216_sXjQ } in
                                                                       let {
                                                                         a218_sXjM
                                                                         a218_sXjM =
                                                                           case ds9_sW76
                                                                           of _
                                                                           { (tyn_aUjT, ctor_XUxu, dtor_XUmK) ->
                                                                           ctor_XUxu
                                                                           } } in
                                                                       let {
                                                                         a219_sXjN
                                                                         a219_sXjN =
                                                                           ConE a218_sXjM } in
                                                                       let {
                                                                         a220_sXjS
                                                                         a220_sXjS =
                                                                           FieldRO
                                                                             a219_sXjN
                                                                             a217_sXjR } in
                                                                       let {
                                                                         a221_sXjH
                                                                         a221_sXjH =
                                                                           case ds9_sW76
                                                                           of _
                                                                           { (tyn_XUxu, ctor_XUmJ, dtor_XUmL) ->
                                                                           tyn_XUxu
                                                                           } } in
                                                                       let {
                                                                         a222_sXjI
                                                                         a222_sXjI =
                                                                           ConT a221_sXjH } in
                                                                       let {
                                                                         x13_X327
                                                                         x13_X327 =
                                                                           (a222_sXjI,
                                                                            a220_sXjS) } in
                                                                       (\ @ m1_X32j $dQuasi1_X32l ->
                                                                          return
                                                                            ($p1Quasi $dQuasi1_X32l)
                                                                            x13_X327)
                                                                       `cast` ...;
                                                                     : ds9_aXiU ds10_aXiV ->
                                                                       a93_rZKf `cast` ...
                                                                   }
                                                               };
                                                             ConT n1_aUaE ->
                                                               case scc_aU9i of _ {
                                                                 Left ds8_dVcT ->
                                                                   $wfail_sYzy `cast` ...;
                                                                 Right bg_aUaF ->
                                                                   case n1_aUaE
                                                                   of _ { Name ww_aY5X ww1_aY5Y ->
                                                                   case $wpoly_go10
                                                                          ww_aY5X ww1_aY5Y bg_aUaF
                                                                   of _ {
                                                                     Nothing ->
                                                                       $wfail_sYzy `cast` ...;
                                                                     Just lbl_aUaG ->
                                                                       case lbl_aUaG of _ {
                                                                         Nothing ->
                                                                           (\ @ m1_X2KI
                                                                              $dQuasi1_X3ag ->
                                                                              >>=
                                                                                ($p1Quasi
                                                                                   $dQuasi1_X3ag)
                                                                                (case $dQuasi1_X3ag
                                                                                 of _
                                                                                 { D:Quasi ww2_s2rd
                                                                                           ww3_s2re
                                                                                           ww4_s2rf
                                                                                           ww5_s2rg
                                                                                           ww6_s2rh
                                                                                           ww7_s2ri
                                                                                           ww8_s2rj
                                                                                           ww9_s2rk
                                                                                           ww10_s2rl
                                                                                           ww11_s2rm
                                                                                           ww12_s2rn ->
                                                                                 $wa1
                                                                                   wild5_XbX
                                                                                   tys_aUax
                                                                                   ww2_s2rd
                                                                                   ww3_s2re
                                                                                   ww8_s2rj
                                                                                 })
                                                                                (\ x13_X2M7 ->
                                                                                   case x13_X2M7
                                                                                   of _ {
                                                                                     Nothing ->
                                                                                       case $dQuasi1_X3ag
                                                                                       of _
                                                                                       { D:Quasi ww2_a2pI
                                                                                                 ww3_a2pJ
                                                                                                 ww4_a2pK
                                                                                                 ww5_a2pL
                                                                                                 ww6_a2pM
                                                                                                 ww7_a2pN
                                                                                                 ww8_a2pO
                                                                                                 ww9_a2pP
                                                                                                 ww10_a2pQ
                                                                                                 ww11_a2pR
                                                                                                 ww12_a2pS ->
                                                                                       $wa1
                                                                                         w4_rZKA
                                                                                         ww2_a2pI
                                                                                         ww5_a2pL
                                                                                       };
                                                                                     Just ds8_dVcD ->
                                                                                       case ds8_dVcD
                                                                                       of _
                                                                                       { (ty1_aUaH, tys1_aUaI) ->
                                                                                       ((w18_sZbB
                                                                                           ty1_aUaH
                                                                                           tys1_aUaI)
                                                                                        `cast` ...)
                                                                                         $dQuasi1_X3ag
                                                                                       }
                                                                                   }))
                                                                           `cast` ...;
                                                                         Just lbl1_aUaJ ->
                                                                           case $wlen tys_aUax 0
                                                                           of ww2_a2qe
                                                                           { __DEFAULT ->
                                                                           case lvl190_sZbw
                                                                           of _ { I# y1_aVyt ->
                                                                           let {
                                                                             n#_aVxY
                                                                             n#_aVxY =
                                                                               -#
                                                                                 ww2_a2qe
                                                                                 y1_aVyt } in
                                                                           let {
                                                                             $j_sXDA
                                                                             $j_sXDA =
                                                                               \ container_aUku
                                                                                 tys'_XUy6 ->
                                                                                 case tys'_XUy6
                                                                                 of wild10_aVxQ {
                                                                                   [] ->
                                                                                     let {
                                                                                       a215_sXkq
                                                                                       a215_sXkq =
                                                                                         case lbl1_aUaJ
                                                                                         of _
                                                                                         { I# ww3_sYyt ->
                                                                                         $wtoNat_rZNR
                                                                                           ww3_sYyt
                                                                                         } } in
                                                                                     let {
                                                                                       a216_sXkr
                                                                                       a216_sXkr =
                                                                                         AppT
                                                                                           lvl90_rZKD
                                                                                           a215_sXkq } in
                                                                                     let {
                                                                                       a217_sXku
                                                                                       a217_sXku =
                                                                                         AppT
                                                                                           a216_sXkr
                                                                                           container_aUku } in
                                                                                     let {
                                                                                       x13_X32g
                                                                                       x13_X32g =
                                                                                         (a217_sXku,
                                                                                          lvl95_rZKL) } in
                                                                                     (\ @ m1_X32n
                                                                                        $dQuasi1_X32p ->
                                                                                        return
                                                                                          ($p1Quasi
                                                                                             $dQuasi1_X32p)
                                                                                          x13_X32g)
                                                                                     `cast` ...;
                                                                                   : ds8_aXiU
                                                                                     ds9_aXiV ->
                                                                                     case lookup
                                                                                            $fEqInt
                                                                                            (case $wlen
                                                                                                    wild10_aVxQ
                                                                                                    0
                                                                                             of ww3_X2Rf
                                                                                             { __DEFAULT ->
                                                                                             I#
                                                                                               ww3_X2Rf
                                                                                             })
                                                                                            (a202_sXrM
                                                                                             `cast` ...)
                                                                                     of _ {
                                                                                       Nothing ->
                                                                                         (thFail1
                                                                                            (unpackAppendCString#
                                                                                               "no case in the given YokoOptions for type constructors with "
                                                                                               (case $wlen
                                                                                                       wild10_aVxQ
                                                                                                       0
                                                                                                of ww3_X2Ri
                                                                                                { __DEFAULT ->
                                                                                                ++
                                                                                                  ($wshowSignedInt
                                                                                                     0
                                                                                                     ww3_X2Ri
                                                                                                     ([]))
                                                                                                  lvl173_rZNQ
                                                                                                })))
                                                                                         `cast` ...;
                                                                                       Just ds10_dVdy ->
                                                                                         case ds10_dVdy
                                                                                         of _
                                                                                         { Mapping ds11_dVdz
                                                                                                   ds12_dVdA
                                                                                                   ds13_dVdB ->
                                                                                         ($wappliedType_sZbA
                                                                                            (AppT
                                                                                               lvl189_sZby
                                                                                               (case lbl1_aUaJ
                                                                                                of _
                                                                                                { I# ww3_sYyz ->
                                                                                                $wtoNat1_rZNS
                                                                                                  ww3_sYyz
                                                                                                }))
                                                                                            nRecCtor_sZbi
                                                                                            ds13_dVdB
                                                                                            container_aUku
                                                                                            wild10_aVxQ)
                                                                                         `cast` ...
                                                                                         }
                                                                                     }
                                                                                 } } in
                                                                           case <# n#_aVxY 0 of _ {
                                                                             False ->
                                                                               case $wsplitAt#
                                                                                      n#_aVxY
                                                                                      tys_aUax
                                                                               of _
                                                                               { (# ww4_aXW0, ww5_aXW1 #) ->
                                                                               $j_sXDA
                                                                                 (lgo4_rZNT
                                                                                    wild5_XbX
                                                                                    ww4_aXW0)
                                                                                 ww5_aXW1
                                                                               };
                                                                             True ->
                                                                               $j_sXDA
                                                                                 (lgo5_rZNU
                                                                                    wild5_XbX ([]))
                                                                                 tys_aUax
                                                                           }
                                                                           }
                                                                           }
                                                                       }
                                                                   }
                                                                   }
                                                               };
                                                             PromotedT ds8_dVd1 ->
                                                               a108_rZKO `cast` ...;
                                                             UnboxedTupleT ds8_dVcY ->
                                                               a109_rZKR `cast` ...;
                                                             PromotedTupleT ds8_dVd0 ->
                                                               a110_rZKT `cast` ...;
                                                             PromotedNilT -> a111_rZKV `cast` ...;
                                                             PromotedConsT -> a112_rZKX `cast` ...;
                                                             StarT -> a113_rZL0 `cast` ...;
                                                             ConstraintT -> a114_rZL3 `cast` ...;
                                                             LitT ds8_dVd2 -> a115_rZL6 `cast` ...
                                                           }; } in
                                                     let {
                                                       lvl193_sZf7
                                                       lvl193_sZf7 =
                                                         \ ds8_dVgZ ->
                                                           case ds8_dVgZ
                                                           of _ { (ds9_dVh0, ty_aUcg) ->
                                                           let {
                                                             ds10_X32y
                                                             ds10_X32y =
                                                               case $wpeelAppAcc ([]) ty_aUcg
                                                               of _ { (# ww1_s2rt, ww2_s2ru #) ->
                                                               w18_sZbB ww1_s2rt ww2_s2ru
                                                               } } in
                                                           (\ @ m1_X2M6 $dQuasi1_X2M8 ->
                                                              fmap
                                                                ($p1Applicative
                                                                   ($p2Quasi $dQuasi1_X2M8))
                                                                lvl55_rZJw
                                                                ((ds10_X32y `cast` ...)
                                                                   $dQuasi1_X2M8))
                                                           `cast` ...
                                                           } } in
                                                     let {
                                                       ds8_sZb2
                                                       ds8_sZb2 =
                                                         case $wlen pars_aUbx 0 of _ {
                                                           __DEFAULT -> lvl26_rZIt;
                                                           0 -> lvl30_rZIE;
                                                           1 -> lvl34_rZIO;
                                                           2 -> lvl38_rZIY
                                                         } } in
                                                     let {
                                                       nObj_sZba
                                                       nObj_sZba =
                                                         case ds8_sZb2
                                                         of _
                                                         { (nGeneric_aUom, nRep_aUon, nObj1_XUAW) ->
                                                         nObj1_XUAW
                                                         } } in
                                                     let {
                                                       nRep_sZb8
                                                       nRep_sZb8 =
                                                         case ds8_sZb2
                                                         of _
                                                         { (nGeneric_aUom, nRep1_XUAW, nObj1_XUsG) ->
                                                         nRep1_XUAW
                                                         } } in
                                                     let {
                                                       nGeneric_sZb4
                                                       nGeneric_sZb4 =
                                                         case ds8_sZb2
                                                         of _
                                                         { (nGeneric1_XUAW, nRep1_XUsF, nObj1_XUsH) ->
                                                         nGeneric1_XUAW
                                                         } } in
                                                     let {
                                                       a215_sZb6
                                                       a215_sZb6 = ConT nGeneric_sZb4 } in
                                                     let {
                                                       ds9_sZaV
                                                       ds9_sZaV =
                                                         let {
                                                           nNCtor_sW5S
                                                           nNCtor_sW5S =
                                                             case ds5_sZ9X
                                                             of _
                                                             { (nDT1_aUBh, nDisband_aUBi, nN_aUBj, nNCtor1_XUNp) ->
                                                             nNCtor1_XUNp
                                                             } } in
                                                         let {
                                                           lvl194_sWH4
                                                           lvl194_sWH4 = ConE nNCtor_sW5S } in
                                                         let {
                                                           nN_sW5R
                                                           nN_sW5R =
                                                             case ds5_sZ9X
                                                             of _
                                                             { (nDT1_aUBh, nDisband_aUBi, nN1_XUNp, nNCtor1_XUFs) ->
                                                             nN1_XUNp
                                                             } } in
                                                         let {
                                                           lvl195_sWH5
                                                           lvl195_sWH5 = ConT nN_sW5R } in
                                                         let {
                                                           a216_sYFR
                                                           a216_sYFR =
                                                             \ con_aUcI ->
                                                               let {
                                                                 ds10_a2nc
                                                                 ds10_a2nc =
                                                                   conFields_rU30 con_aUcI } in
                                                               let {
                                                                 n1_sWse
                                                                 n1_sWse =
                                                                   conName_rU2T con_aUcI } in
                                                               let {
                                                                 a217_sXgM
                                                                 a217_sXgM =
                                                                   lgo1_rZHG
                                                                     (ConT
                                                                        (case $wa_sYzk n1_sWse
                                                                         of _
                                                                         { (# ww1_sYzn, ww2_sYzo #) ->
                                                                         Name ww1_sYzn ww2_sYzo
                                                                         }))
                                                                     tvbs1_aUbw } in
                                                               let {
                                                                 lvl196_sWH9
                                                                 lvl196_sWH9 =
                                                                   AppT lvl195_sWH5 a217_sXgM } in
                                                               (\ @ m1_X2Kf $dQuasi1_X2Kh ->
                                                                  let {
                                                                    a218_sZnk
                                                                    a218_sZnk =
                                                                      $p1Quasi $dQuasi1_X2Kh } in
                                                                  let {
                                                                    lvl197_sZfZ
                                                                    lvl197_sZfZ =
                                                                      return a218_sZnk } in
                                                                  >>=
                                                                    ($p1Quasi $dQuasi1_X2Kh)
                                                                    (fmap
                                                                       ($p1Applicative
                                                                          ($p2Quasi $dQuasi1_X2Kh))
                                                                       (length)
                                                                       ((ds10_a2nc `cast` ...)
                                                                          $dQuasi1_X2Kh))
                                                                    (\ x13_X2KX ->
                                                                       lvl197_sZfZ
                                                                         (lvl196_sWH9,
                                                                          : (lvl194_sWH4,
                                                                             (n1_sWse, x13_X2KX))
                                                                            ([]))))
                                                               `cast` ... } in
                                                         case cons_aUbk of _ {
                                                           Left x13_aVGj ->
                                                             halves_rU33
                                                               (: x13_aVGj ([]))
                                                               (lvl175_sZeg `cast` ...)
                                                               (a169_rZMB `cast` ...)
                                                               a216_sYFR;
                                                           Right y1_aVGm ->
                                                             halves_rU33
                                                               y1_aVGm
                                                               (lvl175_sZeg `cast` ...)
                                                               (a169_rZMB `cast` ...)
                                                               a216_sYFR
                                                         } } in
                                                     let {
                                                       nDisband_sZaH
                                                       nDisband_sZaH =
                                                         case ds5_sZ9X
                                                         of _
                                                         { (nDT1_aUBh, nDisband1_XUNp, nN_XUFr, nNCtor_XUFt) ->
                                                         nDisband1_XUNp
                                                         } } in
                                                     let {
                                                       ds10_sZaw
                                                       ds10_sZaw =
                                                         case scc_aU9i of _ {
                                                           Left x13_aVUD -> a177_rZMM `cast` ...;
                                                           Right y1_aVUG ->
                                                             let {
                                                               m_XWjO
                                                               m_XWjO =
                                                                 go5_rZNH
                                                                   (lvl171_rZNI `cast` ...)
                                                                   (keysSet y1_aVUG) } in
                                                             let {
                                                               lvl194_sWH1
                                                               lvl194_sWH1 =
                                                                 map lvl141_rZMP tvbs1_aUbw } in
                                                             letrec {
                                                               go3_sZar
                                                               go3_sZar =
                                                                 \ ds11_X1p0 ->
                                                                   case ds11_X1p0 of _ {
                                                                     [] -> PromotedNilT;
                                                                     : y2_X1p7 ys1_X1p9 ->
                                                                       AppT
                                                                         (AppT
                                                                            PromotedConsT
                                                                            (lgo2_rZNF
                                                                               (ConT y2_X1p7)
                                                                               lvl194_sWH1))
                                                                         (go3_sZar ys1_X1p9)
                                                                   }; } in
                                                             letrec {
                                                               go4_sZap
                                                               go4_sZap =
                                                                 \ ds11_X1oW ->
                                                                   case ds11_X1oW of _ {
                                                                     [] -> PromotedNilT;
                                                                     : y2_X1p3 ys1_X1p5 ->
                                                                       AppT
                                                                         (AppT
                                                                            PromotedConsT
                                                                            (lgo2_rZNF
                                                                               (ConT y2_X1p3)
                                                                               lvl194_sWH1))
                                                                         (go4_sZap ys1_X1p5)
                                                                   }; } in
                                                             (\ @ m1_X2L3 $dQuasi1_X2L5 ->
                                                                let {
                                                                  a216_sZnr
                                                                  a216_sZnr =
                                                                    $p1Quasi $dQuasi1_X2L5 } in
                                                                let {
                                                                  lvl195_sZg1
                                                                  lvl195_sZg1 =
                                                                    return a216_sZnr } in
                                                                let {
                                                                  a217_sZnt
                                                                  a217_sZnt =
                                                                    $p1Quasi $dQuasi1_X2L5 } in
                                                                let {
                                                                  lvl196_sZg0
                                                                  lvl196_sZg0 = >>= a217_sZnt } in
                                                                >>=
                                                                  ($p1Quasi $dQuasi1_X2L5)
                                                                  (fmap
                                                                     ($p1Applicative
                                                                        ($p2Quasi $dQuasi1_X2L5))
                                                                     a178_rZMN
                                                                     ((m_XWjO `cast` ...)
                                                                        $dQuasi1_X2L5))
                                                                  (\ x13_X2KC ->
                                                                     let {
                                                                       w19_XYnJ
                                                                       w19_XYnJ =
                                                                         case x13_X2KC
                                                                         of _
                                                                         { (a218_aY06, w20_aY07) ->
                                                                         w20_aY07
                                                                         } } in
                                                                     lvl196_sZg0
                                                                       (lvl195_sZg1
                                                                          (let {
                                                                             ds11_sW5X
                                                                             ds11_sW5X =
                                                                               case x13_X2KC
                                                                               of _
                                                                               { (a218_XYnW, w20_XYnY) ->
                                                                               case $wbreak
                                                                                      lvl176_sZa1
                                                                                      a218_XYnW
                                                                               of _
                                                                               { (# ww1_aY2k, ww2_aY2l #) ->
                                                                               case ww2_aY2l of _ {
                                                                                 [] -> lvl142_rZMQ;
                                                                                 : ds12_dVkG
                                                                                   r_aUEu ->
                                                                                   (ww1_aY2k,
                                                                                    r_aUEu)
                                                                               }
                                                                               }
                                                                               } } in
                                                                           AppT
                                                                             (AppT
                                                                                lvl144_rZMU
                                                                                (case ds11_sW5X
                                                                                 of _
                                                                                 { (l_XUR5, r_XUIP) ->
                                                                                 go4_sZap l_XUR5
                                                                                 }))
                                                                             (case ds11_sW5X
                                                                              of _
                                                                              { (l_aUEt, r_XUR5) ->
                                                                              go3_sZar r_XUR5
                                                                              }),
                                                                           []))
                                                                       (\ x14_X2KV ->
                                                                          lvl195_sZg1
                                                                            (case x14_X2KV
                                                                             of _
                                                                             { (b_aY0h, w'_aY0i) ->
                                                                             b_aY0h
                                                                             },
                                                                             ++
                                                                               w19_XYnJ
                                                                               (case x14_X2KV
                                                                                of _
                                                                                { (b_aY0m, w'_aY0n) ->
                                                                                w'_aY0n
                                                                                })))))
                                                             `cast` ...
                                                         } } in
                                                     (\ @ m1_X2KN $dQuasi1_X2KP ->
                                                        let {
                                                          a216_sZnD
                                                          a216_sZnD = $p1Quasi $dQuasi1_X2KP } in
                                                        let {
                                                          lvl194_sZfl
                                                          lvl194_sZfl = return a216_sZnD } in
                                                        let {
                                                          a217_sZnF
                                                          a217_sZnF = $p1Quasi $dQuasi1_X2KP } in
                                                        let {
                                                          lvl195_sZfa
                                                          lvl195_sZfa = >>= a217_sZnF } in
                                                        let {
                                                          lvl196_sZfv
                                                          lvl196_sZfv =
                                                            >>=
                                                              ($p1Quasi $dQuasi1_X2KP)
                                                              (let {
                                                                 a218_sZnH
                                                                 a218_sZnH =
                                                                   $p1Quasi $dQuasi1_X2KP } in
                                                               let {
                                                                 lvl197_sZfq
                                                                 lvl197_sZfq = return a218_sZnH } in
                                                               let {
                                                                 a219_sZnJ
                                                                 a219_sZnJ =
                                                                   $p1Quasi $dQuasi1_X2KP } in
                                                               let {
                                                                 lvl198_sZfp
                                                                 lvl198_sZfp = >>= a219_sZnJ } in
                                                               >>=
                                                                 ($p1Quasi $dQuasi1_X2KP)
                                                                 ((ds10_sZaw `cast` ...)
                                                                    $dQuasi1_X2KP)
                                                                 (\ x13_X2LB ->
                                                                    let {
                                                                      w19_XYoI
                                                                      w19_XYoI =
                                                                        case x13_X2LB
                                                                        of _
                                                                        { (a220_aY06, w20_aY07) ->
                                                                        w20_aY07
                                                                        } } in
                                                                    lvl198_sZfp
                                                                      (lvl197_sZfq
                                                                         (: (TySynInstD
                                                                               lvl145_rZMX
                                                                               lvl187_sZ9Z
                                                                               (case x13_X2LB
                                                                                of _
                                                                                { (a220_XYoU, w20_XYoW) ->
                                                                                a220_XYoU
                                                                                }))
                                                                            ([]),
                                                                          []))
                                                                      (\ x14_X3ao ->
                                                                         lvl197_sZfq
                                                                           (case x14_X3ao
                                                                            of _
                                                                            { (b_aY0h, w'_aY0i) ->
                                                                            b_aY0h
                                                                            },
                                                                            ++
                                                                              w19_XYoI
                                                                              (case x14_X3ao
                                                                               of _
                                                                               { (b_aY0m, w'_aY0n) ->
                                                                               w'_aY0n
                                                                               })))))
                                                              (\ x13_X2LA ->
                                                                 let {
                                                                   w19_XYoH
                                                                   w19_XYoH =
                                                                     case x13_X2LA
                                                                     of _ { (a218_aY06, w20_aY07) ->
                                                                     w20_aY07
                                                                     } } in
                                                                 lvl195_sZfa
                                                                   (lvl194_sZfl
                                                                      ((),
                                                                       case x13_X2LA
                                                                       of _
                                                                       { (a218_XYoT, w20_XYoV) ->
                                                                       a218_XYoT
                                                                       }))
                                                                   (\ x14_X2LF ->
                                                                      lvl194_sZfl
                                                                        (case x14_X2LF
                                                                         of _ { (b_aY0h, w'_aY0i) ->
                                                                         b_aY0h
                                                                         },
                                                                         ++
                                                                           w19_XYoH
                                                                           (case x14_X2LF
                                                                            of _
                                                                            { (b_aY0m, w'_aY0n) ->
                                                                            w'_aY0n
                                                                            })))) } in
                                                        let {
                                                          lvl197_sZfx
                                                          lvl197_sZfx =
                                                            \ x13_X2Lu ->
                                                              let {
                                                                w19_XYoB
                                                                w19_XYoB =
                                                                  case x13_X2Lu
                                                                  of _ { (a218_aY06, w20_aY07) ->
                                                                  w20_aY07
                                                                  } } in
                                                              lvl195_sZfa
                                                                lvl196_sZfv
                                                                (\ x14_X2Lz ->
                                                                   lvl194_sZfl
                                                                     (case x14_X2Lz
                                                                      of _ { (b_aY0h, w'_aY0i) ->
                                                                      b_aY0h
                                                                      },
                                                                      ++
                                                                        w19_XYoB
                                                                        (case x14_X2Lz
                                                                         of _ { (b_aY0m, w'_aY0n) ->
                                                                         w'_aY0n
                                                                         }))) } in
                                                        let {
                                                          a218_sZnW
                                                          a218_sZnW = $p1Quasi $dQuasi1_X2KP } in
                                                        let {
                                                          lvl198_sZfi
                                                          lvl198_sZfi = return a218_sZnW } in
                                                        let {
                                                          a219_sZnY
                                                          a219_sZnY = $p1Quasi $dQuasi1_X2KP } in
                                                        let {
                                                          lvl199_sZfh
                                                          lvl199_sZfh = >>= a219_sZnY } in
                                                        let {
                                                          lvl200_sZff
                                                          lvl200_sZff =
                                                            let {
                                                              a220_sZo0
                                                              a220_sZo0 =
                                                                $p1Quasi $dQuasi1_X2KP } in
                                                            let {
                                                              lvl201_sZfe
                                                              lvl201_sZfe = return a220_sZo0 } in
                                                            >>=
                                                              ($p1Quasi $dQuasi1_X2KP)
                                                              ((ds9_sZaV `cast` ...) $dQuasi1_X2KP)
                                                              (\ x13_X2KW ->
                                                                 lvl201_sZfe (x13_X2KW, [])) } in
                                                        let {
                                                          a220_sZo2
                                                          a220_sZo2 = $p1Quasi $dQuasi1_X2KP } in
                                                        let {
                                                          lvl201_sZfd
                                                          lvl201_sZfd = >>= a220_sZo2 } in
                                                        >>=
                                                          ($p1Quasi $dQuasi1_X2KP)
                                                          (let {
                                                             a221_sZo4
                                                             a221_sZo4 = $p1Quasi $dQuasi1_X2KP } in
                                                           let {
                                                             lvl202_sZf9
                                                             lvl202_sZf9 = return a221_sZo4 } in
                                                           >>=
                                                             ($p1Quasi $dQuasi1_X2KP)
                                                             (a196_rZNE tvbs1_aUbw $dQuasi1_X2KP)
                                                             (\ x13_X2Kd ->
                                                                lvl202_sZf9 (x13_X2Kd, [])))
                                                          (\ x13_X2Kc ->
                                                             let {
                                                               w19_XYnj
                                                               w19_XYnj =
                                                                 case x13_X2Kc
                                                                 of _ { (a221_aY06, w20_aY07) ->
                                                                 w20_aY07
                                                                 } } in
                                                             lvl195_sZfa
                                                               (let {
                                                                  cxt_aUbG
                                                                  cxt_aUbG =
                                                                    case x13_X2Kc
                                                                    of _ { (a221_XYnw, w20_XYny) ->
                                                                    a221_XYnw
                                                                    } } in
                                                                let {
                                                                  lvl202_sZfF
                                                                  lvl202_sZfF =
                                                                    let {
                                                                      lvl203_sZfD
                                                                      lvl203_sZfD =
                                                                        lvl195_sZfa
                                                                          (case a201_sXrR `cast` ...
                                                                           of _ {
                                                                             False ->
                                                                               return
                                                                                 ($p1Quasi
                                                                                    $dQuasi1_X2KP)
                                                                                 x1_rZMF;
                                                                             True ->
                                                                               case $wlen
                                                                                      pars_aUbx 0
                                                                               of ww_a2qe
                                                                               { __DEFAULT ->
                                                                               let {
                                                                                 $wa1_sYzq
                                                                                 $wa1_sYzq =
                                                                                   \ ww1_sYxO
                                                                                     ww2_sYxP
                                                                                     ww3_sYxQ
                                                                                     @ m2_a2cY
                                                                                     ww4_sYxU ->
                                                                                     return
                                                                                       ww4_sYxU
                                                                                       ((),
                                                                                        : (InstanceD
                                                                                             cxt_aUbG
                                                                                             (AppT
                                                                                                (ConT
                                                                                                   ww1_sYxO)
                                                                                                a210_sXsr)
                                                                                             (: (ValD
                                                                                                   (VarP
                                                                                                      ww2_sYxP)
                                                                                                   (NormalB
                                                                                                      (VarE
                                                                                                         ww3_sYxQ))
                                                                                                   ([]))
                                                                                                ([])))
                                                                                          ([])) } in
                                                                               case ww_a2qe of _ {
                                                                                 __DEFAULT ->
                                                                                   case lvl123_rZLX
                                                                                   of wild6_00 {
                                                                                   };
                                                                                 0 ->
                                                                                   a172_rZMG
                                                                                     $dQuasi1_X2KP;
                                                                                 1 ->
                                                                                   case $dQuasi1_X2KP
                                                                                   of _
                                                                                   { D:Quasi ww1_sYxU
                                                                                             ww2_sYxV
                                                                                             ww3_sYxW
                                                                                             ww4_sYxX
                                                                                             ww5_sYxY
                                                                                             ww6_sYxZ
                                                                                             ww7_sYy0
                                                                                             ww8_sYy1
                                                                                             ww9_sYy2
                                                                                             ww10_sYy3
                                                                                             ww11_sYy4 ->
                                                                                   $wa1_sYzq
                                                                                     lvl124_rZM2
                                                                                     lvl125_rZM5
                                                                                     lvl126_rZM9
                                                                                     ww1_sYxU
                                                                                   };
                                                                                 2 ->
                                                                                   case $dQuasi1_X2KP
                                                                                   of _
                                                                                   { D:Quasi ww1_sYxU
                                                                                             ww2_sYxV
                                                                                             ww3_sYxW
                                                                                             ww4_sYxX
                                                                                             ww5_sYxY
                                                                                             ww6_sYxZ
                                                                                             ww7_sYy0
                                                                                             ww8_sYy1
                                                                                             ww9_sYy2
                                                                                             ww10_sYy3
                                                                                             ww11_sYy4 ->
                                                                                   $wa1_sYzq
                                                                                     lvl127_rZMc
                                                                                     lvl128_rZMf
                                                                                     lvl129_rZMi
                                                                                     ww1_sYxU
                                                                                   }
                                                                               }
                                                                               }
                                                                           })
                                                                          lvl197_sZfx } in
                                                                    let {
                                                                      lvl204_sZfE
                                                                      lvl204_sZfE =
                                                                        \ x14_X2Lo ->
                                                                          let {
                                                                            w20_XYov
                                                                            w20_XYov =
                                                                              case x14_X2Lo
                                                                              of _
                                                                              { (a221_aY06, w21_aY07) ->
                                                                              w21_aY07
                                                                              } } in
                                                                          lvl195_sZfa
                                                                            lvl203_sZfD
                                                                            (\ x15_X39Y ->
                                                                               lvl194_sZfl
                                                                                 (case x15_X39Y
                                                                                  of _
                                                                                  { (b_aY0h, w'_aY0i) ->
                                                                                  b_aY0h
                                                                                  },
                                                                                  ++
                                                                                    w20_XYov
                                                                                    (case x15_X39Y
                                                                                     of _
                                                                                     { (b_aY0m, w'_aY0n) ->
                                                                                     w'_aY0n
                                                                                     }))) } in
                                                                    lvl201_sZfd
                                                                      lvl200_sZff
                                                                      (\ x14_X38S ->
                                                                         let {
                                                                           w20_XYo2
                                                                           w20_XYo2 =
                                                                             case x14_X38S
                                                                             of _
                                                                             { (a221_aY06, w21_aY07) ->
                                                                             w21_aY07
                                                                             } } in
                                                                         lvl195_sZfa
                                                                           (case x14_X38S
                                                                            of _
                                                                            { (a221_XYoe, w21_XYog) ->
                                                                            case a221_XYoe
                                                                            of _
                                                                            { (dcs_aUcL, cases_aUcM) ->
                                                                            let {
                                                                              lvl205_sWH8
                                                                              lvl205_sWH8 =
                                                                                TySynInstD
                                                                                  lvl140_rZME
                                                                                  lvl187_sZ9Z
                                                                                  dcs_aUcL } in
                                                                            lvl199_sZfh
                                                                              (lvl198_sZfi
                                                                                 (map
                                                                                    lvl174_sZaL
                                                                                    cases_aUcM,
                                                                                  []))
                                                                              (\ x15_X2Lg ->
                                                                                 let {
                                                                                   w22_XYon
                                                                                   w22_XYon =
                                                                                     case x15_X2Lg
                                                                                     of _
                                                                                     { (a222_aY06, w23_aY07) ->
                                                                                     w23_aY07
                                                                                     } } in
                                                                                 lvl195_sZfa
                                                                                   (lvl195_sZfa
                                                                                      (lvl194_sZfl
                                                                                         ((),
                                                                                          : lvl205_sWH8
                                                                                            (: (InstanceD
                                                                                                  cxt_aUbG
                                                                                                  lvl188_sZaF
                                                                                                  (: (FunD
                                                                                                        nDisband_sZaH
                                                                                                        (case x15_X2Lg
                                                                                                         of _
                                                                                                         { (a222_XYoA, w23_XYoC) ->
                                                                                                         a222_XYoA
                                                                                                         }))
                                                                                                     ([])))
                                                                                               ([]))))
                                                                                      lvl204_sZfE)
                                                                                   (\ x16_X2Ll ->
                                                                                      lvl194_sZfl
                                                                                        (case x16_X2Ll
                                                                                         of _
                                                                                         { (b_aY0h, w'_aY0i) ->
                                                                                         b_aY0h
                                                                                         },
                                                                                         ++
                                                                                           w22_XYon
                                                                                           (case x16_X2Ll
                                                                                            of _
                                                                                            { (b_aY0m, w'_aY0n) ->
                                                                                            w'_aY0n
                                                                                            }))))
                                                                            }
                                                                            })
                                                                           (\ x15_X2L2 ->
                                                                              lvl194_sZfl
                                                                                (case x15_X2L2
                                                                                 of _
                                                                                 { (b_aY0h, w'_aY0i) ->
                                                                                 b_aY0h
                                                                                 },
                                                                                 ++
                                                                                   w20_XYo2
                                                                                   (case x15_X2L2
                                                                                    of _
                                                                                    { (b_aY0m, w'_aY0n) ->
                                                                                    w'_aY0n
                                                                                    })))) } in
                                                                lvl195_sZfa
                                                                  (letrec {
                                                                     go3_X1oO
                                                                     go3_X1oO =
                                                                       \ ds11_X1oQ ->
                                                                         case ds11_X1oQ of _ {
                                                                           [] ->
                                                                             a197_rZNL `cast` ...;
                                                                           : y1_X1oX ys1_X1oZ ->
                                                                             let {
                                                                               ds12_X2M2
                                                                               ds12_X2M2 =
                                                                                 case y1_X1oX
                                                                                 of _
                                                                                 { (n1_aUbH, fields_aUbI) ->
                                                                                 let {
                                                                                   n'_sW6E
                                                                                   n'_sW6E =
                                                                                     case $wa_sYzk
                                                                                            n1_aUbH
                                                                                     of _
                                                                                     { (# ww1_sYzn, ww2_sYzo #) ->
                                                                                     Name
                                                                                       ww1_sYzn
                                                                                       ww2_sYzo
                                                                                     } } in
                                                                                 let {
                                                                                   ds13_sW7k
                                                                                   ds13_sW7k =
                                                                                     case $wpat_exp_rZHy
                                                                                            n'_sW6E
                                                                                            n1_aUbH
                                                                                            (case $wlen
                                                                                                    fields_aUbI
                                                                                                    0
                                                                                             of ww_a2qe
                                                                                             { __DEFAULT ->
                                                                                             I#
                                                                                               ww_a2qe
                                                                                             })
                                                                                     of _
                                                                                     { (# ww1_sYza, ww2_sYzb #) ->
                                                                                     (ww1_sYza,
                                                                                      ww2_sYzb)
                                                                                     } } in
                                                                                 let {
                                                                                   a221_sXOE
                                                                                   a221_sXOE =
                                                                                     case ds13_sW7k
                                                                                     of _
                                                                                     { (pat_aUwS, exp_XUJN) ->
                                                                                     exp_XUJN
                                                                                     } } in
                                                                                 let {
                                                                                   a222_sXOF
                                                                                   a222_sXOF =
                                                                                     NormalB
                                                                                       a221_sXOE } in
                                                                                 let {
                                                                                   a223_sXOA
                                                                                   a223_sXOA =
                                                                                     case ds13_sW7k
                                                                                     of _
                                                                                     { (pat_XUJN, exp_XUBm) ->
                                                                                     pat_XUJN
                                                                                     } } in
                                                                                 let {
                                                                                   a224_sXOB
                                                                                   a224_sXOB =
                                                                                     : a223_sXOA
                                                                                       ([]) } in
                                                                                 let {
                                                                                   a225_sXOG
                                                                                   a225_sXOG =
                                                                                     Clause
                                                                                       a224_sXOB
                                                                                       a222_sXOF
                                                                                       ([]) } in
                                                                                 let {
                                                                                   a226_sXJV
                                                                                   a226_sXJV =
                                                                                     : a225_sXOG
                                                                                       ([]) } in
                                                                                 let {
                                                                                   a227_sXJW
                                                                                   a227_sXJW =
                                                                                     FunD
                                                                                       a212_sZcg
                                                                                       a226_sXJV } in
                                                                                 let {
                                                                                   a228_sXJX
                                                                                   a228_sXJX =
                                                                                     : a227_sXJW
                                                                                       ([]) } in
                                                                                 let {
                                                                                   fd_sW6D
                                                                                   fd_sW6D =
                                                                                     lgo1_rZHG
                                                                                       (ConT
                                                                                          n'_sW6E)
                                                                                       tvbs1_aUbw } in
                                                                                 let {
                                                                                   a229_sXJP
                                                                                   a229_sXJP =
                                                                                     AppT
                                                                                       a214_sZce
                                                                                       fd_sW6D } in
                                                                                 let {
                                                                                   a230_sXJY
                                                                                   a230_sXJY =
                                                                                     InstanceD
                                                                                       cxt_aUbG
                                                                                       a229_sXJP
                                                                                       a228_sXJX } in
                                                                                 let {
                                                                                   a231_sXJZ
                                                                                   a231_sXJZ =
                                                                                     : a230_sXJY
                                                                                       ([]) } in
                                                                                 let {
                                                                                   a232_sXJG
                                                                                   a232_sXJG =
                                                                                     case toByteString
                                                                                            (case $w$cput30
                                                                                                    $fSerializeChar
                                                                                                    (case n1_aUbH
                                                                                                     of _
                                                                                                     { Name occ_aVGr
                                                                                                            ds14_aVGs ->
                                                                                                     occ_aVGr
                                                                                                     `cast` ...
                                                                                                     })
                                                                                             of _
                                                                                             { (# _, ww2_aY71 #) ->
                                                                                             ww2_aY71
                                                                                             })
                                                                                     of _
                                                                                     { PS ww_aVPX
                                                                                          ww1_aVQ2
                                                                                          ww2_aVQ3
                                                                                          ww3_aVQ4 ->
                                                                                     case $wa
                                                                                            ([])
                                                                                            (plusAddr#
                                                                                               ww_aVPX
                                                                                               ww2_aVQ3)
                                                                                            (plusAddr#
                                                                                               ww_aVPX
                                                                                               (+#
                                                                                                  ww2_aVQ3
                                                                                                  ww3_aVQ4))
                                                                                            realWorld#
                                                                                     of _
                                                                                     { (# ipv_aWXM, ipv1_aWXN #) ->
                                                                                     case touch#
                                                                                            ww1_aVQ2
                                                                                            ipv_aWXM
                                                                                     of _
                                                                                     { __DEFAULT ->
                                                                                     toDigits__go
                                                                                       ipv1_aWXN
                                                                                       toDigits_1
                                                                                     }
                                                                                     }
                                                                                     } } in
                                                                                 let {
                                                                                   a233_sXJz
                                                                                   a233_sXJz =
                                                                                     : fd_sW6D
                                                                                       ([]) } in
                                                                                 let {
                                                                                   a234_sXJH
                                                                                   a234_sXJH =
                                                                                     TySynInstD
                                                                                       lvl40_rZJ4
                                                                                       a233_sXJz
                                                                                       a232_sXJG } in
                                                                                 let {
                                                                                   a235_sXK0
                                                                                   a235_sXK0 =
                                                                                     : a234_sXJH
                                                                                       a231_sXJZ } in
                                                                                 let {
                                                                                   a236_sXJA
                                                                                   a236_sXJA =
                                                                                     TySynInstD
                                                                                       lvl39_rZJ1
                                                                                       a233_sXJz
                                                                                       a210_sXsr } in
                                                                                 let {
                                                                                   eta_XXCV
                                                                                   eta_XXCV =
                                                                                     : a236_sXJA
                                                                                       a235_sXK0 } in
                                                                                 let {
                                                                                   lvl203_sZfJ
                                                                                   lvl203_sZfJ =
                                                                                     ((),
                                                                                      eta_XXCV) } in
                                                                                 let {
                                                                                   k_XWlG
                                                                                   k_XWlG =
                                                                                     case elem
                                                                                            $fEqName
                                                                                            n1_aUbH
                                                                                            activated_sW5n
                                                                                     of _ {
                                                                                       False ->
                                                                                         a198_rZNM
                                                                                         `cast` ...;
                                                                                       True ->
                                                                                         let {
                                                                                           ds14_a2nc
                                                                                           ds14_a2nc =
                                                                                             halves_rU33
                                                                                               fields_aUbI
                                                                                               (a70_rZJj
                                                                                                `cast` ...)
                                                                                               (a75_rZJt
                                                                                                `cast` ...)
                                                                                               lvl193_sZf7 } in
                                                                                         let {
                                                                                           z0_aeRE
                                                                                           z0_aeRE =
                                                                                             ConE
                                                                                               n'_sW6E } in
                                                                                         let {
                                                                                           lvl204_sWHC
                                                                                           lvl204_sWHC =
                                                                                             : fd_sW6D
                                                                                               ([]) } in
                                                                                         let {
                                                                                           lvl205_sWHD
                                                                                           lvl205_sWHD =
                                                                                             AppT
                                                                                               lvl103_rZLe
                                                                                               fd_sW6D } in
                                                                                         let {
                                                                                           lvl206_sWHE
                                                                                           lvl206_sWHE =
                                                                                             AppT
                                                                                               a215_sZb6
                                                                                               fd_sW6D } in
                                                                                         (\ @ m2_X2Nd
                                                                                            $dQuasi2_X2Nf ->
                                                                                            let {
                                                                                              a237_sZoC
                                                                                              a237_sZoC =
                                                                                                $p1Quasi
                                                                                                  $dQuasi2_X2Nf } in
                                                                                            let {
                                                                                              lvl207_sZfS
                                                                                              lvl207_sZfS =
                                                                                                return
                                                                                                  a237_sZoC } in
                                                                                            let {
                                                                                              a238_sZoE
                                                                                              a238_sZoE =
                                                                                                $p1Quasi
                                                                                                  $dQuasi2_X2Nf } in
                                                                                            let {
                                                                                              lvl208_sZfR
                                                                                              lvl208_sZfR =
                                                                                                >>=
                                                                                                  a238_sZoE } in
                                                                                            >>=
                                                                                              ($p1Quasi
                                                                                                 $dQuasi2_X2Nf)
                                                                                              (let {
                                                                                                 a239_sZoG
                                                                                                 a239_sZoG =
                                                                                                   $p1Quasi
                                                                                                     $dQuasi2_X2Nf } in
                                                                                               let {
                                                                                                 lvl209_sZfP
                                                                                                 lvl209_sZfP =
                                                                                                   return
                                                                                                     a239_sZoG } in
                                                                                               let {
                                                                                                 a240_sZoI
                                                                                                 a240_sZoI =
                                                                                                   $p1Quasi
                                                                                                     $dQuasi2_X2Nf } in
                                                                                               let {
                                                                                                 lvl210_sZfO
                                                                                                 lvl210_sZfO =
                                                                                                   >>=
                                                                                                     a240_sZoI } in
                                                                                               >>=
                                                                                                 ($p1Quasi
                                                                                                    $dQuasi2_X2Nf)
                                                                                                 (let {
                                                                                                    a241_sZoK
                                                                                                    a241_sZoK =
                                                                                                      $p1Quasi
                                                                                                        $dQuasi2_X2Nf } in
                                                                                                  let {
                                                                                                    lvl211_sZfN
                                                                                                    lvl211_sZfN =
                                                                                                      return
                                                                                                        a241_sZoK } in
                                                                                                  >>=
                                                                                                    ($p1Quasi
                                                                                                       $dQuasi2_X2Nf)
                                                                                                    (fmap
                                                                                                       ($p1Applicative
                                                                                                          ($p2Quasi
                                                                                                             $dQuasi2_X2Nf))
                                                                                                       lvl41_rZJ6
                                                                                                       ((ds14_a2nc
                                                                                                         `cast` ...)
                                                                                                          $dQuasi2_X2Nf))
                                                                                                    (\ x14_X39Y ->
                                                                                                       lvl211_sZfN
                                                                                                         (x14_X39Y,
                                                                                                          [])))
                                                                                                 (\ x14_X2Ls ->
                                                                                                    let {
                                                                                                      w20_XYoz
                                                                                                      w20_XYoz =
                                                                                                        case x14_X2Ls
                                                                                                        of _
                                                                                                        { (a241_aY06, w21_aY07) ->
                                                                                                        w21_aY07
                                                                                                        } } in
                                                                                                    lvl210_sZfO
                                                                                                      (case x14_X2Ls
                                                                                                       of _
                                                                                                       { (a241_XYoL, w21_XYoN) ->
                                                                                                       case a241_XYoL
                                                                                                       of _
                                                                                                       { (repTy_aUcl, ds15_dVh3) ->
                                                                                                       case ds15_dVh3
                                                                                                       of _
                                                                                                       { (conRO_aUcm, ds16_dVh4) ->
                                                                                                       lvl209_sZfP
                                                                                                         (: (TySynInstD
                                                                                                               lvl101_rZL9
                                                                                                               lvl204_sWHC
                                                                                                               (AppT
                                                                                                                  lvl205_sWHD
                                                                                                                  repTy_aUcl))
                                                                                                            (: (InstanceD
                                                                                                                  cxt_aUbG
                                                                                                                  lvl206_sWHE
                                                                                                                  (: (FunD
                                                                                                                        nRep_sZb8
                                                                                                                        (: (Clause
                                                                                                                              (: (ConP
                                                                                                                                    n'_sW6E
                                                                                                                                    (case conRO_aUcm
                                                                                                                                     of _
                                                                                                                                     { ConRO ds17_dVrY
                                                                                                                                             ds18_dVrZ
                                                                                                                                             ds19_dVs0
                                                                                                                                             ds20_dVs1 ->
                                                                                                                                     ds17_dVrY
                                                                                                                                     }))
                                                                                                                                 ([]))
                                                                                                                              (NormalB
                                                                                                                                 (AppE
                                                                                                                                    lvl105_rZLi
                                                                                                                                    (case conRO_aUcm
                                                                                                                                     of _
                                                                                                                                     { ConRO ds17_dVs4
                                                                                                                                             ds18_dVs5
                                                                                                                                             ds19_dVs6
                                                                                                                                             ds20_dVs7 ->
                                                                                                                                     ds18_dVs5
                                                                                                                                     })))
                                                                                                                              ([]))
                                                                                                                           ([])))
                                                                                                                     (: (FunD
                                                                                                                           nObj_sZba
                                                                                                                           (: (Clause
                                                                                                                                 (: (ConP
                                                                                                                                       lvl106_rZLl
                                                                                                                                       (: (case conRO_aUcm
                                                                                                                                           of _
                                                                                                                                           { ConRO ds17_dVsa
                                                                                                                                                   ds18_dVsb
                                                                                                                                                   ds19_dVsc
                                                                                                                                                   ds20_dVsd ->
                                                                                                                                           ds19_dVsc
                                                                                                                                           })
                                                                                                                                          ([])))
                                                                                                                                    ([]))
                                                                                                                                 (NormalB
                                                                                                                                    (case conRO_aUcm
                                                                                                                                     of _
                                                                                                                                     { ConRO ds17_dVsg
                                                                                                                                             ds18_dVsh
                                                                                                                                             ds19_dVsi
                                                                                                                                             ds20_dVsj ->
                                                                                                                                     lgo6_rZNV
                                                                                                                                       z0_aeRE
                                                                                                                                       ds20_dVsj
                                                                                                                                     }))
                                                                                                                                 ([]))
                                                                                                                              ([])))
                                                                                                                        ([]))))
                                                                                                               ([])),
                                                                                                          [])
                                                                                                       }
                                                                                                       }
                                                                                                       })
                                                                                                      (\ x15_X2Lz ->
                                                                                                         lvl209_sZfP
                                                                                                           (case x15_X2Lz
                                                                                                            of _
                                                                                                            { (b_aY0h, w'_aY0i) ->
                                                                                                            b_aY0h
                                                                                                            },
                                                                                                            ++
                                                                                                              w20_XYoz
                                                                                                              (case x15_X2Lz
                                                                                                               of _
                                                                                                               { (b_aY0m, w'_aY0n) ->
                                                                                                               w'_aY0n
                                                                                                               })))))
                                                                                              (\ x14_X2Lr ->
                                                                                                 let {
                                                                                                   w20_XYoy
                                                                                                   w20_XYoy =
                                                                                                     case x14_X2Lr
                                                                                                     of _
                                                                                                     { (a239_aY06, w21_aY07) ->
                                                                                                     w21_aY07
                                                                                                     } } in
                                                                                                 lvl208_sZfR
                                                                                                   (lvl207_sZfS
                                                                                                      ((),
                                                                                                       case x14_X2Lr
                                                                                                       of _
                                                                                                       { (a239_XYoK, w21_XYoM) ->
                                                                                                       a239_XYoK
                                                                                                       }))
                                                                                                   (\ x15_X2Lw ->
                                                                                                      lvl207_sZfS
                                                                                                        (case x15_X2Lw
                                                                                                         of _
                                                                                                         { (b_aY0h, w'_aY0i) ->
                                                                                                         b_aY0h
                                                                                                         },
                                                                                                         ++
                                                                                                           w20_XYoy
                                                                                                           (case x15_X2Lw
                                                                                                            of _
                                                                                                            { (b_aY0m, w'_aY0n) ->
                                                                                                            w'_aY0n
                                                                                                            })))))
                                                                                         `cast` ...
                                                                                     } } in
                                                                                 (\ @ m2_X2Ne
                                                                                    $dQuasi2_X2Ng ->
                                                                                    let {
                                                                                      a237_sZp0
                                                                                      a237_sZp0 =
                                                                                        $p1Quasi
                                                                                          $dQuasi2_X2Ng } in
                                                                                    let {
                                                                                      lvl204_sZfM
                                                                                      lvl204_sZfM =
                                                                                        return
                                                                                          a237_sZp0 } in
                                                                                    let {
                                                                                      lvl205_sZfL
                                                                                      lvl205_sZfL =
                                                                                        (k_XWlG
                                                                                         `cast` ...)
                                                                                          $dQuasi2_X2Ng } in
                                                                                    let {
                                                                                      a238_sZp2
                                                                                      a238_sZp2 =
                                                                                        $p1Quasi
                                                                                          $dQuasi2_X2Ng } in
                                                                                    let {
                                                                                      lvl206_sZfK
                                                                                      lvl206_sZfK =
                                                                                        >>=
                                                                                          a238_sZp2 } in
                                                                                    >>=
                                                                                      ($p1Quasi
                                                                                         $dQuasi2_X2Ng)
                                                                                      (return
                                                                                         ($p1Quasi
                                                                                            $dQuasi2_X2Ng)
                                                                                         lvl203_sZfJ)
                                                                                      (\ x14_X2LQ ->
                                                                                         let {
                                                                                           w20_XYoX
                                                                                           w20_XYoX =
                                                                                             case x14_X2LQ
                                                                                             of _
                                                                                             { (a239_aY06, w21_aY07) ->
                                                                                             w21_aY07
                                                                                             } } in
                                                                                         lvl206_sZfK
                                                                                           lvl205_sZfL
                                                                                           (\ x15_X2LV ->
                                                                                              lvl204_sZfM
                                                                                                (case x15_X2LV
                                                                                                 of _
                                                                                                 { (b_aY0h, w'_aY0i) ->
                                                                                                 b_aY0h
                                                                                                 },
                                                                                                 ++
                                                                                                   w20_XYoX
                                                                                                   (case x15_X2LV
                                                                                                    of _
                                                                                                    { (b_aY0m, w'_aY0n) ->
                                                                                                    w'_aY0n
                                                                                                    })))))
                                                                                 `cast` ...
                                                                                 } } in
                                                                             let {
                                                                               ys2_X2AD
                                                                               ys2_X2AD =
                                                                                 go3_X1oO
                                                                                   ys1_X1oZ } in
                                                                             (\ @ m2_X2M8
                                                                                $dQuasi2_X2Ma ->
                                                                                let {
                                                                                  a221_sZp7
                                                                                  a221_sZp7 =
                                                                                    $p1Quasi
                                                                                      $dQuasi2_X2Ma } in
                                                                                let {
                                                                                  lvl203_sZfI
                                                                                  lvl203_sZfI =
                                                                                    return
                                                                                      a221_sZp7 } in
                                                                                let {
                                                                                  lvl204_sZfH
                                                                                  lvl204_sZfH =
                                                                                    (ys2_X2AD
                                                                                     `cast` ...)
                                                                                      $dQuasi2_X2Ma } in
                                                                                let {
                                                                                  a222_sZp9
                                                                                  a222_sZp9 =
                                                                                    $p1Quasi
                                                                                      $dQuasi2_X2Ma } in
                                                                                let {
                                                                                  lvl205_sZfG
                                                                                  lvl205_sZfG =
                                                                                    >>=
                                                                                      a222_sZp9 } in
                                                                                >>=
                                                                                  ($p1Quasi
                                                                                     $dQuasi2_X2Ma)
                                                                                  ((ds12_X2M2
                                                                                    `cast` ...)
                                                                                     $dQuasi2_X2Ma)
                                                                                  (\ x14_X2KW ->
                                                                                     let {
                                                                                       w20_XYo3
                                                                                       w20_XYo3 =
                                                                                         case x14_X2KW
                                                                                         of _
                                                                                         { (a223_aY06, w21_aY07) ->
                                                                                         w21_aY07
                                                                                         } } in
                                                                                     lvl205_sZfG
                                                                                       lvl204_sZfH
                                                                                       (\ x15_X2L1 ->
                                                                                          lvl203_sZfI
                                                                                            (case x15_X2L1
                                                                                             of _
                                                                                             { (b_aY0h, w'_aY0i) ->
                                                                                             b_aY0h
                                                                                             },
                                                                                             ++
                                                                                               w20_XYo3
                                                                                               (case x15_X2L1
                                                                                                of _
                                                                                                { (b_aY0m, w'_aY0n) ->
                                                                                                w'_aY0n
                                                                                                })))))
                                                                             `cast` ...
                                                                         }; } in
                                                                   ((go3_X1oO nAndFieldss_aUbt)
                                                                    `cast` ...)
                                                                     $dQuasi1_X2KP)
                                                                  (\ x14_X38G ->
                                                                     let {
                                                                       w20_XYnW
                                                                       w20_XYnW =
                                                                         case x14_X38G
                                                                         of _
                                                                         { (a221_aY06, w21_aY07) ->
                                                                         w21_aY07
                                                                         } } in
                                                                     lvl195_sZfa
                                                                       lvl202_sZfF
                                                                       (\ x15_X2KU ->
                                                                          lvl194_sZfl
                                                                            (case x15_X2KU
                                                                             of _
                                                                             { (b_aY0h, w'_aY0i) ->
                                                                             b_aY0h
                                                                             },
                                                                             ++
                                                                               w20_XYnW
                                                                               (case x15_X2KU
                                                                                of _
                                                                                { (b_aY0m, w'_aY0n) ->
                                                                                w'_aY0n
                                                                                })))))
                                                               (\ x14_X2KR ->
                                                                  lvl194_sZfl
                                                                    (case x14_X2KR
                                                                     of _ { (b_aY0h, w'_aY0i) ->
                                                                     b_aY0h
                                                                     },
                                                                     ++
                                                                       w19_XYnj
                                                                       (case x14_X2KR
                                                                        of _ { (b_aY0m, w'_aY0n) ->
                                                                        w'_aY0n
                                                                        })))))
                                                     `cast` ...;
                                                   : ds5_dVoa ds6_dVob ->
                                                     let {
                                                       s1_a2fu
                                                       s1_a2fu =
                                                         unpackAppendCString#
                                                           "yokoTH: "
                                                           (unpackAppendCString#
                                                              "not representing "
                                                              (++
                                                                 lvl177_sZ9f
                                                                 (unpackAppendCString#
                                                                    " with "
                                                                    (case $wlen pars_aUbx 0
                                                                     of ww_a2qe { __DEFAULT ->
                                                                     let {
                                                                       a210_sXla
                                                                       a210_sXla =
                                                                         unpackAppendCString#
                                                                           " because ["
                                                                           (case map
                                                                                   lvl148_rZN0
                                                                                   wild4_X4y
                                                                            of _ {
                                                                              [] -> a200_rZNW;
                                                                              : x13_aVV0 xs1_aVV1 ->
                                                                                ++
                                                                                  (intercalate1
                                                                                     (: x13_aVV0
                                                                                        (prependToAll
                                                                                           lvl147_rZMZ
                                                                                           xs1_aVV1)))
                                                                                  a200_rZNW
                                                                            }) } in
                                                                     case ww_a2qe of wild5_XC3 {
                                                                       __DEFAULT ->
                                                                         ++
                                                                           ($wshowSignedInt
                                                                              0 wild5_XC3 ([]))
                                                                           (unpackAppendCString#
                                                                              " parameters"
                                                                              a210_sXla);
                                                                       1 -> ++ lvl149_rZN1 a210_sXla
                                                                     }
                                                                     })))) } in
                                                     (\ @ m1_X2Kk $dQuasi1_X2Km ->
                                                        let {
                                                          a210_sZpm
                                                          a210_sZpm = $p1Quasi $dQuasi1_X2Km } in
                                                        let {
                                                          lvl187_sZf8
                                                          lvl187_sZf8 = return a210_sZpm } in
                                                        >>=
                                                          ($p1Quasi $dQuasi1_X2Km)
                                                          (qReport $dQuasi1_X2Km False s1_a2fu)
                                                          (\ x13_X2K6 ->
                                                             lvl187_sZf8 (x13_X2K6, [])))
                                                     `cast` ...
                                                 }
                                                 } } in
                                             let {
                                               ys1_a2bF
                                               ys1_a2bF = go_X1nO ys_a11a } in
                                             (\ @ m1_X2K1 $dQuasi1_X2K3 ->
                                                let {
                                                  a210_sZpo
                                                  a210_sZpo = $p1Quasi $dQuasi1_X2K3 } in
                                                let {
                                                  lvl187_sZf6
                                                  lvl187_sZf6 = return a210_sZpo } in
                                                let {
                                                  lvl188_sZf5
                                                  lvl188_sZf5 =
                                                    (ys1_a2bF `cast` ...) $dQuasi1_X2K3 } in
                                                let {
                                                  a211_sZpq
                                                  a211_sZpq = $p1Quasi $dQuasi1_X2K3 } in
                                                let {
                                                  lvl189_sZf4
                                                  lvl189_sZf4 = >>= a211_sZpq } in
                                                >>=
                                                  ($p1Quasi $dQuasi1_X2K3)
                                                  ((ds4_X2JV `cast` ...) $dQuasi1_X2K3)
                                                  (\ x13_X2JW ->
                                                     let {
                                                       w18_XYn3
                                                       w18_XYn3 =
                                                         case x13_X2JW
                                                         of _ { (a212_aY06, w19_aY07) ->
                                                         w19_aY07
                                                         } } in
                                                     lvl189_sZf4
                                                       lvl188_sZf5
                                                       (\ x14_X374 ->
                                                          lvl187_sZf6
                                                            (case x14_X374
                                                             of _ { (b_aY0h, w'_aY0i) ->
                                                             b_aY0h
                                                             },
                                                             ++
                                                               w18_XYn3
                                                               (case x14_X374
                                                                of _ { (b_aY0m, w'_aY0n) ->
                                                                w'_aY0n
                                                                })))))
                                             `cast` ...
                                         }; } in
                                   ((go_X1nO x11_a8qS) `cast` ...) $dQuasi_a2ne)
                                  (\ x13_X2JF ->
                                     lvl178_sZey
                                       (case x13_X2JF of _ { (b_aY0h, w'_aY0i) -> b_aY0h },
                                        ++
                                          w17_XYmF
                                          (case x13_X2JF of _ { (b_aY0m, w'_aY0n) ->
                                           w'_aY0n
                                           }))) } in
                          lvl182_sZes
                            lvl181_sZeu
                            (\ x12_X2Jb ->
                               let {
                                 w17_XYmi
                                 w17_XYmi =
                                   case x12_X2Jb of _ { (a210_aY06, w18_aY07) -> w18_aY07 } } in
                               lvl179_sZej
                                 (lvl180_sZew
                                    (let {
                                       loc_aUbn
                                       loc_aUbn =
                                         case x12_X2Jb of _ { (a210_XYmv, w18_XYmx) ->
                                         a210_XYmv
                                         } } in
                                     let {
                                       a210_sXlq
                                       a210_sXlq =
                                         case loc_aUbn
                                         of _ { Loc ds3_aVGG ds4_aVGH ds5_aVGI ds6_aVGJ ds7_aVGK ->
                                         ds5_aVGI
                                         } } in
                                     let {
                                       a211_sXlm
                                       a211_sXlm =
                                         case loc_aUbn
                                         of _ { Loc ds3_aVGx ds4_aVGy ds5_aVGz ds6_aVGA ds7_aVGB ->
                                         ds4_aVGy
                                         } } in
                                     let {
                                       lvl187_sWHp
                                       lvl187_sWHp =
                                         NameG
                                           TcClsName
                                           (a211_sXlm `cast` ...)
                                           (a210_sXlq `cast` ...) } in
                                     letrec {
                                       go_a113
                                       go_a113 =
                                         \ ds3_a114 ->
                                           case ds3_a114 of _ {
                                             [] -> a194_rZNB `cast` ...;
                                             : y_a119 ys_a11a ->
                                               let {
                                                 m'_acbL
                                                 m'_acbL = go_a113 ys_a11a } in
                                               let {
                                                 a212_sXKm
                                                 a212_sXKm = renameCon_rU2U a203_sXxO y_a119 } in
                                               let {
                                                 a213_sXKn
                                                 a213_sXKn = : a212_sXKm ([]) } in
                                               let {
                                                 n1_sW7y
                                                 n1_sW7y = conName_rU2T y_a119 } in
                                               let {
                                                 n'_sW7x
                                                 n'_sW7x =
                                                   case $wa_sYzk n1_sW7y
                                                   of _ { (# ww1_sYzn, ww2_sYzo #) ->
                                                   Name ww1_sYzn ww2_sYzo
                                                   } } in
                                               let {
                                                 a214_sXKo
                                                 a214_sXKo =
                                                   DataD ([]) n'_sW7x tvbs_aUbj a213_sXKn ([]) } in
                                               let {
                                                 eta_XXzq
                                                 eta_XXzq = : a214_sXKo ([]) } in
                                               let {
                                                 lvl188_sZeE
                                                 lvl188_sZeE = ((), eta_XXzq) } in
                                               let {
                                                 ww_a8BJ
                                                 ww_a8BJ =
                                                   case n'_sW7x of _ { Name occ_aVGr ds4_aVGs ->
                                                   occ_aVGr
                                                   } } in
                                               let {
                                                 a215_sYaK
                                                 a215_sYaK = Name ww_a8BJ lvl187_sWHp } in
                                               let {
                                                 a216_a8T3
                                                 a216_a8T3 = ConT a215_sYaK } in
                                               let {
                                                 a217_a8T4
                                                 a217_a8T4 = : a216_a8T3 ([]) } in
                                               let {
                                                 a218_a8Ci
                                                 a218_a8Ci =
                                                   toDigits__go
                                                     (serializeTypeAsHash_6
                                                        (case $w$chash4
                                                                ($fHashableChar_$chash `cast` ...)
                                                                (ww_a8BJ `cast` ...)
                                                         of ww2_a8SZ { __DEFAULT ->
                                                         case $w$chash4
                                                                ($fHashableChar_$chash `cast` ...)
                                                                a210_sXlq
                                                         of ww3_a8T0 { __DEFAULT ->
                                                         case $w$chash4
                                                                ($fHashableChar_$chash `cast` ...)
                                                                a211_sXlm
                                                         of ww4_a8T1 { __DEFAULT ->
                                                         let {
                                                           x#1_a8T2
                                                           x#1_a8T2 =
                                                             xor#
                                                               (or#
                                                                  (uncheckedShiftL# ww2_a8SZ 1)
                                                                  (uncheckedShiftRL# ww2_a8SZ 63))
                                                               ww3_a8T0 } in
                                                         W64#
                                                           (xor#
                                                              (or#
                                                                 (uncheckedShiftL# x#1_a8T2 1)
                                                                 (uncheckedShiftRL# x#1_a8T2 63))
                                                              ww4_a8T1)
                                                         }
                                                         }
                                                         }))
                                                     toDigits_1 } in
                                               let {
                                                 a219_a8T5
                                                 a219_a8T5 =
                                                   TySynInstD
                                                     serializeTypeAsHash_1 a217_a8T4 a218_a8Ci } in
                                               let {
                                                 x13_a8T6
                                                 x13_a8T6 = : a219_a8T5 ([]) } in
                                               let {
                                                 ds4_X2KY
                                                 ds4_X2KY =
                                                   spineType_gen_
                                                     (ConT
                                                        (Name
                                                           ((nameBase n'_sW7x) `cast` ...)
                                                           lvl187_sWHp))
                                                     lvl185_sWHm } in
                                               let {
                                                 ds5_X2Kr
                                                 ds5_X2Kr = conFields_rU30 y_a119 } in
                                               let {
                                                 a220_sXlx
                                                 a220_sXlx =
                                                   \ ds6_aVH4 ->
                                                     ((n1_sW7y,
                                                       case ds6_aVH4 of _ { (a221_aVH7, w18_aVH8) ->
                                                       a221_aVH7
                                                       }),
                                                      case ds6_aVH4 of _ { (a221_aVHc, w18_aVHd) ->
                                                      w18_aVHd
                                                      }) } in
                                               (\ @ m1_a2cY eta1_B1 ->
                                                  let {
                                                    a221_sZpL
                                                    a221_sZpL = $p1Quasi eta1_B1 } in
                                                  let {
                                                    lvl189_sZf1
                                                    lvl189_sZf1 = return a221_sZpL } in
                                                  let {
                                                    a222_sZpN
                                                    a222_sZpN = $p1Quasi eta1_B1 } in
                                                  let {
                                                    lvl190_sZeX
                                                    lvl190_sZeX = >>= a222_sZpN } in
                                                  let {
                                                    lvl191_sZeZ
                                                    lvl191_sZeZ = (m'_acbL `cast` ...) eta1_B1 } in
                                                  >>=
                                                    ($p1Quasi eta1_B1)
                                                    (let {
                                                       a223_sZpP
                                                       a223_sZpP = $p1Quasi eta1_B1 } in
                                                     let {
                                                       lvl192_sZeS
                                                       lvl192_sZeS = return a223_sZpP } in
                                                     let {
                                                       a224_sZpR
                                                       a224_sZpR = $p1Quasi eta1_B1 } in
                                                     let {
                                                       lvl193_sZeF
                                                       lvl193_sZeF = >>= a224_sZpR } in
                                                     let {
                                                       lvl194_sZeV
                                                       lvl194_sZeV =
                                                         let {
                                                           a225_sZpT
                                                           a225_sZpT = $p1Quasi eta1_B1 } in
                                                         let {
                                                           lvl195_sZeI
                                                           lvl195_sZeI = return a225_sZpT } in
                                                         let {
                                                           a226_sZpV
                                                           a226_sZpV = $p1Quasi eta1_B1 } in
                                                         let {
                                                           lvl196_sZeH
                                                           lvl196_sZeH = >>= a226_sZpV } in
                                                         let {
                                                           a227_sZpX
                                                           a227_sZpX = $p1Quasi eta1_B1 } in
                                                         let {
                                                           lvl197_sZeG
                                                           lvl197_sZeG = return a227_sZpX } in
                                                         let {
                                                           lvl198_sZeT
                                                           lvl198_sZeT =
                                                             let {
                                                               lvl199_sZeR
                                                               lvl199_sZeR =
                                                                 fmap
                                                                   ($p1Applicative
                                                                      ($p2Quasi eta1_B1))
                                                                   a220_sXlx
                                                                   (let {
                                                                      a228_sZpZ
                                                                      a228_sZpZ =
                                                                        $p1Quasi eta1_B1 } in
                                                                    let {
                                                                      lvl200_sZeQ
                                                                      lvl200_sZeQ =
                                                                        return a228_sZpZ } in
                                                                    >>=
                                                                      ($p1Quasi eta1_B1)
                                                                      ((ds5_X2Kr `cast` ...)
                                                                         eta1_B1)
                                                                      (\ x14_X2Ks ->
                                                                         lvl200_sZeQ
                                                                           (x14_X2Ks, []))) } in
                                                             >>=
                                                               ($p1Quasi eta1_B1)
                                                               (>>=
                                                                  ($p1Quasi eta1_B1)
                                                                  (>>=
                                                                     ($p1Quasi eta1_B1)
                                                                     ((ds4_X2KY `cast` ...) eta1_B1)
                                                                     (\ x14_X2Kn ->
                                                                        lvl197_sZeG (x14_X2Kn, [])))
                                                                  (\ x14_X2Km ->
                                                                     let {
                                                                       w18_XYnt
                                                                       w18_XYnt =
                                                                         case x14_X2Km
                                                                         of _
                                                                         { (a228_aY06, w19_aY07) ->
                                                                         w19_aY07
                                                                         } } in
                                                                     lvl196_sZeH
                                                                       (lvl195_sZeI
                                                                          ((),
                                                                           case x14_X2Km
                                                                           of _
                                                                           { (a228_XYnF, w19_XYnH) ->
                                                                           a228_XYnF
                                                                           }))
                                                                       (\ x15_X37U ->
                                                                          lvl195_sZeI
                                                                            (case x15_X37U
                                                                             of _
                                                                             { (b_aY0h, w'_aY0i) ->
                                                                             b_aY0h
                                                                             },
                                                                             ++
                                                                               w18_XYnt
                                                                               (case x15_X37U
                                                                                of _
                                                                                { (b_aY0m, w'_aY0n) ->
                                                                                w'_aY0n
                                                                                })))))
                                                               (\ x14_X2Kl ->
                                                                  let {
                                                                    w18_XYns
                                                                    w18_XYns =
                                                                      case x14_X2Kl
                                                                      of _
                                                                      { (a228_aY06, w19_aY07) ->
                                                                      w19_aY07
                                                                      } } in
                                                                  lvl193_sZeF
                                                                    lvl199_sZeR
                                                                    (\ x15_X2Kq ->
                                                                       lvl192_sZeS
                                                                         (case x15_X2Kq
                                                                          of _
                                                                          { (b_aY0h, w'_aY0i) ->
                                                                          b_aY0h
                                                                          },
                                                                          ++
                                                                            w18_XYns
                                                                            (case x15_X2Kq
                                                                             of _
                                                                             { (b_aY0m, w'_aY0n) ->
                                                                             w'_aY0n
                                                                             })))) } in
                                                         >>=
                                                           ($p1Quasi eta1_B1)
                                                           (>>=
                                                              ($p1Quasi eta1_B1)
                                                              (>>=
                                                                 ($p1Quasi eta1_B1)
                                                                 (return
                                                                    ($p1Quasi eta1_B1) x13_a8T6)
                                                                 (\ x14_X2Kh ->
                                                                    lvl197_sZeG (x14_X2Kh, [])))
                                                              (\ x14_X2Kg ->
                                                                 let {
                                                                   w18_XYnn
                                                                   w18_XYnn =
                                                                     case x14_X2Kg
                                                                     of _ { (a228_aY06, w19_aY07) ->
                                                                     w19_aY07
                                                                     } } in
                                                                 lvl196_sZeH
                                                                   (lvl195_sZeI
                                                                      ((),
                                                                       case x14_X2Kg
                                                                       of _
                                                                       { (a228_XYnz, w19_XYnB) ->
                                                                       a228_XYnz
                                                                       }))
                                                                   (\ x15_X2Kl ->
                                                                      lvl195_sZeI
                                                                        (case x15_X2Kl
                                                                         of _ { (b_aY0h, w'_aY0i) ->
                                                                         b_aY0h
                                                                         },
                                                                         ++
                                                                           w18_XYnn
                                                                           (case x15_X2Kl
                                                                            of _
                                                                            { (b_aY0m, w'_aY0n) ->
                                                                            w'_aY0n
                                                                            })))))
                                                           (\ x14_X2Kf ->
                                                              let {
                                                                w18_XYnm
                                                                w18_XYnm =
                                                                  case x14_X2Kf
                                                                  of _ { (a228_aY06, w19_aY07) ->
                                                                  w19_aY07
                                                                  } } in
                                                              lvl193_sZeF
                                                                lvl198_sZeT
                                                                (\ x15_X2Kk ->
                                                                   lvl192_sZeS
                                                                     (case x15_X2Kk
                                                                      of _ { (b_aY0h, w'_aY0i) ->
                                                                      b_aY0h
                                                                      },
                                                                      ++
                                                                        w18_XYnm
                                                                        (case x15_X2Kk
                                                                         of _ { (b_aY0m, w'_aY0n) ->
                                                                         w'_aY0n
                                                                         })))) } in
                                                     >>=
                                                       ($p1Quasi eta1_B1)
                                                       (return ($p1Quasi eta1_B1) lvl188_sZeE)
                                                       (\ x14_X2K9 ->
                                                          let {
                                                            w18_XYng
                                                            w18_XYng =
                                                              case x14_X2K9
                                                              of _ { (a225_aY06, w19_aY07) ->
                                                              w19_aY07
                                                              } } in
                                                          lvl193_sZeF
                                                            lvl194_sZeV
                                                            (\ x15_X2Ke ->
                                                               lvl192_sZeS
                                                                 (case x15_X2Ke
                                                                  of _ { (b_aY0h, w'_aY0i) ->
                                                                  b_aY0h
                                                                  },
                                                                  ++
                                                                    w18_XYng
                                                                    (case x15_X2Ke
                                                                     of _ { (b_aY0m, w'_aY0n) ->
                                                                     w'_aY0n
                                                                     })))))
                                                    (\ x14_X2Kf ->
                                                       let {
                                                         w18_XYnm
                                                         w18_XYnm =
                                                           case x14_X2Kf
                                                           of _ { (a223_aY06, w19_aY07) ->
                                                           w19_aY07
                                                           } } in
                                                       lvl190_sZeX
                                                         (let {
                                                            x15_acbM
                                                            x15_acbM =
                                                              case x14_X2Kf
                                                              of _ { (a223_XYnz, w19_XYnB) ->
                                                              a223_XYnz
                                                              } } in
                                                          lvl190_sZeX
                                                            lvl191_sZeZ
                                                            (\ x16_X2Kn ->
                                                               let {
                                                                 w19_XYnu
                                                                 w19_XYnu =
                                                                   case x16_X2Kn
                                                                   of _ { (a223_aY06, w20_aY07) ->
                                                                   w20_aY07
                                                                   } } in
                                                               lvl190_sZeX
                                                                 (lvl189_sZf1
                                                                    (: x15_acbM
                                                                       (case x16_X2Kn
                                                                        of _
                                                                        { (a223_XYnG, w20_XYnI) ->
                                                                        a223_XYnG
                                                                        }),
                                                                     []))
                                                                 (\ x17_X2Ks ->
                                                                    lvl189_sZf1
                                                                      (case x17_X2Ks
                                                                       of _ { (b_aY0h, w'_aY0i) ->
                                                                       b_aY0h
                                                                       },
                                                                       ++
                                                                         w19_XYnu
                                                                         (case x17_X2Ks
                                                                          of _
                                                                          { (b_aY0m, w'_aY0n) ->
                                                                          w'_aY0n
                                                                          })))))
                                                         (\ x15_X2Kk ->
                                                            lvl189_sZf1
                                                              (case x15_X2Kk
                                                               of _ { (b_aY0h, w'_aY0i) ->
                                                               b_aY0h
                                                               },
                                                               ++
                                                                 w18_XYnm
                                                                 (case x15_X2Kk
                                                                  of _ { (b_aY0m, w'_aY0n) ->
                                                                  w'_aY0n
                                                                  })))))
                                               `cast` ...
                                           }; } in
                                     ((go_a113 x10_X92A) `cast` ...) $dQuasi_a2ne)
                                    lvl186_sZeD)
                                 (\ x13_X2JA ->
                                    lvl178_sZey
                                      (case x13_X2JA of _ { (b_aY0h, w'_aY0i) -> b_aY0h },
                                       ++
                                         w17_XYmi
                                         (case x13_X2JA of _ { (b_aY0m, w'_aY0n) -> w'_aY0n }))))
                          }
                          })
                         (\ x10_X2IP ->
                            lvl178_sZey
                              (case x10_X2IP of _ { (b_aY0h, w'_aY0i) -> b_aY0h },
                               ++
                                 w15_XYlP (case x10_X2IP of _ { (b_aY0m, w'_aY0n) -> w'_aY0n })))))
                 (\ x9_X2IG ->
                    lvl178_sZey
                      (case x9_X2IG of _ { (b_aY0h, w'_aY0i) -> b_aY0h },
                       ++
                         w14_aY03 (case x9_X2IG of _ { (b_aY0m, w'_aY0n) -> w'_aY0n }))))))
    `cast` ...

yokoTH
yokoTH = \ n_aU95 -> yokoTH_with yokoDefaults n_aU95


------ Local rules for imported ids --------
"SPEC member [Name]" [ALWAYS]
    forall @ a_aVRl $dOrd_sWIR. member $dOrd_sWIR = $smember


[10 of 11] Compiling Data.Yoko.MinCtors ( Data/Yoko/MinCtors.hs, Data/Yoko/MinCtors.o )

==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "main")
     (unpackCString# "Data.Yoko.MinCtors")
     (: (C# 'T') ([])))


Loading package transformers-0.3.0.0 ... linking ... done.
Loading package mtl-2.1.2 ... linking ... done.
Loading package th-sccs-0.0.0.20110723 ... linking ... done.
Loading package contravariant-0.2.0.2 ... linking ... done.
Loading package invariant-0.1.0 ... linking ... done.
Loading package kinds-0.0.1.5 ... linking ... done.
Loading package type-functions-0.2.0.3 ... linking ... done.
Loading package records-0.1.1.6 ... linking ... done.

==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "main")
     (unpackCString# "Data.Yoko.MinCtors")
     (: (C# 'S') ([])))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "main")
     (unpackCString# "Data.Yoko.MinCtors")
     (unpackCString# "M1"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "main")
     (unpackCString# "Data.Yoko.MinCtors")
     (unpackCString# "M2"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "main")
     (unpackCString# "Data.Yoko.TypeBasics")
     (unpackCString# "Nat"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "main")
     (unpackCString# "Data.Yoko.MinCtors")
     (unpackCString# "Inf"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "main")
     (unpackCString# "Data.Yoko.MinCtors")
     (: (C# 'X') ([])))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "main")
     (unpackCString# "Data.Yoko.MinCtors")
     (: (C# 'Y') ([])))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "ghc-prim")
     (unpackCString# "GHC.Types")
     (unpackCString# "Bool"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "base")
     (unpackCString# "GHC.Real")
     (unpackCString# "Ratio"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "ghc-prim")
     (unpackCString# "GHC.Tuple")
     (unpackCString# "()"))



==================== Simplified expression ====================
yokoTH_with
  (YokoOptions (id) (id) (\ _ -> False) (id))
  (mkNameG_tc
     (unpackCString# "ghc-prim")
     (unpackCString# "GHC.Tuple")
     (unpackCString# "(,)"))



==================== Simplified expression ====================
yokoTH_with
  (YokoOptions (id) (id) (\ _ -> False) (id))
  (mkNameG_tc
     (unpackCString# "ghc-prim")
     (unpackCString# "GHC.Tuple")
     (unpackCString# "(,,)"))



==================== Simplified expression ====================
yokoTH_with
  (YokoOptions (id) (id) (\ _ -> False) (id))
  (mkNameG_tc
     (unpackCString# "base")
     (unpackCString# "Data.Maybe")
     (unpackCString# "Maybe"))



==================== Simplified expression ====================
yokoTH_with
  (YokoOptions (id) (id) (\ _ -> False) (id))
  (mkNameG_tc
     (unpackCString# "base")
     (unpackCString# "Data.Either")
     (unpackCString# "Either"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "main")
     (unpackCString# "Data.Yoko.MinCtors")
     (unpackCString# "Stream"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "main")
     (unpackCString# "Data.Yoko.MinCtors")
     (unpackCString# "Even"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "main")
     (unpackCString# "Data.Yoko.MinCtors")
     (unpackCString# "Odd"))



==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 8,346, types: 37,827, coercions: 19,469}

regularish
regularish = \ @ r_a17nP @ s_a17nQ tpl_B1 -> tpl_B1 `cast` ...

$p1MinInfo__
$p1MinInfo__ =
  \ @ k_a17qw @ ts_a17nK @ t_a17nL tpl_B1 ->
    case tpl_B1 of _ { D:MinInfo__ tpl_B2 _ -> tpl_B2 }

$p2MinInfo__
$p2MinInfo__ =
  \ @ k_a17qw @ ts_a17nK @ t_a17nL tpl_B1 ->
    case tpl_B1 of _ { D:MinInfo__ _ tpl_B3 -> tpl_B3 }

minInfoRec
minInfoRec =
  \ @ k_a17qr @ k_a17qs @ t_a17nW @ ts_a17nX tpl_B1 ->
    tpl_B1 `cast` ...

minInfoNonRec
minInfoNonRec = \ @ k_a17qn @ t_a17nT tpl_B1 -> tpl_B1 `cast` ...

method
method =
  \ @ k_a17qd @ k_a17qe @ t_a17nM @ dpos_a17nN tpl_B1 ->
    tpl_B1 `cast` ...

minCtors
minCtors = \ @ k_a17qi @ t_a17nO tpl_B1 -> tpl_B1 `cast` ...

$W:%_
$W:%_ =
  \ @ a_abDS tpl_B1 tpl_B2 ->
    case tpl_B1 of tpl_X5 { __DEFAULT ->
    case tpl_B2 of tpl_X7 { __DEFAULT -> :%_ tpl_X5 tpl_X7 }
    }

deApp1
deApp1 = \ @ f_tab @ r_tac -> (Proxy, Proxy)

deApp
deApp = \ @ f_tab @ r_tac _ -> deApp1

deApp3
deApp3 = \ @ ff_t9Y @ r1_t9Z @ r0_ta0 -> (Proxy, Proxy, Proxy)

deApp2
deApp2 = \ @ ff_t9Y @ r1_t9Z @ r0_ta0 _ -> deApp3

deC
deC = \ @ k_t9n @ t_t9o @ r_t9p _ -> Proxy

deDep0
deDep0 = \ @ t_t8l _ -> Proxy

deN0
deN0 = \ @ dc_t9K _ -> Proxy

deN1
deN1 = \ @ dc_t9D _ -> Proxy

deN2
deN2 = \ @ dc_t9w _ -> Proxy

dePlus1
dePlus1 = \ @ l_t9d @ r_t9e -> (Proxy, Proxy)

dePlus
dePlus = \ @ l_t9d @ r_t9e _ -> dePlus1

deRec0
deRec0 = \ @ lbl_t8R @ t_t8S _ -> Proxy

deRec1
deRec1 = \ @ lbl_t8H @ t_t8I @ r_t8J _ -> Proxy

deRec2
deRec2 = \ @ lbl_t8v @ t_t8w @ r_t8x @ s_t8y _ -> Proxy

deTimes1
deTimes1 = dePlus1

deTimes
deTimes = \ @ l_t92 @ r_t93 _ -> dePlus1

$fMinCtors(->)(,)3
$fMinCtors(->)(,)3 = I# 0

minima1ToSiblingInT
minima1ToSiblingInT =
  \ @ k_tai @ ts_taj $dVRepeat_a17t5 eta_B1 ->
    let {
      lvl115_s1c36
      lvl115_s1c36 = ($dVRepeat_a17t5 `cast` ...) $fMinCtors(->)(,)3 } in
    (mapKeysMonotonic
       (\ ds_d19UT ->
          case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
          (lvl115_s1c36, np1_a17ow, np0_a17ox)
          })
       (map (id) (eta_B1 `cast` ...)))
    `cast` ...

$fMinCtors(->)S_tpl
$fMinCtors(->)S_tpl = ($fMinCtors(->)(,)3, $fMinCtors(->)(,)3)

$fMinCtors(->)(,)5
$fMinCtors(->)(,)5 = I# 1

$fMinCtors(->)S3
$fMinCtors(->)S3 =
  Bin
    1 $fMinCtors(->)S_tpl ($fMinCtors(->)(,)5 `cast` ...) (Tip) (Tip)

oneCtor
oneCtor = $fMinCtors(->)S3 `cast` ...

pDTs
pDTs = \ @ k_t8d @ t_t8e _ -> Proxy

$fMinCtors(->)Even21
$fMinCtors(->)Even21 = ($fMinCtors(->)(,)3, $fMinCtors(->)(,)3)

$fMinCtors(->)(,)8
$fMinCtors(->)(,)8 = ($fMinCtors(->)(,)5, $fMinCtors(->)(,)3)

$fMinCtors(->)(,)7
$fMinCtors(->)(,)7 =
  Bin
    1 $fMinCtors(->)(,)8 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors(->)(,)4
$fMinCtors(->)(,)4 = ($fMinCtors(->)(,)3, $fMinCtors(->)(,)5)

$fMinCtors(->)(,)2
$fMinCtors(->)(,)2 =
  Bin
    1 $fMinCtors(->)(,)4 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors(->)T26
$fMinCtors(->)T26 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors(->)T25
$fMinCtors(->)T25 = $fMinCtors(->)T26 (($WVNil) `cast` ...)

$fMinCtors(->)T24
$fMinCtors(->)T24 =
  VCons
    @~ <(':) (* -> *) [] ('[] (* -> *))>
    (($WZIdx) `cast` ...)
    ($fMinCtors(->)T25 `cast` ...)

$fMinCtors(->)Stream16
$fMinCtors(->)Stream16 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors(->)Stream15
$fMinCtors(->)Stream15 =
  $fMinCtors(->)Stream16 (($WVNil) `cast` ...)

$fMinCtors(->)Stream14
$fMinCtors(->)Stream14 =
  VCons
    @~ <(':) (* -> *) Stream ('[] (* -> *))>
    (($WZIdx) `cast` ...)
    ($fMinCtors(->)Stream15 `cast` ...)

$fMinCtors(->)T37
$fMinCtors(->)T37 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors(->)T36
$fMinCtors(->)T36 = $fMinCtors(->)T37 (($WVNil) `cast` ...)

$fMinCtors(->)T35
$fMinCtors(->)T35 =
  VCons
    @~ <(':) (* -> *) T ('[] (* -> *))>
    (($WZIdx) `cast` ...)
    ($fMinCtors(->)T36 `cast` ...)

$fMinCtors*Inf11
$fMinCtors*Inf11 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Inf10
$fMinCtors*Inf10 = $fMinCtors*Inf11 (($WVNil) `cast` ...)

$fMinCtors*Inf9
$fMinCtors*Inf9 =
  VCons
    @~ <(':) * Inf ('[] *)>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Inf10 `cast` ...)

$fMinCtors*Nat12
$fMinCtors*Nat12 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Nat11
$fMinCtors*Nat11 = $fMinCtors*Nat12 (($WVNil) `cast` ...)

$fMinCtors*Nat10
$fMinCtors*Nat10 =
  VCons
    @~ <(':) * Nat ('[] *)>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Nat11 `cast` ...)

pDisband
pDisband = \ @ k_taA @ t_taB _ -> Proxy

pIndex
pIndex = \ @ k_t7K @ l_t7L @ r_t7M _ -> Proxy

pRep
pRep = \ @ k_tar @ t_tas _ -> Proxy

pSiblingDTs
pSiblingDTs = \ @ k_t7U @ t_t7V _ -> Proxy

minInfo__
minInfo__ =
  \ @ k_t7x @ t_t7y @ ts_t7z $dMinInfo___a17th _ ->
    (($p1MinInfo__ $dMinInfo___a17th) `cast` ...)
      (Proxy)
      (case $p2MinInfo__ $dMinInfo___a17th of _ { Eq# cobox1_d1bEx ->
       (Proxy) `cast` ...
       })

$fMinCtorsWorkerkDTPostRecDT1
$fMinCtorsWorkerkDTPostRecDT1 =
  \ @ k_a17qF @ t_a17oC @ t1_a17tY irred_a17tZ eta_B1 ->
    minInfo__ irred_a17tZ eta_B1

$fMinCtors(->)Even20
$fMinCtors(->)Even20 =
  Bin
    1 $fMinCtors(->)Even21 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

void
void = $fMinCtors(->)Even20 `cast` ...

$fMinInfo__ktst
$fMinInfo__ktst = D:MinInfo__

$fMinCtors(->)Stream_$dEq
$fMinCtors(->)Stream_$dEq = $fEqVec ($fEqInt `cast` ...) ($fEqVec0)

$fMinCtors(->)Stream_$dEq1
$fMinCtors(->)Stream_$dEq1 = $fEqCVec $fMinCtors(->)Stream_$dEq

$fMinCtors(->)T_$dEq2
$fMinCtors(->)T_$dEq2 = $fEqVec ($fEqInt `cast` ...) ($fEqVec0)

$fMinCtors(->)T_$dEq3
$fMinCtors(->)T_$dEq3 = $fEqCVec $fMinCtors(->)T_$dEq2

$fMinCtors*M34
$fMinCtors*M34 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*M33
$fMinCtors*M33 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*M32
$fMinCtors*M32 = $fMinCtors*M33 (($WVNil) `cast` ...)

$fMinCtors*M31
$fMinCtors*M31 =
  VCons
    @~ <(':) * M2 ('[] *)>
    (($WZIdx) `cast` ...)
    ($fMinCtors*M32 `cast` ...)

$fMinCtors*M30
$fMinCtors*M30 = $fMinCtors*M34 ($fMinCtors*M31 `cast` ...)

$fMinCtors*M29
$fMinCtors*M29 =
  VCons
    @~ <(':) * M1 ((':) * M2 ('[] *))>
    (($WZIdx) `cast` ...)
    ($fMinCtors*M30 `cast` ...)

$fMinCtors*M15
$fMinCtors*M15 =
  \ @ a_XzA a_X8jz ->
    VCons
      @~ <(':) * M1 ((':) * M2 ('[] *))>
      (a_X8jz `cast` ...)
      (VCons @~ <(':) * M2 ('[] *)> (a_X8jz `cast` ...) ($WVNil))

$fMinCtors*M1_$dEq
$fMinCtors*M1_$dEq = $fEqVec ($fEqInt `cast` ...) ($fEqVec0)

$fMinCtors*M1_$dEq1
$fMinCtors*M1_$dEq1 =
  $fEqVec ($fEqInt `cast` ...) $fMinCtors*M1_$dEq

$fMinCtors*M1_$dEq2
$fMinCtors*M1_$dEq2 = $fEqCVec $fMinCtors*M1_$dEq1

$fMinCtors*M43
$fMinCtors*M43 = SIdx @~ <(':) * M1 ((':) * M2 ('[] *))> ($WZIdx)

$fMinCtors*M16
$fMinCtors*M16 = \ _ _ -> $fMinCtors*M43

$fMinCtors*Nat8
$fMinCtors*Nat8 =
  \ @ a_XzX a_X8jW ->
    VCons @~ <(':) * Nat ('[] *)> (a_X8jW `cast` ...) ($WVNil)

$fMinCtors*Even_$dOrd
$fMinCtors*Even_$dOrd = $fOrdVec0 ($fEqVec0)

$fMinCtors*M1_$dOrd2
$fMinCtors*M1_$dOrd2 =
  $fOrdVec
    $fMinCtors*M1_$dEq ($fOrdInt `cast` ...) $fMinCtors*Even_$dOrd

$fMinCtors*M1_$dOrd1
$fMinCtors*M1_$dOrd1 =
  $fOrdVec
    $fMinCtors*M1_$dEq1 ($fOrdInt `cast` ...) $fMinCtors*M1_$dOrd2

$fMinCtors*M1_$dOrd
$fMinCtors*M1_$dOrd =
  $fOrdCVec $fMinCtors*M1_$dEq2 $fMinCtors*M1_$dOrd1

$fMinCtors*Nat_$dEq
$fMinCtors*Nat_$dEq = $fEqVec ($fEqInt `cast` ...) ($fEqVec0)

$fMinCtors*Nat_$dOrd1
$fMinCtors*Nat_$dOrd1 =
  $fOrdVec
    $fMinCtors*Nat_$dEq ($fOrdInt `cast` ...) $fMinCtors*Even_$dOrd

$fMinCtors*Nat_$dEq1
$fMinCtors*Nat_$dEq1 = $fEqCVec $fMinCtors*Nat_$dEq

$fMinCtors*Nat_$dOrd
$fMinCtors*Nat_$dOrd =
  $fOrdCVec $fMinCtors*Nat_$dEq1 $fMinCtors*Nat_$dOrd1

$fMinCtors(->)Even29
$fMinCtors(->)Even29 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors(->)Even28
$fMinCtors(->)Even28 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors(->)Even27
$fMinCtors(->)Even27 = $fMinCtors(->)Even28 (($WVNil) `cast` ...)

$fMinCtors(->)Even26
$fMinCtors(->)Even26 =
  VCons
    @~ <(':) (* -> *) Odd ('[] (* -> *))>
    (($WZIdx) `cast` ...)
    ($fMinCtors(->)Even27 `cast` ...)

$fMinCtors(->)Even25
$fMinCtors(->)Even25 =
  $fMinCtors(->)Even29 ($fMinCtors(->)Even26 `cast` ...)

$fMinCtors(->)Even24
$fMinCtors(->)Even24 =
  VCons
    @~ <(':) (* -> *) Even ((':) (* -> *) Odd ('[] (* -> *)))>
    (($WZIdx) `cast` ...)
    ($fMinCtors(->)Even25 `cast` ...)

$fMinCtors(->)Even22
$fMinCtors(->)Even22 =
  \ @ a_XAY a_X8kX ->
    VCons
      @~ <(':) (* -> *) Even ((':) (* -> *) Odd ('[] (* -> *)))>
      (a_X8kX `cast` ...)
      (VCons
         @~ <(':) (* -> *) Odd ('[] (* -> *))> (a_X8kX `cast` ...) ($WVNil))

$fMinCtors(->)Even_$dEq
$fMinCtors(->)Even_$dEq = $fEqVec ($fEqInt `cast` ...) ($fEqVec0)

$fMinCtors(->)Even_$dEq1
$fMinCtors(->)Even_$dEq1 =
  $fEqVec ($fEqInt `cast` ...) $fMinCtors(->)Even_$dEq

$fMinCtors(->)Even_$dEq2
$fMinCtors(->)Even_$dEq2 = $fEqCVec $fMinCtors(->)Even_$dEq1

$fMinCtors(->)Odd7
$fMinCtors(->)Odd7 =
  SIdx
    @~ <(':) (* -> *) Even ((':) (* -> *) Odd ('[] (* -> *)))> ($WZIdx)

$fMinCtors(->)Even_$dEq3
$fMinCtors(->)Even_$dEq3 = $fEqMin $fEqInt

$fMinCtors(->)Either_$dEq
$fMinCtors(->)Either_$dEq = $fEq(,) $fEqInt $fEqInt

$fMinCtors(->)Either_$dOrd
$fMinCtors(->)Either_$dOrd =
  $fOrd(,) $fMinCtors(->)Either_$dEq $fOrdInt $fOrdInt

$fMinCtors(->)T23
$fMinCtors(->)T23 =
  \ @ a_XC1 a_X8m0 ->
    VCons
      @~ <(':) (* -> *) [] ('[] (* -> *))> (a_X8m0 `cast` ...) ($WVNil)

$fMinCtors(->)Even_$dOrd3
$fMinCtors(->)Even_$dOrd3 = $fOrdVec0 ($fEqVec0)

$fMinCtors(->)Even_$dOrd2
$fMinCtors(->)Even_$dOrd2 =
  $fOrdVec
    $fMinCtors(->)Even_$dEq
    ($fOrdInt `cast` ...)
    $fMinCtors(->)Even_$dOrd3

$fMinCtors(->)Even_$dOrd1
$fMinCtors(->)Even_$dOrd1 =
  $fOrdVec
    $fMinCtors(->)Even_$dEq1
    ($fOrdInt `cast` ...)
    $fMinCtors(->)Even_$dOrd2

$fMinCtors(->)Even_$dOrd
$fMinCtors(->)Even_$dOrd =
  $fOrdCVec $fMinCtors(->)Even_$dEq2 $fMinCtors(->)Even_$dOrd1

$fMinCtors(->)T_$dOrd3
$fMinCtors(->)T_$dOrd3 =
  $fOrdVec
    $fMinCtors(->)T_$dEq2
    ($fOrdInt `cast` ...)
    $fMinCtors(->)Even_$dOrd3

$fMinCtors(->)T_$dOrd2
$fMinCtors(->)T_$dOrd2 =
  $fOrdCVec $fMinCtors(->)T_$dEq3 $fMinCtors(->)T_$dOrd3

$fMinCtors(->)Stream_$dOrd1
$fMinCtors(->)Stream_$dOrd1 =
  $fOrdVec
    $fMinCtors(->)Stream_$dEq
    ($fOrdInt `cast` ...)
    $fMinCtors(->)Even_$dOrd3

$fMinCtors(->)Stream_$dOrd
$fMinCtors(->)Stream_$dOrd =
  $fOrdCVec $fMinCtors(->)Stream_$dEq1 $fMinCtors(->)Stream_$dOrd1

$fMinCtors(->)T_$dEq
$fMinCtors(->)T_$dEq = $fEqVec ($fEqInt `cast` ...) ($fEqVec0)

$fMinCtors(->)T_$dOrd1
$fMinCtors(->)T_$dOrd1 =
  $fOrdVec
    $fMinCtors(->)T_$dEq
    ($fOrdInt `cast` ...)
    $fMinCtors(->)Even_$dOrd3

$fMinCtors(->)T_$dEq1
$fMinCtors(->)T_$dEq1 = $fEqCVec $fMinCtors(->)T_$dEq

$fMinCtors(->)T_$dOrd
$fMinCtors(->)T_$dOrd =
  $fOrdCVec $fMinCtors(->)T_$dEq1 $fMinCtors(->)T_$dOrd1

$fMinInfoRec(->)kDep1ts_$cminInfoRec
$fMinInfoRec(->)kDep1ts_$cminInfoRec =
  \ @ k_a17r0
    @ f_a17q7
    @ r_a17q8
    @ ts_a17q9
    $dOrd_a17yT
    $dMinCtors_a17yU
    $dMinInfoRec_a17yV
    _
    pts_a17qc ->
    plug0
      $dOrd_a17yT
      (($dMinCtors_a17yU `cast` ...) (Proxy))
      (($dMinInfoRec_a17yV `cast` ...) (Proxy) pts_a17qc)

$fMinInfoRec(->)kDep1ts
$fMinInfoRec(->)kDep1ts =
  $fMinInfoRec(->)kDep1ts_$cminInfoRec `cast` ...

$fMinInfoNonRec(->)Dep1_$cminInfoNonRec
$fMinInfoNonRec(->)Dep1_$cminInfoNonRec =
  \ @ f_a17q3 @ r_a17q4 $dMinCtors_a17yK $dMinInfoNonRec_a17yL _ ->
    plug0'
      (($dMinCtors_a17yK `cast` ...) (Proxy))
      (($dMinInfoNonRec_a17yL `cast` ...) (Proxy))

$fMinInfoNonRec(->)Dep1
$fMinInfoNonRec(->)Dep1 =
  $fMinInfoNonRec(->)Dep1_$cminInfoNonRec `cast` ...

$fMinInfoRec(->)kDep2ts_$cminInfoRec
$fMinInfoRec(->)kDep2ts_$cminInfoRec =
  \ @ k_a17qZ
    @ ff_a17pV
    @ rB_a17pW
    @ rA_a17pX
    @ ts_a17pY
    $dOrd_a17yx
    $dMinCtors_a17yy
    $dMinInfoRec_a17yz
    $dMinInfoRec1_a17yA
    _
    pts_a17q2 ->
    plug10
      $dOrd_a17yx
      (($dMinCtors_a17yy `cast` ...) (Proxy))
      (($dMinInfoRec_a17yz `cast` ...) (Proxy) pts_a17q2)
      (($dMinInfoRec1_a17yA `cast` ...) (Proxy) pts_a17q2)

$fMinInfoRec(->)kDep2ts
$fMinInfoRec(->)kDep2ts =
  $fMinInfoRec(->)kDep2ts_$cminInfoRec `cast` ...

$fMinInfoRec(->)kN0ts_$cminInfoRec
$fMinInfoRec(->)kN0ts_$cminInfoRec =
  \ @ k_a17qX @ dc_a17pK @ ts_a17pL $dMinInfoRec_a17y3 _ ->
    ($dMinInfoRec_a17y3 `cast` ...) (Proxy)

$fMinInfoRec(->)kN0ts
$fMinInfoRec(->)kN0ts =
  $fMinInfoRec(->)kN0ts_$cminInfoRec `cast` ...

$fMinInfoNonRec(->)N0_$cminInfoNonRec
$fMinInfoNonRec(->)N0_$cminInfoNonRec =
  \ @ dc_a17pJ $dMinInfoNonRec_a17xV _ ->
    ($dMinInfoNonRec_a17xV `cast` ...) (Proxy)

$fMinInfoNonRec(->)N0
$fMinInfoNonRec(->)N0 =
  $fMinInfoNonRec(->)N0_$cminInfoNonRec `cast` ...

$fMinInfoRec(->)kN1ts_$cminInfoRec
$fMinInfoRec(->)kN1ts_$cminInfoRec =
  \ @ k_a17qW @ dc_a17pH @ ts_a17pI $dMinInfoRec_a17xN _ ->
    ($dMinInfoRec_a17xN `cast` ...) (Proxy)

$fMinInfoRec(->)kN1ts
$fMinInfoRec(->)kN1ts =
  $fMinInfoRec(->)kN1ts_$cminInfoRec `cast` ...

$fMinInfoNonRec(->)N1_$cminInfoNonRec
$fMinInfoNonRec(->)N1_$cminInfoNonRec =
  \ @ dc_a17pG $dMinInfoNonRec_a17xF _ ->
    ($dMinInfoNonRec_a17xF `cast` ...) (Proxy)

$fMinInfoNonRec(->)N1
$fMinInfoNonRec(->)N1 =
  $fMinInfoNonRec(->)N1_$cminInfoNonRec `cast` ...

$fMinInfoNonRec(->)N2_$cminInfoNonRec
$fMinInfoNonRec(->)N2_$cminInfoNonRec =
  \ @ dc_a17pD $dMinInfoNonRec_a17xp _ ->
    ($dMinInfoNonRec_a17xp `cast` ...) (Proxy)

$fMinInfoNonRec(->)N2
$fMinInfoNonRec(->)N2 =
  $fMinInfoNonRec(->)N2_$cminInfoNonRec `cast` ...

$fMinInfoRec(->)kCts_$cminInfoRec
$fMinInfoRec(->)kCts_$cminInfoRec =
  \ @ k_a17qT
    @ k1_a17qU
    @ dc_a17pA
    @ r_a17pB
    @ ts_a17pC
    $dMinInfoRec_a17xf
    _ ->
    let {
      g_a122
      g_a122 = ($dMinInfoRec_a17xf `cast` ...) (Proxy) } in
    (\ x_a123 ->
       map ($fEnumInt_$csucc `cast` ...) ((g_a122 x_a123) `cast` ...))
    `cast` ...

$fMinInfoRec(->)kCts
$fMinInfoRec(->)kCts = $fMinInfoRec(->)kCts_$cminInfoRec `cast` ...

$fMinInfoNonRec(->)C1
$fMinInfoNonRec(->)C1 =
  \ @ k_a17qS @ dc_a17py @ r_a17pz $dMinInfoNonRec_a17x5 _ ->
    map
      ($fEnumInt_$csucc `cast` ...)
      ((($dMinInfoNonRec_a17x5 `cast` ...) (Proxy)) `cast` ...)

$fMinInfoNonRec(->)C_$cminInfoNonRec
$fMinInfoNonRec(->)C_$cminInfoNonRec =
  $fMinInfoNonRec(->)C1 `cast` ...

$fMinInfoNonRec(->)C
$fMinInfoNonRec(->)C = $fMinInfoNonRec(->)C1 `cast` ...

$fMinCtors(->)Even23
$fMinCtors(->)Even23 =
  \ @ k_a17qR @ ts_a17pu _ x_aVp y_aVq ->
    $fOrdInt_$cmin (x_aVp `cast` ...) (y_aVq `cast` ...)

$fMinCtors(->)Even_$cminInfoRec
$fMinCtors(->)Even_$cminInfoRec =
  \ @ k_a17qR
    @ l_a17ps
    @ r_a17pt
    @ ts_a17pu
    $dOrd_a17wU
    $dMinInfoRec_a17wV
    $dMinInfoRec1_a17wW ->
    let {
      $dEq_s1bXI
      $dEq_s1bXI = $p1Ord $dOrd_a17wU } in
    let {
      $dEq1_s1bXH
      $dEq1_s1bXH = $fEq(,,) $dEq_s1bXI $fEqInt $fEqInt } in
    let {
      $dOrd1_s1bXG
      $dOrd1_s1bXG =
        $fOrd(,,) $dEq1_s1bXH $dOrd_a17wU $fOrdInt $fOrdInt } in
    (\ _ pts_a17px ->
       unionWithKey
         $dOrd1_s1bXG
         (($fMinCtors(->)Even23) `cast` ...)
         ((($dMinInfoRec_a17wV `cast` ...) (Proxy) pts_a17px) `cast` ...)
         ((($dMinInfoRec1_a17wW `cast` ...) (Proxy) pts_a17px) `cast` ...))
    `cast` ...

$fMinInfoRec(->)k:+:ts
$fMinInfoRec(->)k:+:ts = $fMinCtors(->)Even_$cminInfoRec `cast` ...

$fMinCtors(->)Either4
$fMinCtors(->)Either4 =
  \ _ x_aVp y_aVq ->
    $fOrdInt_$cmin (x_aVp `cast` ...) (y_aVq `cast` ...)

$wa1
$wa1 =
  \ @ l_a17po @ r_a17pp w_s1dA0 w1_s1dA1 ->
    unionWithKey
      $fMinCtors(->)Either_$dOrd
      ($fMinCtors(->)Either4 `cast` ...)
      (((w_s1dA0 `cast` ...) (Proxy)) `cast` ...)
      (((w1_s1dA1 `cast` ...) (Proxy)) `cast` ...)

$fMinCtors(->)Either3
$fMinCtors(->)Either3 =
  \ @ l_a17po @ r_a17pp w_s1dA0 w1_s1dA1 _ -> $wa1 w_s1dA0 w1_s1dA1

$fMinInfoNonRec(->):+:_$cminInfoNonRec
$fMinInfoNonRec(->):+:_$cminInfoNonRec =
  $fMinCtors(->)Either3 `cast` ...

$fMinInfoNonRec(->):+:
$fMinInfoNonRec(->):+: = $fMinCtors(->)Either3 `cast` ...

$fMinInfoNonRec(->)U1
$fMinInfoNonRec(->)U1 = \ _ -> $fMinCtors(->)Even20

$fMinInfoNonRec(->)U_$cminInfoNonRec
$fMinInfoNonRec(->)U_$cminInfoNonRec =
  $fMinInfoNonRec(->)U1 `cast` ...

$fMinInfoNonRec(->)U
$fMinInfoNonRec(->)U = $fMinInfoNonRec(->)U1 `cast` ...

lvl_r1eYU
lvl_r1eYU = map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)Even20

$fMinCtors(->)Maybe3
$fMinCtors(->)Maybe3 = \ _ -> lvl_r1eYU

$fMinCtors*Bool3
$fMinCtors*Bool3 = \ _ -> lvl_r1eYU

$fMinCtors*Bool2
$fMinCtors*Bool2 = \ _ -> lvl_r1eYU

$fMinInfoRec(->)kUts_$cminInfoRec
$fMinInfoRec(->)kUts_$cminInfoRec =
  \ @ k_a17qQ @ ts_a17pn $dVRepeat_a17wz _ _ ->
    minima1ToSiblingInT
      $dVRepeat_a17wz ($fMinCtors(->)Even20 `cast` ...)

$fMinInfoRec(->)kUts
$fMinInfoRec(->)kUts = $fMinInfoRec(->)kUts_$cminInfoRec `cast` ...

lvl1_r1eYV
lvl1_r1eYV =
  minima1ToSiblingInT
    ($fMinCtors(->)T23 `cast` ...) ($fMinCtors(->)Even20 `cast` ...)

lvl2_r1eYW
lvl2_r1eYW =
  map ($fEnumInt_$csucc `cast` ...) (lvl1_r1eYV `cast` ...)

$fMinCtors(->)T22
$fMinCtors(->)T22 = \ _ _ -> lvl2_r1eYW

lvl3_r1eYX
lvl3_r1eYX =
  minima1ToSiblingInT
    ($fMinCtors(->)Even22 `cast` ...) ($fMinCtors(->)Even20 `cast` ...)

lvl4_r1eYY
lvl4_r1eYY =
  map ($fEnumInt_$csucc `cast` ...) (lvl3_r1eYX `cast` ...)

$fMinCtors(->)Even19
$fMinCtors(->)Even19 = \ _ _ -> lvl4_r1eYY

lvl5_r1eYZ
lvl5_r1eYZ =
  minima1ToSiblingInT
    ($fMinCtors*Nat8 `cast` ...) ($fMinCtors(->)Even20 `cast` ...)

lvl6_r1eZ0
lvl6_r1eZ0 =
  map ($fEnumInt_$csucc `cast` ...) (lvl5_r1eYZ `cast` ...)

$fMinCtors*Nat9
$fMinCtors*Nat9 = \ _ _ -> lvl6_r1eZ0

$fMinInfoRec(->)k:*:ts_$cminInfoRec
$fMinInfoRec(->)k:*:ts_$cminInfoRec =
  \ @ k_a17qP
    @ l_a17ph
    @ r_a17pi
    @ ts_a17pj
    $dOrd_a17wn
    _
    $dMinInfoRec_a17wp
    $dMinInfoRec1_a17wq
    _
    pts_a17pm ->
    addSiblingInTs
      $dOrd_a17wn
      (($dMinInfoRec_a17wp `cast` ...) (Proxy) pts_a17pm)
      (($dMinInfoRec1_a17wq `cast` ...) (Proxy) pts_a17pm)

$fMinInfoRec(->)k:*:ts
$fMinInfoRec(->)k:*:ts =
  $fMinInfoRec(->)k:*:ts_$cminInfoRec `cast` ...

$fMinInfoNonRec(->):*:_$cminInfoNonRec
$fMinInfoNonRec(->):*:_$cminInfoNonRec =
  \ @ l_a17pd
    @ r_a17pe
    $dMinInfoNonRec_a17we
    $dMinInfoNonRec1_a17wf
    _ ->
    addMinima1
      (($dMinInfoNonRec_a17we `cast` ...) (Proxy))
      (($dMinInfoNonRec1_a17wf `cast` ...) (Proxy))

$fMinInfoNonRec(->):*:
$fMinInfoNonRec(->):*: =
  $fMinInfoNonRec(->):*:_$cminInfoNonRec `cast` ...

$fMinInfoNonRec(->)Par3
$fMinInfoNonRec(->)Par3 = \ _ -> $fMinCtors(->)(,)7

$fMinInfoNonRec(->)Par1_$cminInfoNonRec
$fMinInfoNonRec(->)Par1_$cminInfoNonRec =
  $fMinInfoNonRec(->)Par3 `cast` ...

$fMinInfoNonRec(->)Par1
$fMinInfoNonRec(->)Par1 = $fMinInfoNonRec(->)Par3 `cast` ...

lvl7_r1eZ1
lvl7_r1eZ1 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)(,)7

$fMinCtors(->)Either7
$fMinCtors(->)Either7 = \ _ -> lvl7_r1eZ1

$fMinInfoNonRec(->)Par2
$fMinInfoNonRec(->)Par2 = \ _ -> $fMinCtors(->)(,)2

$fMinInfoNonRec(->)Par0_$cminInfoNonRec
$fMinInfoNonRec(->)Par0_$cminInfoNonRec =
  $fMinInfoNonRec(->)Par2 `cast` ...

$fMinInfoNonRec(->)Par0
$fMinInfoNonRec(->)Par0 = $fMinInfoNonRec(->)Par2 `cast` ...

$fMinCtors(->)X4
$fMinCtors(->)X4 =
  addMinima1
    ($fMinCtors(->)(,)2 `cast` ...) ($fMinCtors(->)(,)2 `cast` ...)

$fMinCtors(->)X3
$fMinCtors(->)X3 = addMinima1 $fMinCtors(->)X4 $fMinCtors(->)X4

$fMinCtors(->)X2
$fMinCtors(->)X2 = \ _ -> $fMinCtors(->)X3

lvl8_r1eZ2
lvl8_r1eZ2 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)(,)2

$fMinCtors(->)Either6
$fMinCtors(->)Either6 = \ _ -> lvl8_r1eZ2

$fMinCtors(->)Maybe2
$fMinCtors(->)Maybe2 = \ _ -> lvl8_r1eZ2

$fMinCtors(->)S4
$fMinCtors(->)S4 = \ _ -> lvl8_r1eZ2

$fMinCtors(->)Even8
$fMinCtors(->)Even8 = map (id) $fMinCtors(->)(,)2

$fMinInfoRec(->)kPar0ts_$cminInfoRec
$fMinInfoRec(->)kPar0ts_$cminInfoRec =
  \ @ k_a17qN @ ts_a17p9 $dVRepeat_a17vI _ _ _ ->
    let {
      lvl115_s1c36
      lvl115_s1c36 = ($dVRepeat_a17vI `cast` ...) $fMinCtors(->)(,)3 } in
    (mapKeysMonotonic
       (\ ds1_d19UT ->
          case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
          (lvl115_s1c36, np1_a17ow, np0_a17ox)
          })
       $fMinCtors(->)Even8)
    `cast` ...

$fMinInfoRec(->)kPar0ts
$fMinInfoRec(->)kPar0ts =
  $fMinInfoRec(->)kPar0ts_$cminInfoRec `cast` ...

$fMinCtors(->)T11
$fMinCtors(->)T11 =
  VCons
    @~ <(':) (* -> *) T ('[] (* -> *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    ($WVNil)

$fMinCtors(->)T34
$fMinCtors(->)T34 =
  \ ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors(->)T11 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors(->)T33
$fMinCtors(->)T33 =
  mapKeysMonotonic $fMinCtors(->)T34 $fMinCtors(->)Even8

$wa6
$wa6 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)T33

$fMinCtors(->)T32
$fMinCtors(->)T32 = \ _ _ -> $wa6

Rec {
$fMinCtors*Even_w
$fMinCtors*Even_w =
  \ @ k1_t9b @ ts1_t9c ds1_d8fQ ds2_d8fR ->
    case ds1_d8fQ of _ {
      ZIdx @ t_a81l @ ts2_a81m rb_d8qa ->
        case ds2_d8fR of _ {
          VNil ipv_s8qW -> cvUpd1;
          VCons @ t1_a81o @ ts3_a81p rb1_d8q8 a_a7VW as_a7VX ->
            (VCons
               @~ <(':) k1_t9b t1_a81o ts3_a81p>
               ($fMinCtors(->)(,)5 `cast` ...)
               as_a7VX)
            `cast` ...
        };
      SIdx @ ts2_a81w @ t_a81x rb_d8pM idx1_a7VY ->
        case ds2_d8fR of _ {
          VNil ipv_s8qZ -> cvUpd1;
          VCons @ t1_a81z @ ts3_a81A rb1_d8pK a_a7VZ as_a7W0 ->
            (VCons
               @~ <(':) k1_t9b t1_a81z ts2_a81w>
               a_a7VZ
               ($fMinCtors*Even_w idx1_a7VY (as_a7W0 `cast` ...)))
            `cast` ...
        }
    }
end Rec }

$wa9
$wa9 =
  \ @ k_a17qM
    @ lbl_a17p4
    @ t_a17p5
    @ ts_a17p6
    w_s1dAg
    w1_s1dAh
    w2_s1dAj ->
    Bin
      1
      (($fMinCtors*Even_w
          ((w_s1dAg `cast` ...) (Proxy) w2_s1dAj)
          (((w1_s1dAh `cast` ...) $fMinCtors(->)(,)3) `cast` ...))
       `cast` ...,
       $fMinCtors(->)(,)3,
       $fMinCtors(->)(,)3)
      ($fMinCtors(->)(,)3 `cast` ...)
      (Tip)
      (Tip)

$fMinCtors*M17
$fMinCtors*M17 =
  \ @ k_a17qM
    @ lbl_a17p4
    @ t_a17p5
    @ ts_a17p6
    w_s1dAg
    w1_s1dAh
    _
    w3_s1dAj ->
    $wa9 w_s1dAg w1_s1dAh w3_s1dAj

$fMinInfoRec(->)kRec0ts_$cminInfoRec
$fMinInfoRec(->)kRec0ts_$cminInfoRec = $fMinCtors*M17 `cast` ...

$fMinInfoRec(->)kRec0ts
$fMinInfoRec(->)kRec0ts = $fMinCtors*M17 `cast` ...

$fMinCtors*Nat7
$fMinCtors*Nat7 =
  \ _ _ ->
    map
      ($fEnumInt_$csucc `cast` ...)
      (Bin
         1
         (($fMinCtors*Even_w
             ($WZIdx)
             (VCons
                @~ <(':) * Nat ('[] *)> ($fMinCtors(->)(,)3 `cast` ...) ($WVNil)))
          `cast` ...,
          $fMinCtors(->)(,)3,
          $fMinCtors(->)(,)3)
         ($fMinCtors(->)(,)3 `cast` ...)
         (Tip)
         (Tip))

$fMinCtors*Nat6
$fMinCtors*Nat6 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Nat_$dOrd
    ($fMinCtors*Nat9 `cast` ...)
    ($fMinCtors*Nat7 `cast` ...)

$fMinCtors*M14
$fMinCtors*M14 =
  \ _ _ ->
    map
      ($fEnumInt_$csucc `cast` ...)
      (Bin
         1
         (($fMinCtors*Even_w
             (SIdx @~ <(':) * M1 ((':) * M2 ('[] *))> ($WZIdx))
             (VCons
                @~ <(':) * M1 ((':) * M2 ('[] *))>
                ($fMinCtors(->)(,)3 `cast` ...)
                (VCons
                   @~ <(':) * M2 ('[] *)> ($fMinCtors(->)(,)3 `cast` ...) ($WVNil))))
          `cast` ...,
          $fMinCtors(->)(,)3,
          $fMinCtors(->)(,)3)
         ($fMinCtors(->)(,)3 `cast` ...)
         (Tip)
         (Tip))

Rec {
$fMinCtors(->)Even_w
$fMinCtors(->)Even_w =
  \ @ k1_t9b @ ts1_t9c ds1_d8fQ ds2_d8fR ->
    case ds1_d8fQ of _ {
      ZIdx @ t_a81l @ ts2_a81m rb_d8qa ->
        case ds2_d8fR of _ {
          VNil ipv_s8qW -> cvUpd1;
          VCons @ t1_a81o @ ts3_a81p rb1_d8q8 a_a7VW as_a7VX ->
            (VCons
               @~ <(':) k1_t9b t1_a81o ts3_a81p>
               ($fMinCtors(->)(,)5 `cast` ...)
               as_a7VX)
            `cast` ...
        };
      SIdx @ ts2_a81w @ t_a81x rb_d8pM idx1_a7VY ->
        case ds2_d8fR of _ {
          VNil ipv_s8qZ -> cvUpd1;
          VCons @ t1_a81z @ ts3_a81A rb1_d8pK a_a7VZ as_a7W0 ->
            (VCons
               @~ <(':) k1_t9b t1_a81z ts2_a81w>
               a_a7VZ
               ($fMinCtors(->)Even_w idx1_a7VY (as_a7W0 `cast` ...)))
            `cast` ...
        }
    }
end Rec }

$wa12
$wa12 =
  \ @ k_a17qL
    @ lbl_a17oZ
    @ t_a17p0
    @ ts_a17p1
    w_s1dAp
    w1_s1dAq
    w2_s1dAs ->
    Bin
      1
      (($fMinCtors(->)Even_w
          ((w_s1dAp `cast` ...) (Proxy) w2_s1dAs)
          (((w1_s1dAq `cast` ...) $fMinCtors(->)(,)3) `cast` ...))
       `cast` ...,
       $fMinCtors(->)(,)3,
       $fMinCtors(->)(,)3)
      ($fMinCtors(->)(,)3 `cast` ...)
      (Tip)
      (Tip)

$fMinInfoRec(->)kRec1ts1
$fMinInfoRec(->)kRec1ts1 =
  \ @ k_a17qL
    @ lbl_a17oZ
    @ t_a17p0
    @ ts_a17p1
    w_s1dAp
    w1_s1dAq
    _
    w3_s1dAs ->
    $wa12 w_s1dAp w1_s1dAq w3_s1dAs

$fMinInfoRec(->)kRec1ts_$cminInfoRec
$fMinInfoRec(->)kRec1ts_$cminInfoRec =
  $fMinInfoRec(->)kRec1ts1 `cast` ...

$fMinInfoRec(->)kRec1ts
$fMinInfoRec(->)kRec1ts = $fMinInfoRec(->)kRec1ts1 `cast` ...

$fMinCtors(->)T21
$fMinCtors(->)T21 = addSiblingInTs $fMinCtors(->)T_$dOrd

$fMinCtors(->)T20
$fMinCtors(->)T20 =
  VCons
    @~ <(':) (* -> *) [] ('[] (* -> *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    ($WVNil)

$fMinCtors(->)T19
$fMinCtors(->)T19 =
  \ ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors(->)T20 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors(->)T18
$fMinCtors(->)T18 =
  mapKeysMonotonic $fMinCtors(->)T19 $fMinCtors(->)Even8

$wa5
$wa5 =
  \ _ ->
    map
      ($fEnumInt_$csucc `cast` ...)
      (($fMinCtors(->)T21
          ($fMinCtors(->)T18 `cast` ...)
          ((Bin
              1
              (($fMinCtors(->)Even_w
                  ($WZIdx)
                  (VCons
                     @~ <(':) (* -> *) [] ('[] (* -> *))>
                     ($fMinCtors(->)(,)3 `cast` ...)
                     ($WVNil)))
               `cast` ...,
               $fMinCtors(->)(,)3,
               $fMinCtors(->)(,)3)
              ($fMinCtors(->)(,)3 `cast` ...)
              (Tip)
              (Tip))
           `cast` ...))
       `cast` ...)

$fMinCtors(->)T17
$fMinCtors(->)T17 = \ _ w1_s1dAx -> $wa5 w1_s1dAx

$fMinCtors(->)T16
$fMinCtors(->)T16 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors(->)T_$dOrd
    ($fMinCtors(->)T22 `cast` ...)
    ($fMinCtors(->)T17 `cast` ...)

$fMinCtors(->)Even12
$fMinCtors(->)Even12 = addSiblingInTs $fMinCtors(->)Even_$dOrd

$fMinCtors(->)Even11
$fMinCtors(->)Even11 =
  VCons
    @~ <(':) (* -> *) Odd ('[] (* -> *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    ($WVNil)

$fMinCtors(->)Even18
$fMinCtors(->)Even18 =
  VCons
    @~ <(':) (* -> *) Even ((':) (* -> *) Odd ('[] (* -> *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors(->)Even11

$fMinCtors(->)Even17
$fMinCtors(->)Even17 =
  \ ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors(->)Even18 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors(->)Even16
$fMinCtors(->)Even16 =
  mapKeysMonotonic $fMinCtors(->)Even17 $fMinCtors(->)Even8

$wa3
$wa3 =
  \ _ ->
    map
      ($fEnumInt_$csucc `cast` ...)
      (($fMinCtors(->)Even12
          ($fMinCtors(->)Even16 `cast` ...)
          ((Bin
              1
              (($fMinCtors(->)Even_w
                  (SIdx
                     @~ <(':) (* -> *) Even ((':) (* -> *) Odd ('[] (* -> *)))>
                     ($WZIdx))
                  (VCons
                     @~ <(':) (* -> *) Even ((':) (* -> *) Odd ('[] (* -> *)))>
                     ($fMinCtors(->)(,)3 `cast` ...)
                     (VCons
                        @~ <(':) (* -> *) Odd ('[] (* -> *))>
                        ($fMinCtors(->)(,)3 `cast` ...)
                        ($WVNil))))
               `cast` ...,
               $fMinCtors(->)(,)3,
               $fMinCtors(->)(,)3)
              ($fMinCtors(->)(,)3 `cast` ...)
              (Tip)
              (Tip))
           `cast` ...))
       `cast` ...)

$fMinCtors(->)Even15
$fMinCtors(->)Even15 = \ _ w1_s1dAC -> $wa3 w1_s1dAC

$fMinCtors(->)Even14
$fMinCtors(->)Even14 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors(->)Even_$dOrd
    ($fMinCtors(->)Even19 `cast` ...)
    ($fMinCtors(->)Even15 `cast` ...)

$fMinCtors(->)Even10
$fMinCtors(->)Even10 =
  VCons
    @~ <(':) (* -> *) Even ((':) (* -> *) Odd ('[] (* -> *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors(->)Even11

$fMinCtors(->)Even9
$fMinCtors(->)Even9 =
  \ ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors(->)Even10 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors(->)Even7
$fMinCtors(->)Even7 =
  mapKeysMonotonic $fMinCtors(->)Even9 $fMinCtors(->)Even8

$wa2
$wa2 =
  \ _ ->
    map
      ($fEnumInt_$csucc `cast` ...)
      (($fMinCtors(->)Even12
          ($fMinCtors(->)Even7 `cast` ...)
          ((Bin
              1
              (($fMinCtors(->)Even_w
                  ($WZIdx)
                  (VCons
                     @~ <(':) (* -> *) Even ((':) (* -> *) Odd ('[] (* -> *)))>
                     ($fMinCtors(->)(,)3 `cast` ...)
                     (VCons
                        @~ <(':) (* -> *) Odd ('[] (* -> *))>
                        ($fMinCtors(->)(,)3 `cast` ...)
                        ($WVNil))))
               `cast` ...,
               $fMinCtors(->)(,)3,
               $fMinCtors(->)(,)3)
              ($fMinCtors(->)(,)3 `cast` ...)
              (Tip)
              (Tip))
           `cast` ...))
       `cast` ...)

$fMinInfoRec(->)kDep0ts_$cminInfoRec
$fMinInfoRec(->)kDep0ts_$cminInfoRec =
  \ @ k_a17qJ
    @ t_a17oN
    @ ts_a17oO
    $dVRepeat_a17uH
    $dMinInfoNonRec_a17uI
    p_a17oP
    _ ->
    let {
      lvl115_s1c36
      lvl115_s1c36 = ($dVRepeat_a17uH `cast` ...) $fMinCtors(->)(,)3 } in
    (mapKeysMonotonic
       (\ ds1_d19UT ->
          case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
          (lvl115_s1c36, np1_a17ow, np0_a17ox)
          })
       (map
          (id) ((($dMinInfoNonRec_a17uI `cast` ...) p_a17oP) `cast` ...)))
    `cast` ...

$fMinInfoRec(->)kDep0ts
$fMinInfoRec(->)kDep0ts =
  $fMinInfoRec(->)kDep0ts_$cminInfoRec `cast` ...

$fMinInfoNonRec(->)Dep0_$cminInfoNonRec
$fMinInfoNonRec(->)Dep0_$cminInfoNonRec =
  \ @ t_a17oM $dMinCtors_a17uA _ ->
    ($dMinCtors_a17uA `cast` ...) (Proxy)

$fMinInfoNonRec(->)Dep0
$fMinInfoNonRec(->)Dep0 =
  $fMinInfoNonRec(->)Dep0_$cminInfoNonRec `cast` ...

$fMinCtors*Int1
$fMinCtors*Int1 = \ _ -> $fMinCtors(->)S3

$fMinCtors*Int_$cminCtors
$fMinCtors*Int_$cminCtors = $fMinCtors*Int1 `cast` ...

$fMinCtors*Int
$fMinCtors*Int = $fMinCtors*Int1 `cast` ...

$fMinCtors*M28
$fMinCtors*M28 = addSiblingInTs $fMinCtors*M1_$dOrd

$fMinCtors*M24
$fMinCtors*M24 =
  VCons
    @~ <(':) * M2 ('[] *)> ($fMinCtors(->)(,)3 `cast` ...) ($WVNil)

$fMinCtors*M27
$fMinCtors*M27 =
  VCons
    @~ <(':) * M1 ((':) * M2 ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*M24

$fMinCtors*M26
$fMinCtors*M26 =
  \ ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*M27 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors(->)T9
$fMinCtors(->)T9 = map (id) $fMinCtors(->)S3

$fMinCtors*M25
$fMinCtors*M25 = mapKeysMonotonic $fMinCtors*M26 $fMinCtors(->)T9

$fMinCtors*M23
$fMinCtors*M23 =
  VCons
    @~ <(':) * M1 ((':) * M2 ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*M24

$fMinCtors*M22
$fMinCtors*M22 =
  \ ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*M23 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*M21
$fMinCtors*M21 = mapKeysMonotonic $fMinCtors*M22 $fMinCtors(->)T9

$fMinCtors*M20
$fMinCtors*M20 =
  $fMinCtors*M28
    ($fMinCtors*M25 `cast` ...) ($fMinCtors*M21 `cast` ...)

$fMinCtors*M19
$fMinCtors*M19 = $fMinCtors*M28 $fMinCtors*M20 $fMinCtors*M20

$wa10
$wa10 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*M19 `cast` ...)

$fMinCtors*M18
$fMinCtors*M18 = \ _ _ -> $wa10

$fMinCtors*M13
$fMinCtors*M13 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*M1_$dOrd
    ($fMinCtors*M18 `cast` ...)
    ($fMinCtors*M14 `cast` ...)

lvl9_r1eZ3
lvl9_r1eZ3 =
  addMinima1
    ($fMinCtors(->)S3 `cast` ...) ($fMinCtors(->)S3 `cast` ...)

lvl10_r1eZ4
lvl10_r1eZ4 =
  map ($fEnumInt_$csucc `cast` ...) (lvl9_r1eZ3 `cast` ...)

$fMinCtors(->)S2
$fMinCtors(->)S2 = \ _ -> lvl10_r1eZ4

$fMinCtorsWorkerkDTPostNonRecDT_$cmethod
$fMinCtorsWorkerkDTPostNonRecDT_$cmethod =
  \ @ k_a17qH @ k1_a17qI @ t_a17oK $dMinInfoNonRec_a17u4 _ _ ->
    ($dMinInfoNonRec_a17u4 `cast` ...) (Proxy)

$fMinCtorsWorkerkDTPostNonRecDT
$fMinCtorsWorkerkDTPostNonRecDT =
  $fMinCtorsWorkerkDTPostNonRecDT_$cmethod `cast` ...

lvl11_r1eZ5
lvl11_r1eZ5 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    (map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)(,)7)
    (map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)(,)2)

gen_minCtors9
gen_minCtors9 = \ _ -> lvl11_r1eZ5

gen_minCtors_$sgen_minCtors17
gen_minCtors_$sgen_minCtors17 = gen_minCtors9 `cast` ...

lvl12_r1eZ6
lvl12_r1eZ6 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    (map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)Even20)
    (map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)(,)2)

gen_minCtors6
gen_minCtors6 = \ _ -> lvl12_r1eZ6

gen_minCtors_$sgen_minCtors13
gen_minCtors_$sgen_minCtors13 = gen_minCtors6 `cast` ...

$fMinCtors(->)(,,)3
$fMinCtors(->)(,,)3 =
  addMinima1
    ($fMinCtors(->)(,)7 `cast` ...) ($fMinCtors(->)(,)2 `cast` ...)

lvl13_r1eZ7
lvl13_r1eZ7 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors(->)(,,)3 `cast` ...)

gen_minCtors8
gen_minCtors8 = \ _ -> lvl13_r1eZ7

gen_minCtors_$sgen_minCtors16
gen_minCtors_$sgen_minCtors16 = gen_minCtors8 `cast` ...

gen_minCtors1
gen_minCtors1 = \ _ -> lvl_r1eYU

gen_minCtors_$sgen_minCtors4
gen_minCtors_$sgen_minCtors4 = gen_minCtors1 `cast` ...

lvl14_r1eZ8
lvl14_r1eZ8 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors(->)X4 `cast` ...)

gen_minCtors7
gen_minCtors7 = \ _ -> lvl14_r1eZ8

gen_minCtors_$sgen_minCtors14
gen_minCtors_$sgen_minCtors14 = gen_minCtors7 `cast` ...

lvl15_r1eZ9
lvl15_r1eZ9 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    (map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)Even20)
    (map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)Even20)

gen_minCtors2
gen_minCtors2 = \ _ -> lvl15_r1eZ9

gen_minCtors_$sgen_minCtors5
gen_minCtors_$sgen_minCtors5 = gen_minCtors2 `cast` ...

lvl16_r1eZa
lvl16_r1eZa =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    (map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)(,)2)
    (map
       ($fEnumInt_$csucc `cast` ...)
       ((addMinima1
           ($fMinCtors(->)S3 `cast` ...) ($fMinCtors(->)S3 `cast` ...))
        `cast` ...))

gen_minCtors3
gen_minCtors3 = \ _ -> lvl16_r1eZa

gen_minCtors_$sgen_minCtors8
gen_minCtors_$sgen_minCtors8 = gen_minCtors3 `cast` ...

$fMinCtors(->)Y5
$fMinCtors(->)Y5 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors(->)X3 `cast` ...)

gen_minCtors4
gen_minCtors4 = \ _ -> $fMinCtors(->)Y5

gen_minCtors_$sgen_minCtors11
gen_minCtors_$sgen_minCtors11 = gen_minCtors4 `cast` ...

$fMinCtorsWorkerkDTPostRecDT_$cmethod
$fMinCtorsWorkerkDTPostRecDT_$cmethod =
  \ @ k_a17qF
    @ k1_a17qG
    @ t_a17oC
    @ l_a17oD
    @ r_a17oE
    $dIndexInto_a17tF
    $dVInitialize_a17tG
    _
    _
    $dVEnum_a17tJ
    $dEq_a17tK
    _
    _
    _ ->
    case $dEq_a17tK of _ { D:Eq ww_sf3o ww1_sf3p ->
    cvAt1
      (($dIndexInto_a17tF `cast` ...) (Proxy) (Proxy))
      ($wsolve_sibling_set'
         ww_sf3o
         $dVEnum_a17tJ
         (cvInitialize
            $dVInitialize_a17tG (Proxy) ($fMinCtorsWorkerkDTPostRecDT1)))
    }

$fMinCtorsWorkerkDTPostRecDT
$fMinCtorsWorkerkDTPostRecDT =
  $fMinCtorsWorkerkDTPostRecDT_$cmethod `cast` ...

$fMinCtors(->)Even31
$fMinCtors(->)Even31 =
  $fEqMap_$c== $fMinCtors(->)Either_$dEq $fMinCtors(->)Even_$dEq3

$fMinCtors(->)T27
$fMinCtors(->)T27 =
  \ ds_d8jH ds1_d8jI ->
    case ds_d8jH `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv _ ->
    case ds1_d8jI `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx _ ->
    $fMinCtors(->)Even31 (a_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    }
    }

$fMinCtors(->)T15
$fMinCtors(->)T15 =
  $fMinCtors(->)T16 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors(->)T14
$fMinCtors(->)T14 =
  VCons
    @~ <(':) (* -> *) [] ('[] (* -> *))>
    ($fMinCtors(->)T15 `cast` ...)
    ($WVNil)

$fMinCtors(->)T13
$fMinCtors(->)T13 =
  $wsolve_sibling_set'
    ($fMinCtors(->)T27 `cast` ...)
    ($fMinCtors(->)T24 `cast` ...)
    ($fMinCtors(->)T14 `cast` ...)

$fMinCtors(->)T12
$fMinCtors(->)T12 = cvAt1 (($WZIdx) `cast` ...) $fMinCtors(->)T13

$fMinCtors(->)[]1
$fMinCtors(->)[]1 = \ _ _ -> $fMinCtors(->)T12

gen_minCtors_$sgen_minCtors15
gen_minCtors_$sgen_minCtors15 = \ _ -> $fMinCtors(->)T12

$fMinCtors(->)Odd6
$fMinCtors(->)Odd6 =
  \ ds_X8AI ds1_X8AK ->
    case ds_X8AI `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv as_a7Xw ->
    case ds1_X8AK `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors(->)Even31 (a_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8tw @ ts3_X8ty rb2_X8G0 a1_X8eI _ ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8tG @ ts4_X8tI rb3_X8G5 b1_X8eR _ ->
        $fMinCtors(->)Even31 (a1_X8eI `cast` ...) (b1_X8eR `cast` ...)
        }
        }
    }
    }
    }

$fMinCtors(->)Even13
$fMinCtors(->)Even13 =
  $fMinCtors(->)Even14 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors(->)Even6
$fMinCtors(->)Even6 = $wa2 ((Proxy) `cast` ...)

$fMinCtors(->)Odd5
$fMinCtors(->)Odd5 =
  VCons
    @~ <(':) (* -> *) Odd ('[] (* -> *))>
    ($fMinCtors(->)Even6 `cast` ...)
    ($WVNil)

$fMinCtors(->)Odd4
$fMinCtors(->)Odd4 =
  VCons
    @~ <(':) (* -> *) Even ((':) (* -> *) Odd ('[] (* -> *)))>
    ($fMinCtors(->)Even13 `cast` ...)
    $fMinCtors(->)Odd5

$fMinCtors(->)Odd3
$fMinCtors(->)Odd3 =
  $wsolve_sibling_set'
    ($fMinCtors(->)Odd6 `cast` ...)
    ($fMinCtors(->)Even24 `cast` ...)
    ($fMinCtors(->)Odd4 `cast` ...)

$fMinCtors(->)Odd2
$fMinCtors(->)Odd2 =
  cvAt1 ($fMinCtors(->)Odd7 `cast` ...) $fMinCtors(->)Odd3

$fMinCtors(->)Odd1
$fMinCtors(->)Odd1 = \ _ _ -> $fMinCtors(->)Odd2

gen_minCtors_$sgen_minCtors7
gen_minCtors_$sgen_minCtors7 = \ _ -> $fMinCtors(->)Odd2

$fMinCtors(->)Even30
$fMinCtors(->)Even30 =
  \ ds_X8AS ds1_X8AU ->
    case ds_X8AS `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv as_a7Xw ->
    case ds1_X8AU `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors(->)Even31 (a_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8ty @ ts3_X8tA rb2_X8G2 a1_X8eK _ ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8tI @ ts4_X8tK rb3_X8G7 b1_X8eT _ ->
        $fMinCtors(->)Even31 (a1_X8eK `cast` ...) (b1_X8eT `cast` ...)
        }
        }
    }
    }
    }

$fMinCtors(->)Even5
$fMinCtors(->)Even5 =
  VCons
    @~ <(':) (* -> *) Odd ('[] (* -> *))>
    ($fMinCtors(->)Even6 `cast` ...)
    ($WVNil)

$fMinCtors(->)Even4
$fMinCtors(->)Even4 =
  VCons
    @~ <(':) (* -> *) Even ((':) (* -> *) Odd ('[] (* -> *)))>
    ($fMinCtors(->)Even13 `cast` ...)
    $fMinCtors(->)Even5

$fMinCtors(->)Even3
$fMinCtors(->)Even3 =
  $wsolve_sibling_set'
    ($fMinCtors(->)Even30 `cast` ...)
    ($fMinCtors(->)Even24 `cast` ...)
    ($fMinCtors(->)Even4 `cast` ...)

$fMinCtors(->)Even2
$fMinCtors(->)Even2 =
  cvAt1 (($WZIdx) `cast` ...) $fMinCtors(->)Even3

$fMinCtors(->)Even1
$fMinCtors(->)Even1 = \ _ _ -> $fMinCtors(->)Even2

gen_minCtors_$sgen_minCtors6
gen_minCtors_$sgen_minCtors6 = \ _ -> $fMinCtors(->)Even2

$fMinCtors*Inf12
$fMinCtors*Inf12 =
  \ ds_X8B2 ds1_X8B4 ->
    case ds_X8B2 `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv _ ->
    case ds1_X8B4 `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx _ ->
    $fMinCtors(->)Even31 (a_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    }
    }

$fMinCtors*Inf8
$fMinCtors*Inf8 =
  $fMinCtors*Even_w
    ($WZIdx)
    (VCons
       @~ <(':) * Inf ('[] *)> ($fMinCtors(->)(,)3 `cast` ...) ($WVNil))

$fMinCtors*Inf7
$fMinCtors*Inf7 =
  ($fMinCtors*Inf8 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Inf6
$fMinCtors*Inf6 =
  Bin 1 $fMinCtors*Inf7 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Inf5
$fMinCtors*Inf5 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Inf6

$fMinCtors*Inf4
$fMinCtors*Inf4 =
  VCons @~ <(':) * Inf ('[] *)> ($fMinCtors*Inf5 `cast` ...) ($WVNil)

$fMinCtors*Inf3
$fMinCtors*Inf3 =
  $wsolve_sibling_set'
    ($fMinCtors*Inf12 `cast` ...)
    ($fMinCtors*Inf9 `cast` ...)
    ($fMinCtors*Inf4 `cast` ...)

$fMinCtors*Inf2
$fMinCtors*Inf2 = cvAt1 (($WZIdx) `cast` ...) $fMinCtors*Inf3

$fMinCtors*Inf1
$fMinCtors*Inf1 = \ _ _ -> $fMinCtors*Inf2

gen_minCtors_$sgen_minCtors
gen_minCtors_$sgen_minCtors = \ _ -> $fMinCtors*Inf2

$fMinCtors*Nat13
$fMinCtors*Nat13 =
  \ ds_X8Bc ds1_X8Be ->
    case ds_X8Bc `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv _ ->
    case ds1_X8Be `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx _ ->
    $fMinCtors(->)Even31 (a_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    }
    }

$fMinCtors*Nat5
$fMinCtors*Nat5 =
  $fMinCtors*Nat6 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors*Nat4
$fMinCtors*Nat4 =
  VCons @~ <(':) * Nat ('[] *)> ($fMinCtors*Nat5 `cast` ...) ($WVNil)

$fMinCtors*Nat3
$fMinCtors*Nat3 =
  $wsolve_sibling_set'
    ($fMinCtors*Nat13 `cast` ...)
    ($fMinCtors*Nat10 `cast` ...)
    ($fMinCtors*Nat4 `cast` ...)

$fMinCtors*Nat2
$fMinCtors*Nat2 = cvAt1 (($WZIdx) `cast` ...) $fMinCtors*Nat3

$fMinCtors*Nat1
$fMinCtors*Nat1 = \ _ _ -> $fMinCtors*Nat2

gen_minCtors_$sgen_minCtors3
gen_minCtors_$sgen_minCtors3 = \ _ -> $fMinCtors*Nat2

$fMinCtors*M42
$fMinCtors*M42 =
  \ ds_X8Bm ds1_X8Bo ->
    case ds_X8Bm `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv as_a7Xw ->
    case ds1_X8Bo `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors(->)Even31 (a_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8tE @ ts3_X8tG rb2_X8G8 a1_X8eQ _ ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8tO @ ts4_X8tQ rb3_X8Gd b1_X8eZ _ ->
        $fMinCtors(->)Even31 (a1_X8eQ `cast` ...) (b1_X8eZ `cast` ...)
        }
        }
    }
    }
    }

$fMinCtors*M12
$fMinCtors*M12 =
  $fMinCtors*M13 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors*M11
$fMinCtors*M11 =
  $fMinCtors*Even_w
    ($WZIdx)
    (VCons
       @~ <(':) * M1 ((':) * M2 ('[] *))>
       ($fMinCtors(->)(,)3 `cast` ...)
       (VCons
          @~ <(':) * M2 ('[] *)> ($fMinCtors(->)(,)3 `cast` ...) ($WVNil)))

$fMinCtors*M10
$fMinCtors*M10 =
  ($fMinCtors*M11 `cast` ..., $fMinCtors(->)(,)3, $fMinCtors(->)(,)3)

$fMinCtors*M9
$fMinCtors*M9 =
  Bin 1 $fMinCtors*M10 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*M41
$fMinCtors*M41 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*M9

$fMinCtors*M40
$fMinCtors*M40 =
  VCons @~ <(':) * M2 ('[] *)> ($fMinCtors*M41 `cast` ...) ($WVNil)

$fMinCtors*M39
$fMinCtors*M39 =
  VCons
    @~ <(':) * M1 ((':) * M2 ('[] *))>
    ($fMinCtors*M12 `cast` ...)
    $fMinCtors*M40

$fMinCtors*M38
$fMinCtors*M38 =
  $wsolve_sibling_set'
    ($fMinCtors*M42 `cast` ...)
    ($fMinCtors*M29 `cast` ...)
    ($fMinCtors*M39 `cast` ...)

$fMinCtors*M37
$fMinCtors*M37 = cvAt1 ($fMinCtors*M43 `cast` ...) $fMinCtors*M38

$fMinCtors*M36
$fMinCtors*M36 = \ _ _ -> $fMinCtors*M37

gen_minCtors_$sgen_minCtors2
gen_minCtors_$sgen_minCtors2 = \ _ -> $fMinCtors*M37

$fMinCtors*M35
$fMinCtors*M35 =
  \ ds_X8Bw ds1_X8By ->
    case ds_X8Bw `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv as_a7Xw ->
    case ds1_X8By `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors(->)Even31 (a_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8tG @ ts3_X8tI rb2_X8Ga a1_X8eS _ ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8tQ @ ts4_X8tS rb3_X8Gf b1_X8f1 _ ->
        $fMinCtors(->)Even31 (a1_X8eS `cast` ...) (b1_X8f1 `cast` ...)
        }
        }
    }
    }
    }

$fMinCtors*M8
$fMinCtors*M8 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*M9

$fMinCtors*M7
$fMinCtors*M7 =
  VCons @~ <(':) * M2 ('[] *)> ($fMinCtors*M8 `cast` ...) ($WVNil)

$fMinCtors*M6
$fMinCtors*M6 =
  VCons
    @~ <(':) * M1 ((':) * M2 ('[] *))>
    ($fMinCtors*M12 `cast` ...)
    $fMinCtors*M7

$fMinCtors*M5
$fMinCtors*M5 =
  $wsolve_sibling_set'
    ($fMinCtors*M35 `cast` ...)
    ($fMinCtors*M29 `cast` ...)
    ($fMinCtors*M6 `cast` ...)

$fMinCtors*M4
$fMinCtors*M4 = cvAt1 (($WZIdx) `cast` ...) $fMinCtors*M5

$fMinCtors*M3
$fMinCtors*M3 = \ _ _ -> $fMinCtors*M4

gen_minCtors_$sgen_minCtors1
gen_minCtors_$sgen_minCtors1 = \ _ -> $fMinCtors*M4

$fMinCtors(->)Stream17
$fMinCtors(->)Stream17 =
  \ ds_X8BG ds1_X8BI ->
    case ds_X8BG `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv _ ->
    case ds1_X8BI `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx _ ->
    $fMinCtors(->)Even31 (a_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    }
    }

$fMinCtors(->)Stream13
$fMinCtors(->)Stream13 = addSiblingInTs $fMinCtors(->)Stream_$dOrd

$fMinCtors(->)Stream12
$fMinCtors(->)Stream12 =
  VCons
    @~ <(':) (* -> *) Stream ('[] (* -> *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    ($WVNil)

$fMinCtors(->)Stream11
$fMinCtors(->)Stream11 =
  \ ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors(->)Stream12 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors(->)Stream10
$fMinCtors(->)Stream10 =
  mapKeysMonotonic $fMinCtors(->)Stream11 $fMinCtors(->)Even8

$fMinCtors(->)Stream9
$fMinCtors(->)Stream9 =
  $fMinCtors(->)Even_w
    ($WZIdx)
    (VCons
       @~ <(':) (* -> *) Stream ('[] (* -> *))>
       ($fMinCtors(->)(,)3 `cast` ...)
       ($WVNil))

$fMinCtors(->)Stream8
$fMinCtors(->)Stream8 =
  ($fMinCtors(->)Stream9 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors(->)Stream7
$fMinCtors(->)Stream7 =
  Bin
    1 $fMinCtors(->)Stream8 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors(->)Stream6
$fMinCtors(->)Stream6 =
  $fMinCtors(->)Stream13
    ($fMinCtors(->)Stream10 `cast` ...)
    ($fMinCtors(->)Stream7 `cast` ...)

$fMinCtors(->)Stream5
$fMinCtors(->)Stream5 =
  map
    ($fEnumInt_$csucc `cast` ...) ($fMinCtors(->)Stream6 `cast` ...)

$fMinCtors(->)Stream4
$fMinCtors(->)Stream4 =
  VCons
    @~ <(':) (* -> *) Stream ('[] (* -> *))>
    ($fMinCtors(->)Stream5 `cast` ...)
    ($WVNil)

$fMinCtors(->)Stream3
$fMinCtors(->)Stream3 =
  $wsolve_sibling_set'
    ($fMinCtors(->)Stream17 `cast` ...)
    ($fMinCtors(->)Stream14 `cast` ...)
    ($fMinCtors(->)Stream4 `cast` ...)

$fMinCtors(->)Stream2
$fMinCtors(->)Stream2 =
  cvAt1 (($WZIdx) `cast` ...) $fMinCtors(->)Stream3

$fMinCtors(->)Stream1
$fMinCtors(->)Stream1 = \ _ _ -> $fMinCtors(->)Stream2

gen_minCtors_$sgen_minCtors9
gen_minCtors_$sgen_minCtors9 = \ _ -> $fMinCtors(->)Stream2

$fMinCtors(->)Y4
$fMinCtors(->)Y4 =
  plug0'
    ($fMinCtors(->)Y5 `cast` ...) ($fMinCtors(->)(,)2 `cast` ...)

$fMinCtors(->)Y3
$fMinCtors(->)Y3 =
  plug0' ($fMinCtors(->)Y5 `cast` ...) $fMinCtors(->)Y4

$wa7
$wa7 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors(->)Y3 `cast` ...)

$fMinCtors(->)Y2
$fMinCtors(->)Y2 = \ _ -> $wa7

$fMinCtors(->)T31
$fMinCtors(->)T31 = addSiblingInTs $fMinCtors(->)T_$dOrd2

$fMinCtors(->)T30
$fMinCtors(->)T30 = plug10 $fMinCtors(->)T_$dOrd2

$fMinCtors(->)T29
$fMinCtors(->)T29 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors(->)(,,)3 `cast` ...)

$fMinCtors(->)T28
$fMinCtors(->)T28 = plug0 $fMinCtors(->)T_$dOrd2

$fMinCtors(->)T10
$fMinCtors(->)T10 =
  \ ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors(->)T11 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors(->)T8
$fMinCtors(->)T8 =
  mapKeysMonotonic $fMinCtors(->)T10 $fMinCtors(->)T9

$wa4
$wa4 =
  \ _ ->
    map
      ($fEnumInt_$csucc `cast` ...)
      (($fMinCtors(->)T31
          ($fMinCtors(->)T30
             ($fMinCtors(->)T29 `cast` ...)
             ((Bin
                 1
                 (($fMinCtors(->)Even_w
                     ($WZIdx)
                     (VCons
                        @~ <(':) (* -> *) T ('[] (* -> *))>
                        ($fMinCtors(->)(,)3 `cast` ...)
                        ($WVNil)))
                  `cast` ...,
                  $fMinCtors(->)(,)3,
                  $fMinCtors(->)(,)3)
                 ($fMinCtors(->)(,)3 `cast` ...)
                 (Tip)
                 (Tip))
              `cast` ...)
             ($fMinCtors(->)T28
                $fMinCtors(->)T12
                ((Bin
                    1
                    (($fMinCtors(->)Even_w
                        ($WZIdx)
                        (VCons
                           @~ <(':) (* -> *) T ('[] (* -> *))>
                           ($fMinCtors(->)(,)3 `cast` ...)
                           ($WVNil)))
                     `cast` ...,
                     $fMinCtors(->)(,)3,
                     $fMinCtors(->)(,)3)
                    ($fMinCtors(->)(,)3 `cast` ...)
                    (Tip)
                    (Tip))
                 `cast` ...)))
          ($fMinCtors(->)T8 `cast` ...))
       `cast` ...)

$fMinCtors(->)T7
$fMinCtors(->)T7 = \ _ w1_s1dBD -> $wa4 w1_s1dBD

$fMinCtors(->)T6
$fMinCtors(->)T6 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors(->)T_$dOrd2
    ($fMinCtors(->)T32 `cast` ...)
    ($fMinCtors(->)T7 `cast` ...)

$fMinCtors(->)T38
$fMinCtors(->)T38 =
  \ ds_X8BV ds1_X8BX ->
    case ds_X8BV `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv _ ->
    case ds1_X8BX `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx _ ->
    $fMinCtors(->)Even31 (a_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    }
    }

$fMinCtors(->)T5
$fMinCtors(->)T5 =
  $fMinCtors(->)T6 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors(->)T4
$fMinCtors(->)T4 =
  VCons
    @~ <(':) (* -> *) T ('[] (* -> *))>
    ($fMinCtors(->)T5 `cast` ...)
    ($WVNil)

$fMinCtors(->)T3
$fMinCtors(->)T3 =
  $wsolve_sibling_set'
    ($fMinCtors(->)T38 `cast` ...)
    ($fMinCtors(->)T35 `cast` ...)
    ($fMinCtors(->)T4 `cast` ...)

$fMinCtors(->)T2
$fMinCtors(->)T2 = cvAt1 (($WZIdx) `cast` ...) $fMinCtors(->)T3

$fMinCtors(->)T1
$fMinCtors(->)T1 = \ _ _ -> $fMinCtors(->)T2

gen_minCtors_$sgen_minCtors10
gen_minCtors_$sgen_minCtors10 = \ _ -> $fMinCtors(->)T2

gen_minCtors5
gen_minCtors5 = \ _ -> $wa7

gen_minCtors_$sgen_minCtors12
gen_minCtors_$sgen_minCtors12 = gen_minCtors5 `cast` ...

gen_minCtors
gen_minCtors =
  \ @ k_t84 @ t_t85 $dMinCtorsWorker_a17sG p_X17JY ->
    ($dMinCtorsWorker_a17sG `cast` ...) p_X17JY (Proxy)

$fMinCtors(->)X1
$fMinCtors(->)X1 = \ _ -> $fMinCtors(->)Y5

$fMinCtors(->)X_$cminCtors
$fMinCtors(->)X_$cminCtors = $fMinCtors(->)X1 `cast` ...

$fMinCtors(->)X
$fMinCtors(->)X = $fMinCtors(->)X1 `cast` ...

lvl17_r1eZb
lvl17_r1eZb =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors(->)(,,)3 `cast` ...)

$fMinCtors(->)(,)6
$fMinCtors(->)(,)6 = \ _ -> lvl17_r1eZb

$fMinCtors(->)(,)0_$cminCtors
$fMinCtors(->)(,)0_$cminCtors = $fMinCtors(->)(,)6 `cast` ...

$fMinCtors(->)(,)0
$fMinCtors(->)(,)0 = $fMinCtors(->)(,)6 `cast` ...

$fMinCtors(->)[]_$cminCtors
$fMinCtors(->)[]_$cminCtors = gen_minCtors_$sgen_minCtors15

$fMinCtors(->)[]
$fMinCtors(->)[] = $fMinCtors(->)[]_$cminCtors `cast` ...

$gdmminCtors
$gdmminCtors =
  \ @ k_a17qi @ t_a17nO _ eta_B2 eta1_XAG ->
    (eta_B2 `cast` ...) eta1_XAG (Proxy)

$fDC1OCons__$crejoin1
$fDC1OCons__$crejoin1 =
  \ @ p0_t2mo ds_d1aRr ->
    case ds_d1aRr of _ { OCons_ x0_a18cq x1_a18cr ->
    (OCons x0_a18cq x1_a18cr) `cast` ...
    }

$fDT1Odd_$cdisband1
$fDT1Odd_$cdisband1 =
  \ @ p0_t2lp @ p1_t2lq ds_d1aQu ->
    case ds_d1aQu of _ { OCons x0_a18cj x1_a18ck ->
    (OCons_ x0_a18cj x1_a18ck) `cast` ...
    }

$fDC0OCons__$crejoin0
$fDC0OCons__$crejoin0 =
  \ @ a0_a1879 _ _ _ ds_d1aQh ->
    case ds_d1aQh of _ { OCons_ x0_a18ch x1_a18ci ->
    (OCons x0_a18ch x1_a18ci) `cast` ...
    }

lvl18_r1eZc
lvl18_r1eZc =
  \ @ a0_a1879 ds_d1aQh ->
    case ds_d1aQh of _ { OCons_ x0_a18ch x1_a18ci ->
    (OCons x0_a18ch x1_a18ci) `cast` ...
    }

$fDC0OCons_
$fDC0OCons_ =
  \ @ a0_a1879 $dGeneric0_a18hM $dDT0_a18hN _ ->
    D:DC0 $dGeneric0_a18hM $dDT0_a18hN (lvl18_r1eZc)

$fGeneric0OCons__$cobj0
$fGeneric0OCons__$cobj0 =
  \ @ a0_a1879 _ @ p1_t2l2 @ p0_t2l3 ds_d1aPR ->
    case ds_d1aPR `cast` ... of _ { :*: x0_a18cf x1_a18cg ->
    OCons_ (x0_a18cf `cast` ...) (x1_a18cg `cast` ...)
    }

$fGeneric0OCons__$crep0
$fGeneric0OCons__$crep0 =
  \ @ a0_a1879 _ @ p1_t2kK @ p0_t2kL ds_d1aPv ->
    case ds_d1aPv of _ { OCons_ x0_a18cd x1_a18ce ->
    (:*: (x0_a18cd `cast` ...) (x1_a18ce `cast` ...)) `cast` ...
    }

lvl19_r1eZd
lvl19_r1eZd =
  \ @ a0_a1879 @ p1_t2kK @ p0_t2kL ds_d1aPv ->
    case ds_d1aPv of _ { OCons_ x0_a18cd x1_a18ce ->
    (:*: (x0_a18cd `cast` ...) (x1_a18ce `cast` ...)) `cast` ...
    }

lvl20_r1eZe
lvl20_r1eZe =
  \ @ a0_a1879 @ p1_t2l2 @ p0_t2l3 ds_d1aPR ->
    case ds_d1aPR `cast` ... of _ { :*: x0_a18cf x1_a18cg ->
    OCons_ (x0_a18cf `cast` ...) (x1_a18cg `cast` ...)
    }

lvl21_r1eZf
lvl21_r1eZf =
  \ @ a0_a1879 -> D:Generic0 (lvl19_r1eZd) (lvl20_r1eZe)

$fGeneric0OCons_
$fGeneric0OCons_ = \ @ a0_a1879 _ -> lvl21_r1eZf

$fDT0Odd_$cdisband0
$fDT0Odd_$cdisband0 =
  \ @ a0_a1879 _ _ @ p1_t2kE @ p0_t2kF ds_d1aPi ->
    case ds_d1aPi of _ { OCons x0_a18cb x1_a18cc ->
    (OCons_ x0_a18cb x1_a18cc) `cast` ...
    }

lvl22_r1eZg
lvl22_r1eZg =
  \ @ a0_a1879 @ p1_t2kE @ p0_t2kF ds_d1aPi ->
    case ds_d1aPi of _ { OCons x0_a18cb x1_a18cc ->
    (OCons_ x0_a18cb x1_a18cc) `cast` ...
    }

$fDT0Odd
$fDT0Odd =
  \ @ a0_a1879 $dReband0_a18hm _ ->
    D:DT0 $dReband0_a18hm (lvl22_r1eZg)

$fDC1ENil__$crejoin1
$fDC1ENil__$crejoin1 =
  \ @ p0_t2d1 ds_d1aHW ->
    case ds_d1aHW of _ { ENil_ -> (ENil) `cast` ... }

$fGeneric1ENil__$cobj1
$fGeneric1ENil__$cobj1 = \ @ p1_t2cT @ p0_t2cU _ -> ENil_

$fGeneric1ENil__$crep1
$fGeneric1ENil__$crep1 =
  \ @ p0_t2cK @ p1_t2cL ds_d1aHm ->
    case ds_d1aHm of _ { ENil_ -> (U) `cast` ... }

$fGeneric1ENil_
$fGeneric1ENil_ =
  D:Generic1 $fGeneric1ENil__$crep1 $fGeneric1ENil__$cobj1

$fDC1ECons__$crejoin1
$fDC1ECons__$crejoin1 =
  \ @ p0_t2cI ds_d1aHg ->
    case ds_d1aHg of _ { ECons_ x0_a189j x1_a189k ->
    (ECons x0_a189j x1_a189k) `cast` ...
    }

$fDT1Even1
$fDT1Even1 = \ @ p0_t2br @ p1_t2bs -> L ((ENil_) `cast` ...)

$fDT1Even_$cdisband1
$fDT1Even_$cdisband1 =
  \ @ p0_t2br @ p1_t2bs ds_d1aG5 ->
    case ds_d1aG5 of _ {
      ENil -> ($fDT1Even1) `cast` ...;
      ECons x0_a189c x1_a189d ->
        (R ((ECons_ x0_a189c x1_a189d) `cast` ...)) `cast` ...
    }

$fDT1Even2
$fDT1Even2 =
  \ @ p1_t9B @ p0_t9C ds_debL ->
    case ds_debL of _ {
      L x_ae6A -> case x_ae6A of _ { __DEFAULT -> ENil };
      R x_ae6B ->
        case x_ae6B `cast` ... of _ { ECons_ x0_a189j x1_a189k ->
        ECons x0_a189j x1_a189k
        }
    }

$fDT1Odd1
$fDT1Odd1 =
  \ @ p1_t9P @ p0_t9Q eta_XCs ->
    case eta_XCs `cast` ... of _ { OCons_ x0_a18cq x1_a18cr ->
    OCons x0_a18cq x1_a18cr
    }

$fDT1Odd_$dReband1
$fDT1Odd_$dReband1 = $fDT1Odd1 `cast` ...

$fDT1Odd
$fDT1Odd = D:DT1 ($fDT1Odd1 `cast` ...) $fDT1Odd_$cdisband1

$fDT1Even_$dReband1
$fDT1Even_$dReband1 = $fDT1Even2 `cast` ...

$fDT1Even
$fDT1Even = D:DT1 ($fDT1Even2 `cast` ...) $fDT1Even_$cdisband1

$fDC1ENil_
$fDC1ENil_ =
  D:DC1 $fGeneric1ENil_ ($fDT1Even `cast` ...) $fDC1ENil__$crejoin1

$fGeneric1Branch_1
$fGeneric1Branch_1 = \ @ p0_t2lY tpl_XC5 -> tpl_XC5

$fGeneric1OCons_1
$fGeneric1OCons_1 = $fGeneric1Branch_1

$fGeneric1ECons_3
$fGeneric1ECons_3 = \ @ a_agq4 ds3_dgtB -> ds3_dgtB

lvl23_r1eZh
lvl23_r1eZh = \ @ b_agq5 ds3_dgtB -> ds3_dgtB

Rec {
$w$cinvmap
$w$cinvmap =
  \ @ a_agq4 @ b_agq5 w_s1dBV w1_s1dBX ->
    case w1_s1dBX of _ {
      ENil -> ENil;
      ECons x0_a189c x1_a189d ->
        ECons
          (w_s1dBV x0_a189c)
          (case x1_a189d of _ { OCons x2_a18cj x3_a18ck ->
           OCons
             (w_s1dBV x2_a18cj)
             ($w$cinvmap
                ((unPar2) `cast` ...)
                ($w$cinvmap
                   ((lvl23_r1eZh) `cast` ...)
                   ($w$cinvmap
                      (($fGeneric1Branch_1) `cast` ...)
                      ($w$cinvmap
                         ((unPar2) `cast` ...)
                         ($w$cinvmap
                            ((\ ds3_dgtB -> w_s1dBV (ds3_dgtB `cast` ...)) `cast` ...)
                            ($w$cinvmap
                               (($fGeneric1Branch_1) `cast` ...)
                               ($w$cinvmap
                                  ((unPar2) `cast` ...)
                                  ($w$cinvmap
                                     (($fGeneric1ECons_3) `cast` ...)
                                     ($w$cinvmap (($fGeneric1Branch_1) `cast` ...) x3_a18ck)))))))))
           })
    }
end Rec }

lvl24_r1eZi
lvl24_r1eZi = \ @ p1_t2ch @ p0_t2ci ds3_dgtB -> ds3_dgtB

$fGeneric1ECons_1
$fGeneric1ECons_1 =
  \ @ p1_t2ch @ p0_t2ci w_s1dBL ->
    case w_s1dBL of _ { OCons ww_s1dBN ww1_s1dBO ->
    OCons
      (ww_s1dBN `cast` ...)
      ($w$cinvmap
         ((unPar2) `cast` ...)
         ($w$cinvmap
            ((lvl24_r1eZi) `cast` ...)
            ($w$cinvmap (($fGeneric1Branch_1) `cast` ...) ww1_s1dBO)))
    }

$fGeneric1OCons__$cinvmap
$fGeneric1OCons__$cinvmap =
  \ @ a_agq4 @ b_agq5 w_s1dBV _ w2_s1dBX ->
    $w$cinvmap w_s1dBV w2_s1dBX

$fInvariantEven
$fInvariantEven = $fGeneric1OCons__$cinvmap `cast` ...

$fGeneric1OCons__$cobj1
$fGeneric1OCons__$cobj1 =
  \ @ p1_t2lX @ p0_t2lY ds_d1aR1 ->
    case ds_d1aR1 `cast` ... of _ { :*: x0_a18cn x1_a18co ->
    OCons_
      (x0_a18cn `cast` ...)
      ($w$cinvmap ((unPar2) `cast` ...) (x1_a18co `cast` ...))
    }

$fGeneric1OCons__$crep1
$fGeneric1OCons__$crep1 =
  \ @ p0_t2lv @ p1_t2lw ds_d1aQE ->
    case ds_d1aQE of _ { OCons_ x0_a18cl x1_a18cm ->
    (:*:
       (x0_a18cl `cast` ...)
       (($w$cinvmap (($fGeneric1Branch_1) `cast` ...) x1_a18cm)
        `cast` ...))
    `cast` ...
    }

$fGeneric1OCons_
$fGeneric1OCons_ =
  D:Generic1 $fGeneric1OCons__$crep1 $fGeneric1OCons__$cobj1

$fDC1OCons_
$fDC1OCons_ =
  D:DC1 $fGeneric1OCons_ ($fDT1Odd `cast` ...) $fDC1OCons__$crejoin1

$fGeneric1ECons__$cobj1
$fGeneric1ECons__$cobj1 =
  \ @ p1_t2ch @ p0_t2ci ds_d1aGQ ->
    case ds_d1aGQ `cast` ... of _ { :*: x0_a189g x1_a189h ->
    ECons_
      (x0_a189g `cast` ...) ($fGeneric1ECons_1 (x1_a189h `cast` ...))
    }

$fGeneric1ECons_2
$fGeneric1ECons_2 =
  \ @ p0_abpL @ p1_abpM ww_s1dC2 ww1_s1dC3 ->
    :*:
      (ww_s1dC2 `cast` ...)
      (case ww1_s1dC3 of _ { OCons x0_a18cj x1_a18ck ->
       (OCons
          (x0_a18cj `cast` ...)
          ($w$cinvmap
             ((unPar2) `cast` ...)
             ($w$cinvmap
                (($fGeneric1ECons_3) `cast` ...)
                ($w$cinvmap (($fGeneric1Branch_1) `cast` ...) x1_a18ck))))
       `cast` ...
       })

$fGeneric1ECons__$crep1
$fGeneric1ECons__$crep1 =
  \ @ p0_XbIX @ p1_XbIZ w_s1dC0 ->
    case w_s1dC0 of _ { ECons_ ww_X1dVi ww1_X1dVk ->
    ($fGeneric1ECons_2 ww_X1dVi ww1_X1dVk) `cast` ...
    }

$fGeneric1ECons_
$fGeneric1ECons_ =
  D:Generic1 $fGeneric1ECons__$crep1 $fGeneric1ECons__$cobj1

$fDC1ECons_
$fDC1ECons_ =
  D:DC1 $fGeneric1ECons_ ($fDT1Even `cast` ...) $fDC1ECons__$crejoin1

$fInvariantOdd_$cinvmap
$fInvariantOdd_$cinvmap =
  \ @ a_agq4 @ b_agq5 w_s1dC9 _ w2_s1dCb ->
    case w2_s1dCb of _ { OCons ww_s1dCd ww1_s1dCe ->
    OCons
      (w_s1dC9 ww_s1dCd)
      ($w$cinvmap
         ((unPar2) `cast` ...)
         ($w$cinvmap
            ((\ ds3_dgtB -> w_s1dC9 (ds3_dgtB `cast` ...)) `cast` ...)
            ($w$cinvmap (($fGeneric1Branch_1) `cast` ...) ww1_s1dCe)))
    }

$fInvariantOdd
$fInvariantOdd = $fInvariantOdd_$cinvmap `cast` ...

$fDC0ENil__$crejoin0
$fDC0ENil__$crejoin0 =
  \ @ a0_a187a _ _ _ ds_d1aFO ->
    case ds_d1aFO of _ { ENil_ -> (ENil) `cast` ... }

lvl25_r1eZj
lvl25_r1eZj =
  \ @ a0_a187a ds_d1aFO ->
    case ds_d1aFO of _ { ENil_ -> (ENil) `cast` ... }

$fDC0ENil_
$fDC0ENil_ =
  \ @ a0_a187a $dGeneric0_a18aw $dDT0_a18ax _ ->
    D:DC0 $dGeneric0_a18aw $dDT0_a18ax (lvl25_r1eZj)

$fGeneric0ENil__$cobj0
$fGeneric0ENil__$cobj0 =
  \ @ a0_a187a _ @ p1_t2bd @ p0_t2be _ -> ENil_

$fGeneric0ENil__$crep0
$fGeneric0ENil__$crep0 =
  \ @ a0_a187a _ @ p1_t2b4 @ p0_t2b5 ds_d1aFc ->
    case ds_d1aFc of _ { ENil_ -> (U) `cast` ... }

lvl26_r1eZk
lvl26_r1eZk =
  \ @ a0_a187a @ p1_t2b4 @ p0_t2b5 ds_d1aFc ->
    case ds_d1aFc of _ { ENil_ -> (U) `cast` ... }

lvl27_r1eZl
lvl27_r1eZl = \ @ a0_a187a @ p1_t2bd @ p0_t2be _ -> ENil_

lvl28_r1eZm
lvl28_r1eZm =
  \ @ a0_a187a -> D:Generic0 (lvl26_r1eZk) (lvl27_r1eZl)

$fGeneric0ENil_
$fGeneric0ENil_ = \ @ a0_a187a _ -> lvl28_r1eZm

$fDC0ECons__$crejoin0
$fDC0ECons__$crejoin0 =
  \ @ a0_a187a _ _ _ ds_d1aF1 ->
    case ds_d1aF1 of _ { ECons_ x0_a189a x1_a189b ->
    (ECons x0_a189a x1_a189b) `cast` ...
    }

lvl29_r1eZn
lvl29_r1eZn =
  \ @ a0_a187a ds_d1aF1 ->
    case ds_d1aF1 of _ { ECons_ x0_a189a x1_a189b ->
    (ECons x0_a189a x1_a189b) `cast` ...
    }

$fDC0ECons_
$fDC0ECons_ =
  \ @ a0_a187a $dGeneric0_a18a5 $dDT0_a18a6 _ ->
    D:DC0 $dGeneric0_a18a5 $dDT0_a18a6 (lvl29_r1eZn)

$fGeneric0ECons__$cobj0
$fGeneric0ECons__$cobj0 =
  \ @ a0_a187a _ @ p1_t2aM @ p0_t2aN ds_d1aEB ->
    case ds_d1aEB `cast` ... of _ { :*: x0_a1898 x1_a1899 ->
    ECons_ (x0_a1898 `cast` ...) (x1_a1899 `cast` ...)
    }

$fGeneric0ECons__$crep0
$fGeneric0ECons__$crep0 =
  \ @ a0_a187a _ @ p1_t2au @ p0_t2av ds_d1aEf ->
    case ds_d1aEf of _ { ECons_ x0_a1896 x1_a1897 ->
    (:*: (x0_a1896 `cast` ...) (x1_a1897 `cast` ...)) `cast` ...
    }

lvl30_r1eZo
lvl30_r1eZo =
  \ @ a0_a187a @ p1_t2au @ p0_t2av ds_d1aEf ->
    case ds_d1aEf of _ { ECons_ x0_a1896 x1_a1897 ->
    (:*: (x0_a1896 `cast` ...) (x1_a1897 `cast` ...)) `cast` ...
    }

lvl31_r1eZp
lvl31_r1eZp =
  \ @ a0_a187a @ p1_t2aM @ p0_t2aN ds_d1aEB ->
    case ds_d1aEB `cast` ... of _ { :*: x0_a1898 x1_a1899 ->
    ECons_ (x0_a1898 `cast` ...) (x1_a1899 `cast` ...)
    }

lvl32_r1eZq
lvl32_r1eZq =
  \ @ a0_a187a -> D:Generic0 (lvl30_r1eZo) (lvl31_r1eZp)

$fGeneric0ECons_
$fGeneric0ECons_ = \ @ a0_a187a _ -> lvl32_r1eZq

$fDT0Even1
$fDT0Even1 =
  \ @ a0_a187a @ p1_t2a6 @ p0_t2a7 -> L ((ENil_) `cast` ...)

$fDT0Even_$cdisband0
$fDT0Even_$cdisband0 =
  \ @ a0_a187a _ _ @ p1_t2a6 @ p0_t2a7 ds_d1aDL ->
    case ds_d1aDL of _ {
      ENil -> ($fDT0Even1) `cast` ...;
      ECons x0_a1894 x1_a1895 ->
        (R ((ECons_ x0_a1894 x1_a1895) `cast` ...)) `cast` ...
    }

lvl33_r1eZr
lvl33_r1eZr =
  \ @ a0_a187a @ p1_t2a6 @ p0_t2a7 ds_d1aDL ->
    case ds_d1aDL of _ {
      ENil -> ($fDT0Even1) `cast` ...;
      ECons x0_a1894 x1_a1895 ->
        (R ((ECons_ x0_a1894 x1_a1895) `cast` ...)) `cast` ...
    }

$fDT0Even
$fDT0Even =
  \ @ a0_a187a $dReband0_a189E _ ->
    D:DT0 $dReband0_a189E (lvl33_r1eZr)

$fDC1SCons__$crejoin1
$fDC1SCons__$crejoin1 =
  \ @ p0_t22V ds_d1aDE ->
    case ds_d1aDE of _ { SCons_ x0_a187q x1_a187r ->
    (SCons x0_a187q x1_a187r) `cast` ...
    }

$fDT1Stream_$cdisband1
$fDT1Stream_$cdisband1 =
  \ @ p0_t21W @ p1_t21X ds_d1aCH ->
    case ds_d1aCH of _ { SCons x0_a187j x1_a187k ->
    (SCons_ x0_a187j x1_a187k) `cast` ...
    }

$fDT1Stream1
$fDT1Stream1 =
  \ @ p1_XPd @ p0_XPf eta_XFr ->
    case eta_XFr `cast` ... of _ { SCons_ x0_a187q x1_a187r ->
    SCons x0_a187q x1_a187r
    }

$fDT1Stream_$dReband1
$fDT1Stream_$dReband1 = $fDT1Stream1 `cast` ...

$fDT1Stream
$fDT1Stream =
  D:DT1 ($fDT1Stream1 `cast` ...) $fDT1Stream_$cdisband1

$fGeneric1SCons_1
$fGeneric1SCons_1 = $fGeneric1Branch_1

$fGeneric1SCons_2
$fGeneric1SCons_2 = $fGeneric1Branch_1

Rec {
$w$cinvmap1
$w$cinvmap1 =
  \ @ a_agq4 @ b_agq5 w_s1dCl w1_s1dCm w2_s1dCn ->
    case w2_s1dCn of _ { SCons x0_a187j x1_a187k ->
    (# w_s1dCl x0_a187j,
       case $w$cinvmap1
              (($fGeneric1Branch_1) `cast` ...) ((unPar2) `cast` ...) x1_a187k
       of _ { (# ww1_s1dEy, ww2_s1dEz #) ->
       case $w$cinvmap1
              ((\ ds3_dgtB -> w_s1dCl (ds3_dgtB `cast` ...)) `cast` ...)
              ((\ ds3_dgtB -> w1_s1dCm (ds3_dgtB `cast` ...)) `cast` ...)
              (SCons ww1_s1dEy ww2_s1dEz)
       of _ { (# ww4_X1dYs, ww5_X1dYu #) ->
       case $w$cinvmap1
              ((unPar2) `cast` ...)
              (($fGeneric1Branch_1) `cast` ...)
              (SCons ww4_X1dYs ww5_X1dYu)
       of _ { (# ww7_X1dYw, ww8_X1dYy #) ->
       SCons ww7_X1dYw ww8_X1dYy
       }
       }
       } #)
    }
end Rec }

$fGeneric1SCons__$cinvmap
$fGeneric1SCons__$cinvmap =
  \ @ a_agq4 @ b_agq5 w_s1dCl w1_s1dCm w2_s1dCn ->
    case $w$cinvmap1 w_s1dCl w1_s1dCm w2_s1dCn
    of _ { (# ww1_s1dEy, ww2_s1dEz #) ->
    SCons ww1_s1dEy ww2_s1dEz
    }

$fInvariantStream
$fInvariantStream = $fGeneric1SCons__$cinvmap `cast` ...

$fGeneric1SCons__$cobj1
$fGeneric1SCons__$cobj1 =
  \ @ p1_t22u @ p0_t22v ds_d1aDe ->
    case ds_d1aDe `cast` ... of _ { :*: x0_a187n x1_a187o ->
    SCons_
      (x0_a187n `cast` ...)
      (case $w$cinvmap1
              ((unPar2) `cast` ...)
              (($fGeneric1Branch_1) `cast` ...)
              (x1_a187o `cast` ...)
       of _ { (# ww1_s1dEy, ww2_s1dEz #) ->
       SCons ww1_s1dEy ww2_s1dEz
       })
    }

$fGeneric1SCons__$crep1
$fGeneric1SCons__$crep1 =
  \ @ p0_t222 @ p1_t223 ds_d1aCR ->
    case ds_d1aCR of _ { SCons_ x0_a187l x1_a187m ->
    (:*:
       (x0_a187l `cast` ...)
       (case $w$cinvmap1
               (($fGeneric1Branch_1) `cast` ...) ((unPar2) `cast` ...) x1_a187m
        of _ { (# ww1_s1dEy, ww2_s1dEz #) ->
        (SCons ww1_s1dEy ww2_s1dEz) `cast` ...
        }))
    `cast` ...
    }

$fGeneric1SCons_
$fGeneric1SCons_ =
  D:Generic1 $fGeneric1SCons__$crep1 $fGeneric1SCons__$cobj1

$fDC1SCons_
$fDC1SCons_ =
  D:DC1
    $fGeneric1SCons_ ($fDT1Stream `cast` ...) $fDC1SCons__$crejoin1

$fDC0SCons__$crejoin0
$fDC0SCons__$crejoin0 =
  \ @ a0_a181C _ _ _ ds_d1aCu ->
    case ds_d1aCu of _ { SCons_ x0_a187h x1_a187i ->
    (SCons x0_a187h x1_a187i) `cast` ...
    }

lvl34_r1eZs
lvl34_r1eZs =
  \ @ a0_a181C ds_d1aCu ->
    case ds_d1aCu of _ { SCons_ x0_a187h x1_a187i ->
    (SCons x0_a187h x1_a187i) `cast` ...
    }

$fDC0SCons_
$fDC0SCons_ =
  \ @ a0_a181C $dGeneric0_a1885 $dDT0_a1886 _ ->
    D:DC0 $dGeneric0_a1885 $dDT0_a1886 (lvl34_r1eZs)

$fGeneric0SCons__$cobj0
$fGeneric0SCons__$cobj0 =
  \ @ a0_a181C _ @ p1_t21z @ p0_t21A ds_d1aC4 ->
    case ds_d1aC4 `cast` ... of _ { :*: x0_a187f x1_a187g ->
    SCons_ (x0_a187f `cast` ...) (x1_a187g `cast` ...)
    }

$fGeneric0SCons__$crep0
$fGeneric0SCons__$crep0 =
  \ @ a0_a181C _ @ p1_t21h @ p0_t21i ds_d1aBI ->
    case ds_d1aBI of _ { SCons_ x0_a187d x1_a187e ->
    (:*: (x0_a187d `cast` ...) (x1_a187e `cast` ...)) `cast` ...
    }

lvl35_r1eZt
lvl35_r1eZt =
  \ @ a0_a181C @ p1_t21h @ p0_t21i ds_d1aBI ->
    case ds_d1aBI of _ { SCons_ x0_a187d x1_a187e ->
    (:*: (x0_a187d `cast` ...) (x1_a187e `cast` ...)) `cast` ...
    }

lvl36_r1eZu
lvl36_r1eZu =
  \ @ a0_a181C @ p1_t21z @ p0_t21A ds_d1aC4 ->
    case ds_d1aC4 `cast` ... of _ { :*: x0_a187f x1_a187g ->
    SCons_ (x0_a187f `cast` ...) (x1_a187g `cast` ...)
    }

lvl37_r1eZv
lvl37_r1eZv =
  \ @ a0_a181C -> D:Generic0 (lvl35_r1eZt) (lvl36_r1eZu)

$fGeneric0SCons_
$fGeneric0SCons_ = \ @ a0_a181C _ -> lvl37_r1eZv

$fDT0Stream_$cdisband0
$fDT0Stream_$cdisband0 =
  \ @ a0_a181C _ _ @ p1_t21b @ p0_t21c ds_d1aBv ->
    case ds_d1aBv of _ { SCons x0_a187b x1_a187c ->
    (SCons_ x0_a187b x1_a187c) `cast` ...
    }

lvl38_r1eZw
lvl38_r1eZw =
  \ @ a0_a181C @ p1_t21b @ p0_t21c ds_d1aBv ->
    case ds_d1aBv of _ { SCons x0_a187b x1_a187c ->
    (SCons_ x0_a187b x1_a187c) `cast` ...
    }

$fDT0Stream
$fDT0Stream =
  \ @ a0_a181C $dReband0_a187F _ ->
    D:DT0 $dReband0_a187F (lvl38_r1eZw)

$fDC2Left__$crejoin2
$fDC2Left__$crejoin2 =
  \ @ p1_t1X7 @ p0_t1X8 ds_d1aBn ->
    case ds_d1aBn of _ { Left_ x0_a182g -> (Left x0_a182g) `cast` ... }

$fGeneric2Left__$cobj2
$fGeneric2Left__$cobj2 = Left_ `cast` ...

$fGeneric2Left__$crep2
$fGeneric2Left__$crep2 =
  \ @ p1_t1WN @ p0_t1WO ds_d1aAP ->
    case ds_d1aAP of _ { Left_ x0_a182e -> x0_a182e `cast` ... }

$fGeneric2Left_
$fGeneric2Left_ =
  D:Generic2 $fGeneric2Left__$crep2 (Left_ `cast` ...)

$fDC2Right__$crejoin2
$fDC2Right__$crejoin2 =
  \ @ p1_t1WJ @ p0_t1WK ds_d1aAH ->
    case ds_d1aAH of _ { Right_ x0_a182d ->
    (Right x0_a182d) `cast` ...
    }

$fGeneric2Right__$cobj2
$fGeneric2Right__$cobj2 = Right_ `cast` ...

$fGeneric2Right__$crep2
$fGeneric2Right__$crep2 =
  \ @ p1_t1Wp @ p0_t1Wq ds_d1aA9 ->
    case ds_d1aA9 of _ { Right_ x0_a182b -> x0_a182b `cast` ... }

$fGeneric2Right_
$fGeneric2Right_ =
  D:Generic2 $fGeneric2Right__$crep2 (Right_ `cast` ...)

$fDT2Either_$cdisband2
$fDT2Either_$cdisband2 =
  \ @ p1_t1VZ @ p0_t1W0 ds_d1azL ->
    case ds_d1azL of _ {
      Left x0_a1829 -> (L ((Left_ x0_a1829) `cast` ...)) `cast` ...;
      Right x0_a182a -> (R ((Right_ x0_a182a) `cast` ...)) `cast` ...
    }

$fDT2Either1
$fDT2Either1 =
  \ @ p1_t9i @ p0_t9j ds_debA ->
    case ds_debA of _ {
      L x_ae6s ->
        case x_ae6s `cast` ... of _ { Left_ x0_a182g -> Left x0_a182g };
      R x_ae6t ->
        case x_ae6t `cast` ... of _ { Right_ x0_a182d -> Right x0_a182d }
    }

$fDT2Either_$dReband2
$fDT2Either_$dReband2 = $fDT2Either1 `cast` ...

$fDT2Either
$fDT2Either =
  D:DT2 ($fDT2Either1 `cast` ...) $fDT2Either_$cdisband2

$fDC2Right_
$fDC2Right_ =
  D:DC2
    $fGeneric2Right_ ($fDT2Either `cast` ...) $fDC2Right__$crejoin2

$fDC2Left_
$fDC2Left_ =
  D:DC2 $fGeneric2Left_ ($fDT2Either `cast` ...) $fDC2Left__$crejoin2

$fDC1Left__$crejoin1
$fDC1Left__$crejoin1 =
  \ @ a0_a270 _ _ _ @ p0_t1VW ds_d1azx ->
    case ds_d1azx of _ { Left_ x0_a1828 -> (Left x0_a1828) `cast` ... }

lvl39_r1eZx
lvl39_r1eZx =
  \ @ a0_a270 @ p0_t1VW ds_d1azx ->
    case ds_d1azx of _ { Left_ x0_a1828 -> (Left x0_a1828) `cast` ... }

$fDC1Left_
$fDC1Left_ =
  \ @ a0_a270 $dGeneric1_a1860 $dDT1_a1861 _ ->
    D:DC1 $dGeneric1_a1860 $dDT1_a1861 (lvl39_r1eZx)

$fGeneric1Left__$cobj1
$fGeneric1Left__$cobj1 =
  \ @ a0_a270 _ @ p1_t1VK @ p0_t1VL ds_d1aze ->
    Left_ (ds_d1aze `cast` ...)

$fGeneric1Left__$crep1
$fGeneric1Left__$crep1 =
  \ @ a0_a270 _ @ p0_t1VA @ p1_t1VB ds_d1ayX ->
    case ds_d1ayX of _ { Left_ x0_a1826 -> x0_a1826 `cast` ... }

lvl40_r1eZy
lvl40_r1eZy =
  \ @ a0_a270 @ p0_t1VA @ p1_t1VB ds_d1ayX ->
    case ds_d1ayX of _ { Left_ x0_a1826 -> x0_a1826 `cast` ... }

lvl41_r1eZz
lvl41_r1eZz =
  \ @ a0_a270 @ p1_t1VK @ p0_t1VL ds_d1aze ->
    Left_ (ds_d1aze `cast` ...)

lvl42_r1eZA
lvl42_r1eZA = \ @ a0_a270 -> D:Generic1 (lvl40_r1eZy) (lvl41_r1eZz)

$fGeneric1Left_
$fGeneric1Left_ = \ @ a0_a270 _ -> lvl42_r1eZA

$fDC1Right__$crejoin1
$fDC1Right__$crejoin1 =
  \ @ a0_a270 _ _ _ @ p0_t1Vx ds_d1ayI ->
    case ds_d1ayI of _ { Right_ x0_a1825 ->
    (Right x0_a1825) `cast` ...
    }

lvl43_r1eZB
lvl43_r1eZB =
  \ @ a0_a270 @ p0_t1Vx ds_d1ayI ->
    case ds_d1ayI of _ { Right_ x0_a1825 ->
    (Right x0_a1825) `cast` ...
    }

$fDC1Right_
$fDC1Right_ =
  \ @ a0_a270 $dGeneric1_a185y $dDT1_a185z _ ->
    D:DC1 $dGeneric1_a185y $dDT1_a185z (lvl43_r1eZB)

$fGeneric1Right__$cobj1
$fGeneric1Right__$cobj1 =
  \ @ a0_a270 _ @ p1_t1Vm @ p0_t1Vn ds_d1ayp ->
    Right_ (ds_d1ayp `cast` ...)

$fGeneric1Right__$crep1
$fGeneric1Right__$crep1 =
  \ @ a0_a270 _ @ p0_t1Vd @ p1_t1Ve ds_d1ay8 ->
    case ds_d1ay8 of _ { Right_ x0_a1823 -> x0_a1823 `cast` ... }

lvl44_r1eZC
lvl44_r1eZC =
  \ @ a0_a270 @ p0_t1Vd @ p1_t1Ve ds_d1ay8 ->
    case ds_d1ay8 of _ { Right_ x0_a1823 -> x0_a1823 `cast` ... }

lvl45_r1eZD
lvl45_r1eZD =
  \ @ a0_a270 @ p1_t1Vm @ p0_t1Vn ds_d1ayp ->
    Right_ (ds_d1ayp `cast` ...)

lvl46_r1eZE
lvl46_r1eZE = \ @ a0_a270 -> D:Generic1 (lvl44_r1eZC) (lvl45_r1eZD)

$fGeneric1Right_
$fGeneric1Right_ = \ @ a0_a270 _ -> lvl46_r1eZE

$fDT1Either_$cdisband1
$fDT1Either_$cdisband1 =
  \ @ a0_a270 _ _ @ p0_t1UN @ p1_t1UO ds_d1axE ->
    case ds_d1axE of _ {
      Left x0_a1821 -> (L ((Left_ x0_a1821) `cast` ...)) `cast` ...;
      Right x0_a1822 -> (R ((Right_ x0_a1822) `cast` ...)) `cast` ...
    }

$fDT1Either
$fDT1Either =
  \ @ a0_a270 $dReband1_a1857 cobox_a1858 ->
    D:DT1
      $dReband1_a1857
      ($fDT1Either_$cdisband1 $dReband1_a1857 cobox_a1858)

$fDC0Left__$crejoin0
$fDC0Left__$crejoin0 =
  \ @ a0_a270 @ b0_a271 _ _ _ _ ds_d1axo ->
    case ds_d1axo of _ { Left_ x0_a1820 -> (Left x0_a1820) `cast` ... }

lvl47_r1eZF
lvl47_r1eZF =
  \ @ a0_a270 @ b0_a271 ds_d1axo ->
    case ds_d1axo of _ { Left_ x0_a1820 -> (Left x0_a1820) `cast` ... }

$fDC0Left_
$fDC0Left_ =
  \ @ a0_a270 @ b0_a271 $dGeneric0_a184U $dDT0_a184V _ _ ->
    D:DC0 $dGeneric0_a184U $dDT0_a184V (lvl47_r1eZF)

$fGeneric0Left__$cobj0
$fGeneric0Left__$cobj0 =
  \ @ a0_a270 @ b0_a271 _ _ @ p1_t1Uz @ p0_t1UA ds_d1ax4 ->
    Left_ (ds_d1ax4 `cast` ...)

$fGeneric0Left__$crep0
$fGeneric0Left__$crep0 =
  \ @ a0_a270 @ b0_a271 _ _ @ p1_t1Up @ p0_t1Uq ds_d1awM ->
    case ds_d1awM of _ { Left_ x0_a181Y -> x0_a181Y `cast` ... }

lvl48_r1eZG
lvl48_r1eZG =
  \ @ a0_a270 @ b0_a271 @ p1_t1Up @ p0_t1Uq ds_d1awM ->
    case ds_d1awM of _ { Left_ x0_a181Y -> x0_a181Y `cast` ... }

lvl49_r1eZH
lvl49_r1eZH =
  \ @ a0_a270 @ b0_a271 @ p1_t1Uz @ p0_t1UA ds_d1ax4 ->
    Left_ (ds_d1ax4 `cast` ...)

lvl50_r1eZI
lvl50_r1eZI =
  \ @ a0_a270 @ b0_a271 -> D:Generic0 (lvl48_r1eZG) (lvl49_r1eZH)

$fGeneric0Left_
$fGeneric0Left_ = \ @ a0_a270 @ b0_a271 _ _ -> lvl50_r1eZI

$fDC0Right__$crejoin0
$fDC0Right__$crejoin0 =
  \ @ a0_a270 @ b0_a271 _ _ _ _ ds_d1awx ->
    case ds_d1awx of _ { Right_ x0_a181X ->
    (Right x0_a181X) `cast` ...
    }

lvl51_r1eZJ
lvl51_r1eZJ =
  \ @ a0_a270 @ b0_a271 ds_d1awx ->
    case ds_d1awx of _ { Right_ x0_a181X ->
    (Right x0_a181X) `cast` ...
    }

$fDC0Right_
$fDC0Right_ =
  \ @ a0_a270 @ b0_a271 $dGeneric0_a184r $dDT0_a184s _ _ ->
    D:DC0 $dGeneric0_a184r $dDT0_a184s (lvl51_r1eZJ)

$fGeneric0Right__$cobj0
$fGeneric0Right__$cobj0 =
  \ @ a0_a270 @ b0_a271 _ _ @ p1_t1Ub @ p0_t1Uc ds_d1awd ->
    Right_ (ds_d1awd `cast` ...)

$fGeneric0Right__$crep0
$fGeneric0Right__$crep0 =
  \ @ a0_a270 @ b0_a271 _ _ @ p1_t1U1 @ p0_t1U2 ds_d1avV ->
    case ds_d1avV of _ { Right_ x0_a181V -> x0_a181V `cast` ... }

lvl52_r1eZK
lvl52_r1eZK =
  \ @ a0_a270 @ b0_a271 @ p1_t1U1 @ p0_t1U2 ds_d1avV ->
    case ds_d1avV of _ { Right_ x0_a181V -> x0_a181V `cast` ... }

lvl53_r1eZL
lvl53_r1eZL =
  \ @ a0_a270 @ b0_a271 @ p1_t1Ub @ p0_t1Uc ds_d1awd ->
    Right_ (ds_d1awd `cast` ...)

lvl54_r1eZM
lvl54_r1eZM =
  \ @ a0_a270 @ b0_a271 -> D:Generic0 (lvl52_r1eZK) (lvl53_r1eZL)

$fGeneric0Right_
$fGeneric0Right_ = \ @ a0_a270 @ b0_a271 _ _ -> lvl54_r1eZM

$fDT0Either_$cdisband0
$fDT0Either_$cdisband0 =
  \ @ a0_a270 @ b0_a271 _ _ _ @ p1_t1TB @ p0_t1TC ds_d1avl ->
    case ds_d1avl of _ {
      Left x0_a181T -> (L ((Left_ x0_a181T) `cast` ...)) `cast` ...;
      Right x0_a181U -> (R ((Right_ x0_a181U) `cast` ...)) `cast` ...
    }

$fDT0Either
$fDT0Either =
  \ @ a0_a270 @ b0_a271 $dReband0_a183Y cobox_a183Z cobox1_a1840 ->
    D:DT0
      $dReband0_a183Y
      ($fDT0Either_$cdisband0 $dReband0_a183Y cobox_a183Z cobox1_a1840)

$fGeneric0Nil__$cobj0
$fGeneric0Nil__$cobj0 = \ @ a_a181R @ p1_t1Ty @ p0_t1Tz _ -> Nil_

$fGeneric0Nil_1
$fGeneric0Nil_1 = \ @ a_a181R @ p1_t1Tp @ p0_t1Tq _ -> U

$fGeneric0Nil__$crep0
$fGeneric0Nil__$crep0 = $fGeneric0Nil_1 `cast` ...

$fGeneric0Nil_
$fGeneric0Nil_ =
  \ @ a_X18iP ->
    D:Generic0 (($fGeneric0Nil_1) `cast` ...) ($fGeneric0Nil__$cobj0)

$fGeneric1Nil__$cobj1
$fGeneric1Nil__$cobj1 = \ @ p1_t1Tm @ p0_t1Tn _ -> Nil_

$fGeneric1Nil_1
$fGeneric1Nil_1 = \ @ p0_t1Td @ p1_t1Te _ -> U

$fGeneric1Nil__$crep1
$fGeneric1Nil__$crep1 = $fGeneric1Nil_1 `cast` ...

$fGeneric1Nil_
$fGeneric1Nil_ =
  D:Generic1 ($fGeneric1Nil_1 `cast` ...) $fGeneric1Nil__$cobj1

$fGeneric0Cons__$cobj0
$fGeneric0Cons__$cobj0 =
  \ @ a_a181L @ p1_t1T0 @ p0_t1T1 ds_d1au7 ->
    case ds_d1au7 `cast` ... of _ { :*: ds1_d1aua ds2_d1aub ->
    Cons_ (ds1_d1aua `cast` ...) (ds2_d1aub `cast` ...)
    }

$fGeneric0Cons__$crep0
$fGeneric0Cons__$crep0 =
  \ @ a_a181L @ p1_t1SI @ p0_t1SJ ds_d1atB ->
    case ds_d1atB of _ { Cons_ a_a181M as_a181N ->
    (:*: (a_a181M `cast` ...) (as_a181N `cast` ...)) `cast` ...
    }

$fGeneric0Cons_
$fGeneric0Cons_ =
  \ @ a_a181L ->
    D:Generic0 ($fGeneric0Cons__$crep0) ($fGeneric0Cons__$cobj0)

$fGeneric1Cons__$cobj1
$fGeneric1Cons__$cobj1 =
  \ @ p1_t1Sr @ p0_t1Ss ds_d1at9 ->
    case ds_d1at9 `cast` ... of _ { :*: ds1_d1atc ds2_d1atd ->
    Cons_
      (ds1_d1atc `cast` ...)
      (map ((unPar2) `cast` ...) (ds2_d1atd `cast` ...))
    }

$fGeneric1Cons_1
$fGeneric1Cons_1 = $fGeneric1Branch_1

$fGeneric1Cons__$crep1
$fGeneric1Cons__$crep1 =
  \ @ p0_t1S5 @ p1_t1S6 ds_d1asN ->
    case ds_d1asN of _ { Cons_ a_a181H as_a181I ->
    (:*:
       (a_a181H `cast` ...)
       ((map (($fGeneric1Branch_1) `cast` ...) as_a181I) `cast` ...))
    `cast` ...
    }

$fGeneric1Cons_
$fGeneric1Cons_ =
  D:Generic1 $fGeneric1Cons__$crep1 $fGeneric1Cons__$cobj1

$fDC1Nothing__$crejoin1
$fDC1Nothing__$crejoin1 =
  \ @ p0_t1Fr ds_d1asH ->
    case ds_d1asH of _ { Nothing_ -> (Nothing) `cast` ... }

$fGeneric1Nothing__$cobj1
$fGeneric1Nothing__$cobj1 = \ @ p1_t1Fj @ p0_t1Fk _ -> Nothing_

$fGeneric1Nothing__$crep1
$fGeneric1Nothing__$crep1 =
  \ @ p0_t1Fa @ p1_t1Fb ds_d1as7 ->
    case ds_d1as7 of _ { Nothing_ -> (U) `cast` ... }

$fGeneric1Nothing_
$fGeneric1Nothing_ =
  D:Generic1 $fGeneric1Nothing__$crep1 $fGeneric1Nothing__$cobj1

$fDC1Just__$crejoin1
$fDC1Just__$crejoin1 =
  \ @ p0_t1F8 ds_d1as1 ->
    case ds_d1as1 of _ { Just_ x0_a17Z4 -> (Just x0_a17Z4) `cast` ... }

$fGeneric1Just__$cobj1
$fGeneric1Just__$cobj1 =
  \ @ p1_t1EY @ p0_t1EZ ds_d1arJ -> Just_ (ds_d1arJ `cast` ...)

$fGeneric1Just__$crep1
$fGeneric1Just__$crep1 =
  \ @ p0_t1EP @ p1_t1EQ ds_d1art ->
    case ds_d1art of _ { Just_ x0_a17Z2 -> x0_a17Z2 `cast` ... }

$fGeneric1Just_
$fGeneric1Just_ =
  D:Generic1 $fGeneric1Just__$crep1 $fGeneric1Just__$cobj1

$fDT1Maybe1
$fDT1Maybe1 = \ @ p0_t1Er @ p1_t1Es -> L ((Nothing_) `cast` ...)

$fDT1Maybe_$cdisband1
$fDT1Maybe_$cdisband1 =
  \ @ p0_t1Er @ p1_t1Es ds_d1ar5 ->
    case ds_d1ar5 of _ {
      Nothing -> ($fDT1Maybe1) `cast` ...;
      Just x0_a17Z1 -> (R ((Just_ x0_a17Z1) `cast` ...)) `cast` ...
    }

$fDT1Maybe2
$fDT1Maybe2 =
  \ @ p1_XR2 @ p0_XR4 ds_XeTe ->
    case ds_XeTe of _ {
      L x_ae6A -> case x_ae6A of _ { __DEFAULT -> Nothing };
      R x_ae6B ->
        case x_ae6B `cast` ... of _ { Just_ x0_a17Z4 -> Just x0_a17Z4 }
    }

$fDT1Maybe_$dReband1
$fDT1Maybe_$dReband1 = $fDT1Maybe2 `cast` ...

$fDT1Maybe
$fDT1Maybe = D:DT1 ($fDT1Maybe2 `cast` ...) $fDT1Maybe_$cdisband1

$fDC1Nothing_
$fDC1Nothing_ =
  D:DC1
    $fGeneric1Nothing_ ($fDT1Maybe `cast` ...) $fDC1Nothing__$crejoin1

$fDC1Just_
$fDC1Just_ =
  D:DC1 $fGeneric1Just_ ($fDT1Maybe `cast` ...) $fDC1Just__$crejoin1

$fDC0Nothing__$crejoin0
$fDC0Nothing__$crejoin0 =
  \ @ a0_aOS _ _ _ ds_d1aqR ->
    case ds_d1aqR of _ { Nothing_ -> (Nothing) `cast` ... }

lvl55_r1eZN
lvl55_r1eZN =
  \ @ a0_aOS ds_d1aqR ->
    case ds_d1aqR of _ { Nothing_ -> (Nothing) `cast` ... }

$fDC0Nothing_
$fDC0Nothing_ =
  \ @ a0_aOS $dGeneric0_a180g $dDT0_a180h _ ->
    D:DC0 $dGeneric0_a180g $dDT0_a180h (lvl55_r1eZN)

$fGeneric0Nothing__$cobj0
$fGeneric0Nothing__$cobj0 =
  \ @ a0_aOS _ @ p1_t1Ei @ p0_t1Ej _ -> Nothing_

$fGeneric0Nothing__$crep0
$fGeneric0Nothing__$crep0 =
  \ @ a0_aOS _ @ p1_t1E9 @ p0_t1Ea ds_d1aqf ->
    case ds_d1aqf of _ { Nothing_ -> (U) `cast` ... }

lvl56_r1eZO
lvl56_r1eZO =
  \ @ a0_aOS @ p1_t1E9 @ p0_t1Ea ds_d1aqf ->
    case ds_d1aqf of _ { Nothing_ -> (U) `cast` ... }

lvl57_r1eZP
lvl57_r1eZP = \ @ a0_aOS @ p1_t1Ei @ p0_t1Ej _ -> Nothing_

lvl58_r1eZQ
lvl58_r1eZQ = \ @ a0_aOS -> D:Generic0 (lvl56_r1eZO) (lvl57_r1eZP)

$fGeneric0Nothing_
$fGeneric0Nothing_ = \ @ a0_aOS _ -> lvl58_r1eZQ

$fDC0Just__$crejoin0
$fDC0Just__$crejoin0 =
  \ @ a0_aOS _ _ _ ds_d1aq4 ->
    case ds_d1aq4 of _ { Just_ x0_a17Z0 -> (Just x0_a17Z0) `cast` ... }

lvl59_r1eZR
lvl59_r1eZR =
  \ @ a0_aOS ds_d1aq4 ->
    case ds_d1aq4 of _ { Just_ x0_a17Z0 -> (Just x0_a17Z0) `cast` ... }

$fDC0Just_
$fDC0Just_ =
  \ @ a0_aOS $dGeneric0_a17ZP $dDT0_a17ZQ _ ->
    D:DC0 $dGeneric0_a17ZP $dDT0_a17ZQ (lvl59_r1eZR)

$fGeneric0Just__$cobj0
$fGeneric0Just__$cobj0 =
  \ @ a0_aOS _ @ p1_t1DX @ p0_t1DY ds_d1apL ->
    Just_ (ds_d1apL `cast` ...)

$fGeneric0Just__$crep0
$fGeneric0Just__$crep0 =
  \ @ a0_aOS _ @ p1_t1DN @ p0_t1DO ds_d1apu ->
    case ds_d1apu of _ { Just_ x0_a17YY -> x0_a17YY `cast` ... }

lvl60_r1eZS
lvl60_r1eZS =
  \ @ a0_aOS @ p1_t1DN @ p0_t1DO ds_d1apu ->
    case ds_d1apu of _ { Just_ x0_a17YY -> x0_a17YY `cast` ... }

lvl61_r1eZT
lvl61_r1eZT =
  \ @ a0_aOS @ p1_t1DX @ p0_t1DY ds_d1apL ->
    Just_ (ds_d1apL `cast` ...)

lvl62_r1eZU
lvl62_r1eZU = \ @ a0_aOS -> D:Generic0 (lvl60_r1eZS) (lvl61_r1eZT)

$fGeneric0Just_
$fGeneric0Just_ = \ @ a0_aOS _ -> lvl62_r1eZU

$fDT0Maybe1
$fDT0Maybe1 =
  \ @ a0_aOS @ p1_t1Dp @ p0_t1Dq -> L ((Nothing_) `cast` ...)

$fDT0Maybe_$cdisband0
$fDT0Maybe_$cdisband0 =
  \ @ a0_aOS _ _ @ p1_t1Dp @ p0_t1Dq ds_d1ap0 ->
    case ds_d1ap0 of _ {
      Nothing -> ($fDT0Maybe1) `cast` ...;
      Just x0_a17YX -> (R ((Just_ x0_a17YX) `cast` ...)) `cast` ...
    }

lvl63_r1eZV
lvl63_r1eZV =
  \ @ a0_aOS @ p1_t1Dp @ p0_t1Dq ds_d1ap0 ->
    case ds_d1ap0 of _ {
      Nothing -> ($fDT0Maybe1) `cast` ...;
      Just x0_a17YX -> (R ((Just_ x0_a17YX) `cast` ...)) `cast` ...
    }

$fDT0Maybe
$fDT0Maybe =
  \ @ a0_aOS $dReband0_a17Zo _ -> D:DT0 $dReband0_a17Zo (lvl63_r1eZV)

$fDC2(,,)__$crejoin2
$fDC2(,,)__$crejoin2 =
  \ @ a0_12 _ _ _ @ p1_t1ww @ p0_t1wx ds_d1aoK ->
    case ds_d1aoK of _ { (,,)_ x0_a17Vu x1_a17Vv x2_a17Vw ->
    (x0_a17Vu, x1_a17Vv, x2_a17Vw) `cast` ...
    }

lvl64_r1eZW
lvl64_r1eZW =
  \ @ a0_12 @ p1_t1ww @ p0_t1wx ds_d1aoK ->
    case ds_d1aoK of _ { (,,)_ x0_a17Vu x1_a17Vv x2_a17Vw ->
    (x0_a17Vu, x1_a17Vv, x2_a17Vw) `cast` ...
    }

$fDC2(,,)_
$fDC2(,,)_ =
  \ @ a0_12 $dGeneric2_a17Yk $dDT2_a17Yl _ ->
    D:DC2 $dGeneric2_a17Yk $dDT2_a17Yl (lvl64_r1eZW)

$fGeneric2(,,)__$cobj2
$fGeneric2(,,)__$cobj2 =
  \ @ a0_12 _ @ p1_t1wb @ p0_t1wc ds_d1aon ->
    case ds_d1aon `cast` ... of _ { :*: x0_a17Vr ds1_d1aoq ->
    case ds1_d1aoq of _ { :*: x1_a17Vs x2_a17Vt ->
    (,,)_
      (x0_a17Vr `cast` ...) (x1_a17Vs `cast` ...) (x2_a17Vt `cast` ...)
    }
    }

$fGeneric2(,,)__$crep2
$fGeneric2(,,)__$crep2 =
  \ @ a0_12 _ @ p1_t1vP @ p0_t1vQ ds_d1ao6 ->
    case ds_d1ao6 of _ { (,,)_ x0_a17Vo x1_a17Vp x2_a17Vq ->
    (:*:
       (x0_a17Vo `cast` ...)
       (:*: (x1_a17Vp `cast` ...) (x2_a17Vq `cast` ...)))
    `cast` ...
    }

lvl65_r1eZX
lvl65_r1eZX =
  \ @ a0_12 @ p1_t1vP @ p0_t1vQ ds_d1ao6 ->
    case ds_d1ao6 of _ { (,,)_ x0_a17Vo x1_a17Vp x2_a17Vq ->
    (:*:
       (x0_a17Vo `cast` ...)
       (:*: (x1_a17Vp `cast` ...) (x2_a17Vq `cast` ...)))
    `cast` ...
    }

lvl66_r1eZY
lvl66_r1eZY =
  \ @ a0_12 @ p1_t1wb @ p0_t1wc ds_d1aon ->
    case ds_d1aon `cast` ... of _ { :*: x0_a17Vr ds1_d1aoq ->
    case ds1_d1aoq of _ { :*: x1_a17Vs x2_a17Vt ->
    (,,)_
      (x0_a17Vr `cast` ...) (x1_a17Vs `cast` ...) (x2_a17Vt `cast` ...)
    }
    }

lvl67_r1eZZ
lvl67_r1eZZ = \ @ a0_12 -> D:Generic2 (lvl65_r1eZX) (lvl66_r1eZY)

$fGeneric2(,,)_
$fGeneric2(,,)_ = \ @ a0_12 _ -> lvl67_r1eZZ

$fDT2(,,)_$cdisband2
$fDT2(,,)_$cdisband2 =
  \ @ a0_12 _ _ @ p1_t1vH @ p0_t1vI ds_d1anT ->
    case ds_d1anT of _ { (x0_a17Vl, x1_a17Vm, x2_a17Vn) ->
    ((,,)_ x0_a17Vl x1_a17Vm x2_a17Vn) `cast` ...
    }

lvl68_r1f00
lvl68_r1f00 =
  \ @ a0_12 @ p1_t1vH @ p0_t1vI ds_d1anT ->
    case ds_d1anT of _ { (x0_a17Vl, x1_a17Vm, x2_a17Vn) ->
    ((,,)_ x0_a17Vl x1_a17Vm x2_a17Vn) `cast` ...
    }

$fDT2(,,)
$fDT2(,,) =
  \ @ a0_12 $dReband2_a17XU _ -> D:DT2 $dReband2_a17XU (lvl68_r1f00)

$fDC1(,,)__$crejoin1
$fDC1(,,)__$crejoin1 =
  \ @ a0_12 @ b0_13 _ _ _ _ @ p0_t1vD ds_d1anF ->
    case ds_d1anF of _ { (,,)_ x0_a17Vi x1_a17Vj x2_a17Vk ->
    (x0_a17Vi, x1_a17Vj, x2_a17Vk) `cast` ...
    }

lvl69_r1f01
lvl69_r1f01 =
  \ @ a0_12 @ b0_13 @ p0_t1vD ds_d1anF ->
    case ds_d1anF of _ { (,,)_ x0_a17Vi x1_a17Vj x2_a17Vk ->
    (x0_a17Vi, x1_a17Vj, x2_a17Vk) `cast` ...
    }

$fDC1(,,)_
$fDC1(,,)_ =
  \ @ a0_12 @ b0_13 $dGeneric1_a17XG $dDT1_a17XH _ _ ->
    D:DC1 $dGeneric1_a17XG $dDT1_a17XH (lvl69_r1f01)

$fGeneric1(,,)__$cobj1
$fGeneric1(,,)__$cobj1 =
  \ @ a0_12 @ b0_13 _ _ @ p1_t1vh @ p0_t1vi ds_d1anh ->
    case ds_d1anh `cast` ... of _ { :*: x0_a17Vf ds1_d1ank ->
    case ds1_d1ank of _ { :*: x1_a17Vg x2_a17Vh ->
    (,,)_
      (x0_a17Vf `cast` ...) (x1_a17Vg `cast` ...) (x2_a17Vh `cast` ...)
    }
    }

$fGeneric1(,,)__$crep1
$fGeneric1(,,)__$crep1 =
  \ @ a0_12 @ b0_13 _ _ @ p0_t1uU @ p1_t1uV ds_d1amZ ->
    case ds_d1amZ of _ { (,,)_ x0_a17Vc x1_a17Vd x2_a17Ve ->
    (:*:
       (x0_a17Vc `cast` ...)
       (:*: (x1_a17Vd `cast` ...) (x2_a17Ve `cast` ...)))
    `cast` ...
    }

lvl70_r1f02
lvl70_r1f02 =
  \ @ a0_12 @ b0_13 @ p0_t1uU @ p1_t1uV ds_d1amZ ->
    case ds_d1amZ of _ { (,,)_ x0_a17Vc x1_a17Vd x2_a17Ve ->
    (:*:
       (x0_a17Vc `cast` ...)
       (:*: (x1_a17Vd `cast` ...) (x2_a17Ve `cast` ...)))
    `cast` ...
    }

lvl71_r1f03
lvl71_r1f03 =
  \ @ a0_12 @ b0_13 @ p1_t1vh @ p0_t1vi ds_d1anh ->
    case ds_d1anh `cast` ... of _ { :*: x0_a17Vf ds1_d1ank ->
    case ds1_d1ank of _ { :*: x1_a17Vg x2_a17Vh ->
    (,,)_
      (x0_a17Vf `cast` ...) (x1_a17Vg `cast` ...) (x2_a17Vh `cast` ...)
    }
    }

lvl72_r1f04
lvl72_r1f04 =
  \ @ a0_12 @ b0_13 -> D:Generic1 (lvl70_r1f02) (lvl71_r1f03)

$fGeneric1(,,)_
$fGeneric1(,,)_ = \ @ a0_12 @ b0_13 _ _ -> lvl72_r1f04

$fDT1(,,)_$cdisband1
$fDT1(,,)_$cdisband1 =
  \ @ a0_12 @ b0_13 _ _ _ @ p0_t1uM @ p1_t1uN ds_d1amL ->
    case ds_d1amL of _ { (x0_a17V9, x1_a17Va, x2_a17Vb) ->
    ((,,)_ x0_a17V9 x1_a17Va x2_a17Vb) `cast` ...
    }

lvl73_r1f05
lvl73_r1f05 =
  \ @ a0_12 @ b0_13 @ p0_t1uM @ p1_t1uN ds_d1amL ->
    case ds_d1amL of _ { (x0_a17V9, x1_a17Va, x2_a17Vb) ->
    ((,,)_ x0_a17V9 x1_a17Va x2_a17Vb) `cast` ...
    }

$fDT1(,,)
$fDT1(,,) =
  \ @ a0_12 @ b0_13 $dReband1_a17Xe _ _ ->
    D:DT1 $dReband1_a17Xe (lvl73_r1f05)

$fDC0(,,)__$crejoin0
$fDC0(,,)__$crejoin0 =
  \ @ a0_12 @ b0_13 @ c0_14 _ _ _ _ _ ds_d1amy ->
    case ds_d1amy of _ { (,,)_ x0_a17V6 x1_a17V7 x2_a17V8 ->
    (x0_a17V6, x1_a17V7, x2_a17V8) `cast` ...
    }

lvl74_r1f06
lvl74_r1f06 =
  \ @ a0_12 @ b0_13 @ c0_14 ds_d1amy ->
    case ds_d1amy of _ { (,,)_ x0_a17V6 x1_a17V7 x2_a17V8 ->
    (x0_a17V6, x1_a17V7, x2_a17V8) `cast` ...
    }

$fDC0(,,)_
$fDC0(,,)_ =
  \ @ a0_12 @ b0_13 @ c0_14 $dGeneric0_a17X0 $dDT0_a17X1 _ _ _ ->
    D:DC0 $dGeneric0_a17X0 $dDT0_a17X1 (lvl74_r1f06)

$fGeneric0(,,)__$cobj0
$fGeneric0(,,)__$cobj0 =
  \ @ a0_12 @ b0_13 @ c0_14 _ _ _ @ p1_t1um @ p0_t1un ds_d1am9 ->
    case ds_d1am9 `cast` ... of _ { :*: x0_a17V3 ds1_d1amc ->
    case ds1_d1amc of _ { :*: x1_a17V4 x2_a17V5 ->
    (,,)_
      (x0_a17V3 `cast` ...) (x1_a17V4 `cast` ...) (x2_a17V5 `cast` ...)
    }
    }

$fGeneric0(,,)__$crep0
$fGeneric0(,,)__$crep0 =
  \ @ a0_12 @ b0_13 @ c0_14 _ _ _ @ p1_t1tY @ p0_t1tZ ds_d1alQ ->
    case ds_d1alQ of _ { (,,)_ x0_a17V0 x1_a17V1 x2_a17V2 ->
    (:*:
       (x0_a17V0 `cast` ...)
       (:*: (x1_a17V1 `cast` ...) (x2_a17V2 `cast` ...)))
    `cast` ...
    }

lvl75_r1f07
lvl75_r1f07 =
  \ @ a0_12 @ b0_13 @ c0_14 @ p1_t1tY @ p0_t1tZ ds_d1alQ ->
    case ds_d1alQ of _ { (,,)_ x0_a17V0 x1_a17V1 x2_a17V2 ->
    (:*:
       (x0_a17V0 `cast` ...)
       (:*: (x1_a17V1 `cast` ...) (x2_a17V2 `cast` ...)))
    `cast` ...
    }

lvl76_r1f08
lvl76_r1f08 =
  \ @ a0_12 @ b0_13 @ c0_14 @ p1_t1um @ p0_t1un ds_d1am9 ->
    case ds_d1am9 `cast` ... of _ { :*: x0_a17V3 ds1_d1amc ->
    case ds1_d1amc of _ { :*: x1_a17V4 x2_a17V5 ->
    (,,)_
      (x0_a17V3 `cast` ...) (x1_a17V4 `cast` ...) (x2_a17V5 `cast` ...)
    }
    }

lvl77_r1f09
lvl77_r1f09 =
  \ @ a0_12 @ b0_13 @ c0_14 -> D:Generic0 (lvl75_r1f07) (lvl76_r1f08)

$fGeneric0(,,)_
$fGeneric0(,,)_ = \ @ a0_12 @ b0_13 @ c0_14 _ _ _ -> lvl77_r1f09

$fDT0(,,)_$cdisband0
$fDT0(,,)_$cdisband0 =
  \ @ a0_12 @ b0_13 @ c0_14 _ _ _ _ @ p1_t1tQ @ p0_t1tR ds_d1alB ->
    case ds_d1alB of _ { (x0_a17UX, x1_a17UY, x2_a17UZ) ->
    ((,,)_ x0_a17UX x1_a17UY x2_a17UZ) `cast` ...
    }

lvl78_r1f0a
lvl78_r1f0a =
  \ @ a0_12 @ b0_13 @ c0_14 @ p1_t1tQ @ p0_t1tR ds_d1alB ->
    case ds_d1alB of _ { (x0_a17UX, x1_a17UY, x2_a17UZ) ->
    ((,,)_ x0_a17UX x1_a17UY x2_a17UZ) `cast` ...
    }

$fDT0(,,)
$fDT0(,,) =
  \ @ a0_12 @ b0_13 @ c0_14 $dReband0_a17Ww _ _ _ ->
    D:DT0 $dReband0_a17Ww (lvl78_r1f0a)

$fDC2(,)__$crejoin2
$fDC2(,)__$crejoin2 =
  \ @ p1_t1lm @ p0_t1ln ds_d1alt ->
    case ds_d1alt of _ { (,)_ x0_a17Si x1_a17Sj ->
    (x0_a17Si, x1_a17Sj) `cast` ...
    }

$fGeneric2(,)__$cobj2
$fGeneric2(,)__$cobj2 =
  \ @ p1_t1l7 @ p0_t1l8 ds_d1al9 ->
    case ds_d1al9 `cast` ... of _ { :*: x0_a17Sg x1_a17Sh ->
    (,)_ (x0_a17Sg `cast` ...) (x1_a17Sh `cast` ...)
    }

$fGeneric2(,)__$crep2
$fGeneric2(,)__$crep2 =
  \ @ p1_t1kS @ p0_t1kT ds_d1akT ->
    case ds_d1akT of _ { (,)_ x0_a17Se x1_a17Sf ->
    (:*: (x0_a17Se `cast` ...) (x1_a17Sf `cast` ...)) `cast` ...
    }

$fGeneric2(,)_
$fGeneric2(,)_ =
  D:Generic2 $fGeneric2(,)__$crep2 $fGeneric2(,)__$cobj2

$fDT2(,)_$cdisband2
$fDT2(,)_$cdisband2 =
  \ @ p1_t1kL @ p0_t1kM ds_d1akJ ->
    case ds_d1akJ of _ { (x0_a17Sc, x1_a17Sd) ->
    ((,)_ x0_a17Sc x1_a17Sd) `cast` ...
    }

$fDT2(,)1
$fDT2(,)1 =
  \ @ p1_XRM @ p0_XRO eta_XIj ->
    case eta_XIj `cast` ... of _ { (,)_ x0_a17Si x1_a17Sj ->
    (x0_a17Si, x1_a17Sj)
    }

$fDT2(,)_$dReband2
$fDT2(,)_$dReband2 = $fDT2(,)1 `cast` ...

$fDT2(,)
$fDT2(,) = D:DT2 ($fDT2(,)1 `cast` ...) $fDT2(,)_$cdisband2

$fDC2(,)_
$fDC2(,)_ =
  D:DC2 $fGeneric2(,)_ ($fDT2(,) `cast` ...) $fDC2(,)__$crejoin2

$fDC1(,)__$crejoin1
$fDC1(,)__$crejoin1 =
  \ @ a0_12 _ _ _ @ p0_t1kI ds_d1akw ->
    case ds_d1akw of _ { (,)_ x0_a17Sa x1_a17Sb ->
    (x0_a17Sa, x1_a17Sb) `cast` ...
    }

lvl79_r1f0b
lvl79_r1f0b =
  \ @ a0_12 @ p0_t1kI ds_d1akw ->
    case ds_d1akw of _ { (,)_ x0_a17Sa x1_a17Sb ->
    (x0_a17Sa, x1_a17Sb) `cast` ...
    }

$fDC1(,)_
$fDC1(,)_ =
  \ @ a0_12 $dGeneric1_a17TU $dDT1_a17TV _ ->
    D:DC1 $dGeneric1_a17TU $dDT1_a17TV (lvl79_r1f0b)

$fGeneric1(,)__$cobj1
$fGeneric1(,)__$cobj1 =
  \ @ a0_12 _ @ p1_t1ks @ p0_t1kt ds_d1akb ->
    case ds_d1akb `cast` ... of _ { :*: x0_a17S8 x1_a17S9 ->
    (,)_ (x0_a17S8 `cast` ...) (x1_a17S9 `cast` ...)
    }

$fGeneric1(,)__$crep1
$fGeneric1(,)__$crep1 =
  \ @ a0_12 _ @ p0_t1kc @ p1_t1kd ds_d1ajU ->
    case ds_d1ajU of _ { (,)_ x0_a17S6 x1_a17S7 ->
    (:*: (x0_a17S6 `cast` ...) (x1_a17S7 `cast` ...)) `cast` ...
    }

lvl80_r1f0c
lvl80_r1f0c =
  \ @ a0_12 @ p0_t1kc @ p1_t1kd ds_d1ajU ->
    case ds_d1ajU of _ { (,)_ x0_a17S6 x1_a17S7 ->
    (:*: (x0_a17S6 `cast` ...) (x1_a17S7 `cast` ...)) `cast` ...
    }

lvl81_r1f0d
lvl81_r1f0d =
  \ @ a0_12 @ p1_t1ks @ p0_t1kt ds_d1akb ->
    case ds_d1akb `cast` ... of _ { :*: x0_a17S8 x1_a17S9 ->
    (,)_ (x0_a17S8 `cast` ...) (x1_a17S9 `cast` ...)
    }

lvl82_r1f0e
lvl82_r1f0e = \ @ a0_12 -> D:Generic1 (lvl80_r1f0c) (lvl81_r1f0d)

$fGeneric1(,)_
$fGeneric1(,)_ = \ @ a0_12 _ -> lvl82_r1f0e

$fDT1(,)_$cdisband1
$fDT1(,)_$cdisband1 =
  \ @ a0_12 _ _ @ p0_t1k5 @ p1_t1k6 ds_d1ajH ->
    case ds_d1ajH of _ { (x0_a17S4, x1_a17S5) ->
    ((,)_ x0_a17S4 x1_a17S5) `cast` ...
    }

lvl83_r1f0f
lvl83_r1f0f =
  \ @ a0_12 @ p0_t1k5 @ p1_t1k6 ds_d1ajH ->
    case ds_d1ajH of _ { (x0_a17S4, x1_a17S5) ->
    ((,)_ x0_a17S4 x1_a17S5) `cast` ...
    }

$fDT1(,)
$fDT1(,) =
  \ @ a0_12 $dReband1_a17Tu _ -> D:DT1 $dReband1_a17Tu (lvl83_r1f0f)

$fDC0(,)__$crejoin0
$fDC0(,)__$crejoin0 =
  \ @ a0_12 @ b0_13 _ _ _ _ ds_d1ajv ->
    case ds_d1ajv of _ { (,)_ x0_a17S2 x1_a17S3 ->
    (x0_a17S2, x1_a17S3) `cast` ...
    }

lvl84_r1f0g
lvl84_r1f0g =
  \ @ a0_12 @ b0_13 ds_d1ajv ->
    case ds_d1ajv of _ { (,)_ x0_a17S2 x1_a17S3 ->
    (x0_a17S2, x1_a17S3) `cast` ...
    }

$fDC0(,)_
$fDC0(,)_ =
  \ @ a0_12 @ b0_13 $dGeneric0_a17Th $dDT0_a17Ti _ _ ->
    D:DC0 $dGeneric0_a17Th $dDT0_a17Ti (lvl84_r1f0g)

$fGeneric0(,)__$cobj0
$fGeneric0(,)__$cobj0 =
  \ @ a0_12 @ b0_13 _ _ @ p1_t1jM @ p0_t1jN ds_d1aj9 ->
    case ds_d1aj9 `cast` ... of _ { :*: x0_a17S0 x1_a17S1 ->
    (,)_ (x0_a17S0 `cast` ...) (x1_a17S1 `cast` ...)
    }

$fGeneric0(,)__$crep0
$fGeneric0(,)__$crep0 =
  \ @ a0_12 @ b0_13 _ _ @ p1_t1jv @ p0_t1jw ds_d1aiR ->
    case ds_d1aiR of _ { (,)_ x0_a17RY x1_a17RZ ->
    (:*: (x0_a17RY `cast` ...) (x1_a17RZ `cast` ...)) `cast` ...
    }

lvl85_r1f0h
lvl85_r1f0h =
  \ @ a0_12 @ b0_13 @ p1_t1jv @ p0_t1jw ds_d1aiR ->
    case ds_d1aiR of _ { (,)_ x0_a17RY x1_a17RZ ->
    (:*: (x0_a17RY `cast` ...) (x1_a17RZ `cast` ...)) `cast` ...
    }

lvl86_r1f0i
lvl86_r1f0i =
  \ @ a0_12 @ b0_13 @ p1_t1jM @ p0_t1jN ds_d1aj9 ->
    case ds_d1aj9 `cast` ... of _ { :*: x0_a17S0 x1_a17S1 ->
    (,)_ (x0_a17S0 `cast` ...) (x1_a17S1 `cast` ...)
    }

lvl87_r1f0j
lvl87_r1f0j =
  \ @ a0_12 @ b0_13 -> D:Generic0 (lvl85_r1f0h) (lvl86_r1f0i)

$fGeneric0(,)_
$fGeneric0(,)_ = \ @ a0_12 @ b0_13 _ _ -> lvl87_r1f0j

$fDT0(,)_$cdisband0
$fDT0(,)_$cdisband0 =
  \ @ a0_12 @ b0_13 _ _ _ @ p1_t1jo @ p0_t1jp ds_d1aiD ->
    case ds_d1aiD of _ { (x0_a17RW, x1_a17RX) ->
    ((,)_ x0_a17RW x1_a17RX) `cast` ...
    }

lvl88_r1f0k
lvl88_r1f0k =
  \ @ a0_12 @ b0_13 @ p1_t1jo @ p0_t1jp ds_d1aiD ->
    case ds_d1aiD of _ { (x0_a17RW, x1_a17RX) ->
    ((,)_ x0_a17RW x1_a17RX) `cast` ...
    }

$fDT0(,)
$fDT0(,) =
  \ @ a0_12 @ b0_13 $dReband0_a17SP _ _ ->
    D:DT0 $dReband0_a17SP (lvl88_r1f0k)

$fDC0()__$crejoin0
$fDC0()__$crejoin0 =
  \ ds_d1aiA -> case ds_d1aiA of _ { ()_ -> () `cast` ... }

$fGeneric0()__$cobj0
$fGeneric0()__$cobj0 = \ @ p1_t1do @ p0_t1dp _ -> ()_

$fGeneric0()__$crep0
$fGeneric0()__$crep0 =
  \ @ p1_t1df @ p0_t1dg ds_d1ai0 ->
    case ds_d1ai0 of _ { ()_ -> (U) `cast` ... }

$fGeneric0()_
$fGeneric0()_ =
  D:Generic0 $fGeneric0()__$crep0 $fGeneric0()__$cobj0

$fDT0()_$cdisband0
$fDT0()_$cdisband0 =
  \ @ p1_t1da @ p0_t1db ds_d1ahQ ->
    case ds_d1ahQ of _ { () -> ()_ `cast` ... }

$fDT0()1
$fDT0()1 =
  \ @ p1_ta7 @ p0_ta8 ds_debZ ->
    case ds_debZ of _ { __DEFAULT -> () }

$fDT0()_$dReband0
$fDT0()_$dReband0 = $fDT0()1 `cast` ...

$fDT0()
$fDT0() = D:DT0 ($fDT0()1 `cast` ...) $fDT0()_$cdisband0

$fDC0()_
$fDC0()_ =
  D:DC0 $fGeneric0()_ ($fDT0() `cast` ...) $fDC0()__$crejoin0

$fDC1:%__$crejoin1
$fDC1:%__$crejoin1 =
  \ @ p0_t1bL ds_d1ahK ->
    case ds_d1ahK of _ { :%_ x0_a17Pc x1_a17Pd ->
    (:% x0_a17Pc x1_a17Pd) `cast` ...
    }

$fGeneric1:%__$cobj1
$fGeneric1:%__$cobj1 =
  \ @ p1_t1bx @ p0_t1by ds_d1ahq ->
    case ds_d1ahq `cast` ... of _ { :*: x0_a17Pa x1_a17Pb ->
    case x0_a17Pa `cast` ... of tpl_X5 { __DEFAULT ->
    case x1_a17Pb `cast` ... of tpl1_X7 { __DEFAULT ->
    :%_ tpl_X5 tpl1_X7
    }
    }
    }

$fGeneric1:%__$crep1
$fGeneric1:%__$crep1 =
  \ @ p0_t1bi @ p1_t1bj ds_d1aha ->
    case ds_d1aha of _ { :%_ x0_a17P8 x1_a17P9 ->
    (:*: (x0_a17P8 `cast` ...) (x1_a17P9 `cast` ...)) `cast` ...
    }

$fGeneric1:%_
$fGeneric1:%_ =
  D:Generic1 $fGeneric1:%__$crep1 $fGeneric1:%__$cobj1

$fDT1Ratio_$cdisband1
$fDT1Ratio_$cdisband1 =
  \ @ p0_t1bc @ p1_t1bd ds_d1ah0 ->
    case ds_d1ah0 of _ { :% x0_a17P6 x1_a17P7 ->
    (:%_ x0_a17P6 x1_a17P7) `cast` ...
    }

$fDT1Ratio1
$fDT1Ratio1 =
  \ @ p1_XSP @ p0_XSR eta_XJ3 ->
    case eta_XJ3 `cast` ... of _ { :%_ x0_a17Pc x1_a17Pd ->
    :% x0_a17Pc x1_a17Pd
    }

$fDT1Ratio_$dReband1
$fDT1Ratio_$dReband1 = $fDT1Ratio1 `cast` ...

$fDT1Ratio
$fDT1Ratio = D:DT1 ($fDT1Ratio1 `cast` ...) $fDT1Ratio_$cdisband1

$fDC1:%_
$fDC1:%_ =
  D:DC1 $fGeneric1:%_ ($fDT1Ratio `cast` ...) $fDC1:%__$crejoin1

$fInvariantRatio_$cinvmap
$fInvariantRatio_$cinvmap =
  \ @ a_t1b7 @ b_t1b8 eta_B2 _ x_X135 ->
    case x_X135 of _ { :% x0_a17P6 x1_a17P7 ->
    case eta_B2 x0_a17P6 of tpl_X5 { __DEFAULT ->
    case eta_B2 x1_a17P7 of tpl1_X7 { __DEFAULT -> :% tpl_X5 tpl1_X7 }
    }
    }

$fInvariantRatio
$fInvariantRatio = $fInvariantRatio_$cinvmap `cast` ...

$fDC0:%__$crejoin0
$fDC0:%__$crejoin0 =
  \ @ a0_abDS _ _ _ ds_d1agN ->
    case ds_d1agN of _ { :%_ x0_a17P4 x1_a17P5 ->
    (:% x0_a17P4 x1_a17P5) `cast` ...
    }

lvl89_r1f0l
lvl89_r1f0l =
  \ @ a0_abDS ds_d1agN ->
    case ds_d1agN of _ { :%_ x0_a17P4 x1_a17P5 ->
    (:% x0_a17P4 x1_a17P5) `cast` ...
    }

$fDC0:%_
$fDC0:%_ =
  \ @ a0_abDS $dGeneric0_a17Qb $dDT0_a17Qc _ ->
    D:DC0 $dGeneric0_a17Qb $dDT0_a17Qc (lvl89_r1f0l)

$fGeneric0:%__$cobj0
$fGeneric0:%__$cobj0 =
  \ @ a0_abDS _ @ p1_t1aQ @ p0_t1aR ds_d1ags ->
    case ds_d1ags `cast` ... of _ { :*: x0_a17P2 x1_a17P3 ->
    case x0_a17P2 `cast` ... of tpl_X5 { __DEFAULT ->
    case x1_a17P3 `cast` ... of tpl1_X7 { __DEFAULT ->
    :%_ tpl_X5 tpl1_X7
    }
    }
    }

$fGeneric0:%__$crep0
$fGeneric0:%__$crep0 =
  \ @ a0_abDS _ @ p1_t1az @ p0_t1aA ds_d1agb ->
    case ds_d1agb of _ { :%_ x0_a17P0 x1_a17P1 ->
    (:*: (x0_a17P0 `cast` ...) (x1_a17P1 `cast` ...)) `cast` ...
    }

lvl90_r1f0m
lvl90_r1f0m =
  \ @ a0_abDS @ p1_t1az @ p0_t1aA ds_d1agb ->
    case ds_d1agb of _ { :%_ x0_a17P0 x1_a17P1 ->
    (:*: (x0_a17P0 `cast` ...) (x1_a17P1 `cast` ...)) `cast` ...
    }

$fGeneric0:%_
$fGeneric0:%_ =
  \ @ a0_abDS cobox_a17PW ->
    D:Generic0 (lvl90_r1f0m) ($fGeneric0:%__$cobj0 cobox_a17PW)

$fDT0Ratio_$cdisband0
$fDT0Ratio_$cdisband0 =
  \ @ a0_abDS _ _ @ p1_t1at @ p0_t1au ds_d1afY ->
    case ds_d1afY of _ { :% x0_a17OY x1_a17OZ ->
    (:%_ x0_a17OY x1_a17OZ) `cast` ...
    }

lvl91_r1f0n
lvl91_r1f0n =
  \ @ a0_abDS @ p1_t1at @ p0_t1au ds_d1afY ->
    case ds_d1afY of _ { :% x0_a17OY x1_a17OZ ->
    (:%_ x0_a17OY x1_a17OZ) `cast` ...
    }

$fDT0Ratio
$fDT0Ratio =
  \ @ a0_abDS $dReband0_a17PG _ ->
    D:DT0 $dReband0_a17PG (lvl91_r1f0n)

$fDC0False__$crejoin0
$fDC0False__$crejoin0 =
  \ ds_d1afV -> case ds_d1afV of _ { False_ -> False `cast` ... }

$fGeneric0False__$cobj0
$fGeneric0False__$cobj0 = \ @ p1_t176 @ p0_t177 _ -> False_

$fGeneric0False__$crep0
$fGeneric0False__$crep0 =
  \ @ p1_t16X @ p0_t16Y ds_d1afl ->
    case ds_d1afl of _ { False_ -> (U) `cast` ... }

$fGeneric0False_
$fGeneric0False_ =
  D:Generic0 $fGeneric0False__$crep0 $fGeneric0False__$cobj0

$fDC0True__$crejoin0
$fDC0True__$crejoin0 =
  \ ds_d1afi -> case ds_d1afi of _ { True_ -> True `cast` ... }

$fGeneric0True__$cobj0
$fGeneric0True__$cobj0 = \ @ p1_t16Q @ p0_t16R _ -> True_

$fGeneric0True__$crep0
$fGeneric0True__$crep0 =
  \ @ p1_t16H @ p0_t16I ds_d1aeI ->
    case ds_d1aeI of _ { True_ -> (U) `cast` ... }

$fGeneric0True_
$fGeneric0True_ =
  D:Generic0 $fGeneric0True__$crep0 $fGeneric0True__$cobj0

$fDT0Bool2
$fDT0Bool2 = \ @ p1_t16l @ p0_t16m -> L (False_ `cast` ...)

$fDT0Bool1
$fDT0Bool1 = \ @ p1_t16l @ p0_t16m -> R (True_ `cast` ...)

$fDT0Bool_$cdisband0
$fDT0Bool_$cdisband0 =
  \ @ p1_t16l @ p0_t16m ds_d1aek ->
    case ds_d1aek of _ {
      False -> ($fDT0Bool2) `cast` ...;
      True -> ($fDT0Bool1) `cast` ...
    }

$fDT0Bool3
$fDT0Bool3 =
  \ @ p1_t9T @ p0_t9U ds_debU ->
    case ds_debU of _ {
      L x_ae6I -> case x_ae6I of _ { __DEFAULT -> False };
      R x_ae6J -> case x_ae6J of _ { __DEFAULT -> True }
    }

$fDT0Bool_$dReband0
$fDT0Bool_$dReband0 = $fDT0Bool3 `cast` ...

$fDT0Bool
$fDT0Bool = D:DT0 ($fDT0Bool3 `cast` ...) $fDT0Bool_$cdisband0

$fDC0True_
$fDC0True_ =
  D:DC0 $fGeneric0True_ ($fDT0Bool `cast` ...) $fDC0True__$crejoin0

$fDC0False_
$fDC0False_ =
  D:DC0 $fGeneric0False_ ($fDT0Bool `cast` ...) $fDC0False__$crejoin0

$fDC1Y__$crejoin1
$fDC1Y__$crejoin1 =
  \ @ p0_t13s ds_d1aed ->
    case ds_d1aed of _ { Y_ x0_a17LV -> (Y x0_a17LV) `cast` ... }

$fDT1Y_$cdisband1
$fDT1Y_$cdisband1 =
  \ @ p0_t11X @ p1_t11Y ds_d1ads ->
    case ds_d1ads of _ { Y x0_a17LP -> (Y_ x0_a17LP) `cast` ... }

$fDC0Y__$crejoin0
$fDC0Y__$crejoin0 =
  \ @ a0_a17JF _ _ _ ds_d1adf ->
    case ds_d1adf of _ { Y_ x0_a17LO -> (Y x0_a17LO) `cast` ... }

lvl92_r1f0o
lvl92_r1f0o =
  \ @ a0_a17JF ds_d1adf ->
    case ds_d1adf of _ { Y_ x0_a17LO -> (Y x0_a17LO) `cast` ... }

$fDC0Y_
$fDC0Y_ =
  \ @ a0_a17JF $dGeneric0_a17Mx $dDT0_a17My _ ->
    D:DC0 $dGeneric0_a17Mx $dDT0_a17My (lvl92_r1f0o)

$fGeneric0Y__$cobj0
$fGeneric0Y__$cobj0 =
  \ @ a0_a17JF _ @ p1_t11G @ p0_t11H ds_d1acW ->
    Y_ (ds_d1acW `cast` ...)

$fGeneric0Y__$crep0
$fGeneric0Y__$crep0 =
  \ @ a0_a17JF _ @ p1_t11w @ p0_t11x ds_d1acF ->
    case ds_d1acF of _ { Y_ x0_a17LM -> x0_a17LM `cast` ... }

lvl93_r1f0p
lvl93_r1f0p =
  \ @ a0_a17JF @ p1_t11w @ p0_t11x ds_d1acF ->
    case ds_d1acF of _ { Y_ x0_a17LM -> x0_a17LM `cast` ... }

lvl94_r1f0q
lvl94_r1f0q =
  \ @ a0_a17JF @ p1_t11G @ p0_t11H ds_d1acW ->
    Y_ (ds_d1acW `cast` ...)

lvl95_r1f0r
lvl95_r1f0r =
  \ @ a0_a17JF -> D:Generic0 (lvl93_r1f0p) (lvl94_r1f0q)

$fGeneric0Y_
$fGeneric0Y_ = \ @ a0_a17JF _ -> lvl95_r1f0r

$fDT0Y_$cdisband0
$fDT0Y_$cdisband0 =
  \ @ a0_a17JF _ _ @ p1_t11q @ p0_t11r ds_d1acs ->
    case ds_d1acs of _ { Y x0_a17LL -> (Y_ x0_a17LL) `cast` ... }

lvl96_r1f0s
lvl96_r1f0s =
  \ @ a0_a17JF @ p1_t11q @ p0_t11r ds_d1acs ->
    case ds_d1acs of _ { Y x0_a17LL -> (Y_ x0_a17LL) `cast` ... }

$fDT0Y
$fDT0Y =
  \ @ a0_a17JF $dReband0_a17M7 _ ->
    D:DT0 $dReband0_a17M7 (lvl96_r1f0s)

$fDC1X__$crejoin1
$fDC1X__$crejoin1 =
  \ @ p0_tYc ds_d1acm ->
    case ds_d1acm of _ { X_ x0_a17K8 x1_a17K9 x2_a17Ka x3_a17Kb ->
    (X x0_a17K8 x1_a17K9 x2_a17Ka x3_a17Kb) `cast` ...
    }

$fGeneric1X__$cobj1
$fGeneric1X__$cobj1 =
  \ @ p1_tXQ @ p0_tXR ds_d1abY ->
    case ds_d1abY `cast` ... of _ { :*: ds1_d1ac1 ds2_d1ac2 ->
    case ds1_d1ac1 of _ { :*: x0_a17K4 x1_a17K5 ->
    case ds2_d1ac2 of _ { :*: x2_a17K6 x3_a17K7 ->
    X_
      (x0_a17K4 `cast` ...)
      (x1_a17K5 `cast` ...)
      (x2_a17K6 `cast` ...)
      (x3_a17K7 `cast` ...)
    }
    }
    }

$fGeneric1X__$crep1
$fGeneric1X__$crep1 =
  \ @ p0_tXp @ p1_tXq ds_d1abI ->
    case ds_d1abI of _ { X_ x0_a17K0 x1_a17K1 x2_a17K2 x3_a17K3 ->
    (:*:
       (:*: (x0_a17K0 `cast` ...) (x1_a17K1 `cast` ...))
       (:*: (x2_a17K2 `cast` ...) (x3_a17K3 `cast` ...)))
    `cast` ...
    }

$fGeneric1X_
$fGeneric1X_ = D:Generic1 $fGeneric1X__$crep1 $fGeneric1X__$cobj1

$fDT1X_$cdisband1
$fDT1X_$cdisband1 =
  \ @ p0_tXj @ p1_tXk ds_d1aby ->
    case ds_d1aby of _ { X x0_a17JW x1_a17JX x2_a17JY x3_a17JZ ->
    (X_ x0_a17JW x1_a17JX x2_a17JY x3_a17JZ) `cast` ...
    }

$fDT1X1
$fDT1X1 =
  \ @ p1_XUB @ p0_XUD eta_XKP ->
    case eta_XKP `cast` ...
    of _ { X_ x0_a17K8 x1_a17K9 x2_a17Ka x3_a17Kb ->
    X x0_a17K8 x1_a17K9 x2_a17Ka x3_a17Kb
    }

$fDT1X_$dReband1
$fDT1X_$dReband1 = $fDT1X1 `cast` ...

$fDT1X
$fDT1X = D:DT1 ($fDT1X1 `cast` ...) $fDT1X_$cdisband1

$fDC1X_
$fDC1X_ = D:DC1 $fGeneric1X_ ($fDT1X `cast` ...) $fDC1X__$crejoin1

$fInvariantX_$cinvmap
$fInvariantX_$cinvmap =
  \ @ a_tXe @ b_tXf eta_B2 _ x_X135 ->
    case x_X135 of _ { X x0_a17JW x1_a17JX x2_a17JY x3_a17JZ ->
    X (eta_B2 x0_a17JW)
      (eta_B2 x1_a17JX)
      (eta_B2 x2_a17JY)
      (eta_B2 x3_a17JZ)
    }

$fInvariantX
$fInvariantX = $fInvariantX_$cinvmap `cast` ...

$fGeneric1Y__$crep1
$fGeneric1Y__$crep1 =
  \ @ p0_XbML @ p1_XbMN w_s1dCr ->
    case w_s1dCr of _ { Y_ ww_s1dCt ->
    case ww_s1dCt of _ { X ww2_X1dZD ww3_X1dZF ww4_X1dZH ww5_X1dZJ ->
    (X (case ww2_X1dZD of _ { X x0_X18w8 x1_X18wa x2_X18wc x3_X18we ->
        (X (x0_X18w8 `cast` ...)
           (x1_X18wa `cast` ...)
           (x2_X18wc `cast` ...)
           (x3_X18we `cast` ...))
        `cast` ...
        })
       (case ww3_X1dZF of _ { X x0_X18w8 x1_X18wa x2_X18wc x3_X18we ->
        (X (x0_X18w8 `cast` ...)
           (x1_X18wa `cast` ...)
           (x2_X18wc `cast` ...)
           (x3_X18we `cast` ...))
        `cast` ...
        })
       (case ww4_X1dZH of _ { X x0_X18w8 x1_X18wa x2_X18wc x3_X18we ->
        (X (x0_X18w8 `cast` ...)
           (x1_X18wa `cast` ...)
           (x2_X18wc `cast` ...)
           (x3_X18we `cast` ...))
        `cast` ...
        })
       (case ww5_X1dZJ of _ { X x0_X18w8 x1_X18wa x2_X18wc x3_X18we ->
        (X (x0_X18w8 `cast` ...)
           (x1_X18wa `cast` ...)
           (x2_X18wc `cast` ...)
           (x3_X18we `cast` ...))
        `cast` ...
        }))
    `cast` ...
    }
    }

$fGeneric1Y_1
$fGeneric1Y_1 =
  \ @ p1_t12I @ p0_t12J w_s1dCD ->
    case w_s1dCD of _ { X ww_s1dCF ww1_s1dCG ww2_s1dCH ww3_s1dCI ->
    X (case ww_s1dCF `cast` ...
       of _ { X x0_X18wg x1_X19iD x2_X18wk x3_X18wm ->
       X (x0_X18wg `cast` ...)
         (x1_X19iD `cast` ...)
         (x2_X18wk `cast` ...)
         (x3_X18wm `cast` ...)
       })
      (case ww1_s1dCG `cast` ...
       of _ { X x0_X18wg x1_X19iD x2_X18wk x3_X18wm ->
       X (x0_X18wg `cast` ...)
         (x1_X19iD `cast` ...)
         (x2_X18wk `cast` ...)
         (x3_X18wm `cast` ...)
       })
      (case ww2_s1dCH `cast` ...
       of _ { X x0_X18wg x1_X19iD x2_X18wk x3_X18wm ->
       X (x0_X18wg `cast` ...)
         (x1_X19iD `cast` ...)
         (x2_X18wk `cast` ...)
         (x3_X18wm `cast` ...)
       })
      (case ww3_s1dCI `cast` ...
       of _ { X x0_X18wg x1_X19iD x2_X18wk x3_X18wm ->
       X (x0_X18wg `cast` ...)
         (x1_X19iD `cast` ...)
         (x2_X18wk `cast` ...)
         (x3_X18wm `cast` ...)
       })
    }

$fGeneric1Y__$cobj1
$fGeneric1Y__$cobj1 =
  \ @ p1_t12I @ p0_t12J ds_d1adV ->
    Y_ ($fGeneric1Y_1 (ds_d1adV `cast` ...))

$fGeneric1Y_
$fGeneric1Y_ = D:Generic1 $fGeneric1Y__$crep1 $fGeneric1Y__$cobj1

$fDT1Y1
$fDT1Y1 =
  \ @ p1_XVM @ p0_XVO eta_XM0 ->
    case eta_XM0 `cast` ... of _ { Y_ x0_a17LV -> Y x0_a17LV }

$fDT1Y_$dReband1
$fDT1Y_$dReband1 = $fDT1Y1 `cast` ...

$fDT1Y
$fDT1Y = D:DT1 ($fDT1Y1 `cast` ...) $fDT1Y_$cdisband1

$fDC1Y__$dDT1
$fDC1Y__$dDT1 = $fDT1Y `cast` ...

$fDC1Y_
$fDC1Y_ = D:DC1 $fGeneric1Y_ ($fDT1Y `cast` ...) $fDC1Y__$crejoin1

$w$cinvmap2
$w$cinvmap2 =
  \ @ a_agq4 @ b_agq5 w_s1dCP w1_s1dCR ->
    (# case w1_s1dCR of _ { Y x0_a17LP ->
       case x0_a17LP of _ { X x1_a17JW x2_a17JX x3_a17JY x4_a17JZ ->
       X (case x1_a17JW of _ { X x5_X18w8 x6_X18wa x7_X18wc x8_X18we ->
          X (w_s1dCP x5_X18w8)
            (w_s1dCP x6_X18wa)
            (w_s1dCP x7_X18wc)
            (w_s1dCP x8_X18we)
          })
         (case x2_a17JX of _ { X x5_X18w8 x6_X18wa x7_X18wc x8_X18we ->
          X (w_s1dCP x5_X18w8)
            (w_s1dCP x6_X18wa)
            (w_s1dCP x7_X18wc)
            (w_s1dCP x8_X18we)
          })
         (case x3_a17JY of _ { X x5_X18w8 x6_X18wa x7_X18wc x8_X18we ->
          X (w_s1dCP x5_X18w8)
            (w_s1dCP x6_X18wa)
            (w_s1dCP x7_X18wc)
            (w_s1dCP x8_X18we)
          })
         (case x4_a17JZ of _ { X x5_X18w8 x6_X18wa x7_X18wc x8_X18we ->
          X (w_s1dCP x5_X18w8)
            (w_s1dCP x6_X18wa)
            (w_s1dCP x7_X18wc)
            (w_s1dCP x8_X18we)
          })
       }
       } #)

$fInvariantY_$cinvmap
$fInvariantY_$cinvmap =
  \ @ a_agq4 @ b_agq5 w_s1dCP _ w2_s1dCR ->
    case $w$cinvmap2 w_s1dCP w2_s1dCR of _ { (# ww1_s1dEN #) ->
    Y ww1_s1dEN
    }

$fInvariantY
$fInvariantY = $fInvariantY_$cinvmap `cast` ...

$fDC0X__$crejoin0
$fDC0X__$crejoin0 =
  \ @ a0_a17IV _ _ _ ds_d1abl ->
    case ds_d1abl of _ { X_ x0_a17JS x1_a17JT x2_a17JU x3_a17JV ->
    (X x0_a17JS x1_a17JT x2_a17JU x3_a17JV) `cast` ...
    }

lvl97_r1f0t
lvl97_r1f0t =
  \ @ a0_a17IV ds_d1abl ->
    case ds_d1abl of _ { X_ x0_a17JS x1_a17JT x2_a17JU x3_a17JV ->
    (X x0_a17JS x1_a17JT x2_a17JU x3_a17JV) `cast` ...
    }

$fDC0X_
$fDC0X_ =
  \ @ a0_a17IV $dGeneric0_a17KO $dDT0_a17KP _ ->
    D:DC0 $dGeneric0_a17KO $dDT0_a17KP (lvl97_r1f0t)

$fGeneric0X__$cobj0
$fGeneric0X__$cobj0 =
  \ @ a0_a17IV _ @ p1_tWN @ p0_tWO ds_d1aaW ->
    case ds_d1aaW `cast` ... of _ { :*: ds1_d1aaZ ds2_d1ab0 ->
    case ds1_d1aaZ of _ { :*: x0_a17JO x1_a17JP ->
    case ds2_d1ab0 of _ { :*: x2_a17JQ x3_a17JR ->
    X_
      (x0_a17JO `cast` ...)
      (x1_a17JP `cast` ...)
      (x2_a17JQ `cast` ...)
      (x3_a17JR `cast` ...)
    }
    }
    }

$fGeneric0X__$crep0
$fGeneric0X__$crep0 =
  \ @ a0_a17IV _ @ p1_tWi @ p0_tWj ds_d1aaF ->
    case ds_d1aaF of _ { X_ x0_a17JK x1_a17JL x2_a17JM x3_a17JN ->
    (:*:
       (:*: (x0_a17JK `cast` ...) (x1_a17JL `cast` ...))
       (:*: (x2_a17JM `cast` ...) (x3_a17JN `cast` ...)))
    `cast` ...
    }

$fGeneric0X_
$fGeneric0X_ =
  \ @ a0_a17IV cobox_a17Kz ->
    D:Generic0
      ($fGeneric0X__$crep0 cobox_a17Kz) ($fGeneric0X__$cobj0 cobox_a17Kz)

$fDT0X_$cdisband0
$fDT0X_$cdisband0 =
  \ @ a0_a17IV _ _ @ p1_tWc @ p0_tWd ds_d1aas ->
    case ds_d1aas of _ { X x0_a17JG x1_a17JH x2_a17JI x3_a17JJ ->
    (X_ x0_a17JG x1_a17JH x2_a17JI x3_a17JJ) `cast` ...
    }

lvl98_r1f0u
lvl98_r1f0u =
  \ @ a0_a17IV @ p1_tWc @ p0_tWd ds_d1aas ->
    case ds_d1aas of _ { X x0_a17JG x1_a17JH x2_a17JI x3_a17JJ ->
    (X_ x0_a17JG x1_a17JH x2_a17JI x3_a17JJ) `cast` ...
    }

$fDT0X
$fDT0X =
  \ @ a0_a17IV $dReband0_a17Ko _ ->
    D:DT0 $dReband0_a17Ko (lvl98_r1f0u)

$fDC0Inf__$crejoin0
$fDC0Inf__$crejoin0 =
  \ ds_d1aap ->
    case ds_d1aap of _ { Inf_ x0_a17IZ -> (Inf x0_a17IZ) `cast` ... }

$fGeneric0Inf__$cobj0
$fGeneric0Inf__$cobj0 =
  \ @ p1_tSE @ p0_tSF ds_d1aa4 -> Inf_ (ds_d1aa4 `cast` ...)

$fGeneric0Inf__$crep0
$fGeneric0Inf__$crep0 =
  \ @ p1_tSt @ p0_tSu ds_d1a9L ->
    case ds_d1a9L of _ { Inf_ x0_a17IX -> x0_a17IX `cast` ... }

$fGeneric0Inf_
$fGeneric0Inf_ =
  D:Generic0 $fGeneric0Inf__$crep0 $fGeneric0Inf__$cobj0

$fDT0Inf_$cdisband0
$fDT0Inf_$cdisband0 =
  \ @ p1_tSo @ p0_tSp ds_d1a9B ->
    case ds_d1a9B of _ { Inf x0_a17IW -> (Inf_ x0_a17IW) `cast` ... }

$fDT0Inf1
$fDT0Inf1 =
  \ @ p1_XXi @ p0_XXk ds_XeZc ->
    case ds_XeZc `cast` ... of _ { Inf_ x0_a17IZ -> Inf x0_a17IZ }

$fDT0Inf_$dReband0
$fDT0Inf_$dReband0 = $fDT0Inf1 `cast` ...

$fDT0Inf
$fDT0Inf = D:DT0 ($fDT0Inf1 `cast` ...) $fDT0Inf_$cdisband0

$fDC0Inf_
$fDC0Inf_ =
  D:DC0 $fGeneric0Inf_ ($fDT0Inf `cast` ...) $fDC0Inf__$crejoin0

$fDC0Z__$crejoin0
$fDC0Z__$crejoin0 =
  \ ds_d1a9y -> case ds_d1a9y of _ { Z_ -> Z `cast` ... }

$fGeneric0Z__$cobj0
$fGeneric0Z__$cobj0 = \ @ p1_tQK @ p0_tQL _ -> Z_

$fGeneric0Z__$crep0
$fGeneric0Z__$crep0 =
  \ @ p1_tQB @ p0_tQC ds_d1a8Y ->
    case ds_d1a8Y of _ { Z_ -> (U) `cast` ... }

$fGeneric0Z_
$fGeneric0Z_ = D:Generic0 $fGeneric0Z__$crep0 $fGeneric0Z__$cobj0

$fDC0S__$crejoin0
$fDC0S__$crejoin0 =
  \ ds_d1a8V ->
    case ds_d1a8V of _ { S_ x0_a17HX -> (S x0_a17HX) `cast` ... }

$fGeneric0S__$cobj0
$fGeneric0S__$cobj0 =
  \ @ p1_tQq @ p0_tQr ds_d1a8A -> S_ (ds_d1a8A `cast` ...)

$fGeneric0S__$crep0
$fGeneric0S__$crep0 =
  \ @ p1_tQf @ p0_tQg ds_d1a8h ->
    case ds_d1a8h of _ { S_ x0_a17HV -> x0_a17HV `cast` ... }

$fGeneric0S_
$fGeneric0S_ = D:Generic0 $fGeneric0S__$crep0 $fGeneric0S__$cobj0

$fDT0Nat1
$fDT0Nat1 = \ @ p1_tPT @ p0_tPU -> L (Z_ `cast` ...)

$fDT0Nat_$cdisband0
$fDT0Nat_$cdisband0 =
  \ @ p1_tPT @ p0_tPU ds_d1a7T ->
    case ds_d1a7T of _ {
      Z -> ($fDT0Nat1) `cast` ...;
      S x0_a17HU -> (R ((S_ x0_a17HU) `cast` ...)) `cast` ...
    }

$fDT0Nat2
$fDT0Nat2 =
  \ @ p1_XXG @ p0_XXI ds_XeZJ ->
    case ds_XeZJ of _ {
      L x_ae6I -> case x_ae6I of _ { __DEFAULT -> Z };
      R x_ae6J ->
        case x_ae6J `cast` ... of _ { S_ x0_a17HX -> S x0_a17HX }
    }

$fDT0Nat_$dReband0
$fDT0Nat_$dReband0 = $fDT0Nat2 `cast` ...

$fDT0Nat
$fDT0Nat = D:DT0 ($fDT0Nat2 `cast` ...) $fDT0Nat_$cdisband0

$fDC0Z_
$fDC0Z_ =
  D:DC0 $fGeneric0Z_ ($fDT0Nat `cast` ...) $fDC0Z__$crejoin0

$fDC0S_
$fDC0S_ =
  D:DC0 $fGeneric0S_ ($fDT0Nat `cast` ...) $fDC0S__$crejoin0

$fDC0M2C__$crejoin0
$fDC0M2C__$crejoin0 =
  \ ds_d1a7P ->
    case ds_d1a7P of _ { M2C_ x0_a17Hh -> (M2C x0_a17Hh) `cast` ... }

$fGeneric0M2C__$cobj0
$fGeneric0M2C__$cobj0 =
  \ @ p1_tN9 @ p0_tNa ds_d1a7u -> M2C_ (ds_d1a7u `cast` ...)

$fGeneric0M2C__$crep0
$fGeneric0M2C__$crep0 =
  \ @ p1_tMY @ p0_tMZ ds_d1a7b ->
    case ds_d1a7b of _ { M2C_ x0_a17Hf -> x0_a17Hf `cast` ... }

$fGeneric0M2C_
$fGeneric0M2C_ =
  D:Generic0 $fGeneric0M2C__$crep0 $fGeneric0M2C__$cobj0

$fDT0M2_$cdisband0
$fDT0M2_$cdisband0 =
  \ @ p1_tMT @ p0_tMU ds_d1a71 ->
    case ds_d1a71 of _ { M2C x0_a17He -> (M2C_ x0_a17He) `cast` ... }

$fDT0M4
$fDT0M4 =
  \ @ p1_XYa @ p0_XYc ds_Xf04 ->
    case ds_Xf04 `cast` ... of _ { M2C_ x0_a17Hh -> M2C x0_a17Hh }

$fDT0M2_$dReband0
$fDT0M2_$dReband0 = $fDT0M4 `cast` ...

$fDT0M2
$fDT0M2 = D:DT0 ($fDT0M4 `cast` ...) $fDT0M2_$cdisband0

$fDC0M2C_
$fDC0M2C_ =
  D:DC0 $fGeneric0M2C_ ($fDT0M2 `cast` ...) $fDC0M2C__$crejoin0

$fDC0M1C__$crejoin0
$fDC0M1C__$crejoin0 =
  \ ds_d1a6Y ->
    case ds_d1a6Y of _ { M1C_ x0_a17Ge x1_a17Gf x2_a17Gg x3_a17Gh ->
    (M1C x0_a17Ge x1_a17Gf x2_a17Gg x3_a17Gh) `cast` ...
    }

$fGeneric0M1C__$cobj0
$fGeneric0M1C__$cobj0 =
  \ @ p1_tKY @ p0_tKZ ds_d1a6A ->
    case ds_d1a6A `cast` ... of _ { :*: ds1_d1a6D ds2_d1a6E ->
    case ds1_d1a6D of _ { :*: x0_a17Ga x1_a17Gb ->
    case ds2_d1a6E of _ { :*: x2_a17Gc x3_a17Gd ->
    M1C_
      (x0_a17Ga `cast` ...)
      (x1_a17Gb `cast` ...)
      (x2_a17Gc `cast` ...)
      (x3_a17Gd `cast` ...)
    }
    }
    }

$fGeneric0M1C__$crep0
$fGeneric0M1C__$crep0 =
  \ @ p1_tKt @ p0_tKu ds_d1a6k ->
    case ds_d1a6k of _ { M1C_ x0_a17G6 x1_a17G7 x2_a17G8 x3_a17G9 ->
    (:*:
       (:*: (x0_a17G6 `cast` ...) (x1_a17G7 `cast` ...))
       (:*: (x2_a17G8 `cast` ...) (x3_a17G9 `cast` ...)))
    `cast` ...
    }

$fGeneric0M1C_
$fGeneric0M1C_ =
  D:Generic0 $fGeneric0M1C__$crep0 $fGeneric0M1C__$cobj0

$fDC0M1D__$crejoin0
$fDC0M1D__$crejoin0 =
  \ ds_d1a6h ->
    case ds_d1a6h of _ { M1D_ x0_a17G5 -> (M1D x0_a17G5) `cast` ... }

$fGeneric0M1D__$cobj0
$fGeneric0M1D__$cobj0 =
  \ @ p1_tKi @ p0_tKj ds_d1a5W -> M1D_ (ds_d1a5W `cast` ...)

$fGeneric0M1D__$crep0
$fGeneric0M1D__$crep0 =
  \ @ p1_tK7 @ p0_tK8 ds_d1a5D ->
    case ds_d1a5D of _ { M1D_ x0_a17G3 -> x0_a17G3 `cast` ... }

$fGeneric0M1D_
$fGeneric0M1D_ =
  D:Generic0 $fGeneric0M1D__$crep0 $fGeneric0M1D__$cobj0

$fDT0M1_$cdisband0
$fDT0M1_$cdisband0 =
  \ @ p1_tJL @ p0_tJM ds_d1a5f ->
    case ds_d1a5f of _ {
      M1C x0_a17FY x1_a17FZ x2_a17G0 x3_a17G1 ->
        (L ((M1C_ x0_a17FY x1_a17FZ x2_a17G0 x3_a17G1) `cast` ...))
        `cast` ...;
      M1D x0_a17G2 -> (R ((M1D_ x0_a17G2) `cast` ...)) `cast` ...
    }

$fDT0M3
$fDT0M3 =
  \ @ p1_XYy @ p0_XYA ds_Xf0B ->
    case ds_Xf0B of _ {
      L x_ae6I ->
        case x_ae6I `cast` ...
        of _ { M1C_ x0_a17Ge x1_a17Gf x2_a17Gg x3_a17Gh ->
        M1C x0_a17Ge x1_a17Gf x2_a17Gg x3_a17Gh
        };
      R x_ae6J ->
        case x_ae6J `cast` ... of _ { M1D_ x0_a17G5 -> M1D x0_a17G5 }
    }

$fDT0M1_$dReband0
$fDT0M1_$dReband0 = $fDT0M3 `cast` ...

$fDT0M1
$fDT0M1 = D:DT0 ($fDT0M3 `cast` ...) $fDT0M1_$cdisband0

$fDC0M1D_
$fDC0M1D_ =
  D:DC0 $fGeneric0M1D_ ($fDT0M1 `cast` ...) $fDC0M1D__$crejoin0

$fDC0M1C_
$fDC0M1C_ =
  D:DC0 $fGeneric0M1C_ ($fDT0M1 `cast` ...) $fDC0M1C__$crejoin0

$fDC1OneS__$crejoin1
$fDC1OneS__$crejoin1 =
  \ @ p0_tGC ds_d1a58 ->
    case ds_d1a58 of _ { OneS_ x0_a17Dv -> (OneS x0_a17Dv) `cast` ... }

$fGeneric1OneS__$cobj1
$fGeneric1OneS__$cobj1 =
  \ @ p1_tGs @ p0_tGt ds_d1a4Q -> OneS_ (ds_d1a4Q `cast` ...)

$fGeneric1OneS__$crep1
$fGeneric1OneS__$crep1 =
  \ @ p0_tGj @ p1_tGk ds_d1a4A ->
    case ds_d1a4A of _ { OneS_ x0_a17Dt -> x0_a17Dt `cast` ... }

$fGeneric1OneS_
$fGeneric1OneS_ =
  D:Generic1 $fGeneric1OneS__$crep1 $fGeneric1OneS__$cobj1

$fDC1BranchS__$crejoin1
$fDC1BranchS__$crejoin1 =
  \ @ p0_tGh ds_d1a4u ->
    case ds_d1a4u of _ { BranchS_ x0_a17Dr x1_a17Ds ->
    (BranchS x0_a17Dr x1_a17Ds) `cast` ...
    }

$fGeneric1BranchS__$cobj1
$fGeneric1BranchS__$cobj1 =
  \ @ p1_tG1 @ p0_tG2 ds_d1a4a ->
    case ds_d1a4a `cast` ... of _ { :*: x0_a17Dp x1_a17Dq ->
    BranchS_ (x0_a17Dp `cast` ...) (x1_a17Dq `cast` ...)
    }

$fGeneric1BranchS__$crep1
$fGeneric1BranchS__$crep1 =
  \ @ p0_tFK @ p1_tFL ds_d1a3U ->
    case ds_d1a3U of _ { BranchS_ x0_a17Dn x1_a17Do ->
    (:*: (x0_a17Dn `cast` ...) (x1_a17Do `cast` ...)) `cast` ...
    }

$fGeneric1BranchS_
$fGeneric1BranchS_ =
  D:Generic1 $fGeneric1BranchS__$crep1 $fGeneric1BranchS__$cobj1

$fDT1S_$cdisband1
$fDT1S_$cdisband1 =
  \ @ p0_tFm @ p1_tFn ds_d1a3w ->
    case ds_d1a3w of _ {
      OneS x0_a17Dk -> (L ((OneS_ x0_a17Dk) `cast` ...)) `cast` ...;
      BranchS x0_a17Dl x1_a17Dm ->
        (R ((BranchS_ x0_a17Dl x1_a17Dm) `cast` ...)) `cast` ...
    }

$fDT1S1
$fDT1S1 =
  \ @ p1_XYS @ p0_XYU ds_Xf14 ->
    case ds_Xf14 of _ {
      L x_ae6A ->
        case x_ae6A `cast` ... of _ { OneS_ x0_a17Dv -> OneS x0_a17Dv };
      R x_ae6B ->
        case x_ae6B `cast` ... of _ { BranchS_ x0_a17Dr x1_a17Ds ->
        BranchS x0_a17Dr x1_a17Ds
        }
    }

$fDT1S_$dReband1
$fDT1S_$dReband1 = $fDT1S1 `cast` ...

$fDT1S
$fDT1S = D:DT1 ($fDT1S1 `cast` ...) $fDT1S_$cdisband1

$fDC1OneS_
$fDC1OneS_ =
  D:DC1 $fGeneric1OneS_ ($fDT1S `cast` ...) $fDC1OneS__$crejoin1

$fDC1BranchS_
$fDC1BranchS_ =
  D:DC1
    $fGeneric1BranchS_ ($fDT1S `cast` ...) $fDC1BranchS__$crejoin1

$fInvariantS_$cinvmap
$fInvariantS_$cinvmap =
  \ @ a_tFh @ b_tFi eta_B2 _ x_X135 ->
    case x_X135 of _ {
      OneS x0_a17Dk -> OneS (eta_B2 x0_a17Dk);
      BranchS x0_a17Dl x1_a17Dm -> BranchS x0_a17Dl x1_a17Dm
    }

$fInvariantS
$fInvariantS = $fInvariantS_$cinvmap `cast` ...

$fDC0OneS__$crejoin0
$fDC0OneS__$crejoin0 =
  \ @ a0_a17zi _ _ _ ds_d1a3h ->
    case ds_d1a3h of _ { OneS_ x0_a17Dj -> (OneS x0_a17Dj) `cast` ... }

lvl99_r1f0v
lvl99_r1f0v =
  \ @ a0_a17zi ds_d1a3h ->
    case ds_d1a3h of _ { OneS_ x0_a17Dj -> (OneS x0_a17Dj) `cast` ... }

$fDC0OneS_
$fDC0OneS_ =
  \ @ a0_a17zi $dGeneric0_a17EJ $dDT0_a17EK _ ->
    D:DC0 $dGeneric0_a17EJ $dDT0_a17EK (lvl99_r1f0v)

$fGeneric0OneS__$cobj0
$fGeneric0OneS__$cobj0 =
  \ @ a0_a17zi _ @ p1_tF5 @ p0_tF6 ds_d1a2Y ->
    OneS_ (ds_d1a2Y `cast` ...)

$fGeneric0OneS__$crep0
$fGeneric0OneS__$crep0 =
  \ @ a0_a17zi _ @ p1_tEV @ p0_tEW ds_d1a2H ->
    case ds_d1a2H of _ { OneS_ x0_a17Dh -> x0_a17Dh `cast` ... }

lvl100_r1f0w
lvl100_r1f0w =
  \ @ a0_a17zi @ p1_tEV @ p0_tEW ds_d1a2H ->
    case ds_d1a2H of _ { OneS_ x0_a17Dh -> x0_a17Dh `cast` ... }

lvl101_r1f0x
lvl101_r1f0x =
  \ @ a0_a17zi @ p1_tF5 @ p0_tF6 ds_d1a2Y ->
    OneS_ (ds_d1a2Y `cast` ...)

lvl102_r1f0y
lvl102_r1f0y =
  \ @ a0_a17zi -> D:Generic0 (lvl100_r1f0w) (lvl101_r1f0x)

$fGeneric0OneS_
$fGeneric0OneS_ = \ @ a0_a17zi _ -> lvl102_r1f0y

$fDC0BranchS__$crejoin0
$fDC0BranchS__$crejoin0 =
  \ @ a0_a17zi _ _ _ ds_d1a2u ->
    case ds_d1a2u of _ { BranchS_ x0_a17Df x1_a17Dg ->
    (BranchS x0_a17Df x1_a17Dg) `cast` ...
    }

lvl103_r1f0z
lvl103_r1f0z =
  \ @ a0_a17zi ds_d1a2u ->
    case ds_d1a2u of _ { BranchS_ x0_a17Df x1_a17Dg ->
    (BranchS x0_a17Df x1_a17Dg) `cast` ...
    }

$fDC0BranchS_
$fDC0BranchS_ =
  \ @ a0_a17zi $dGeneric0_a17Ei $dDT0_a17Ej _ ->
    D:DC0 $dGeneric0_a17Ei $dDT0_a17Ej (lvl103_r1f0z)

$fGeneric0BranchS__$cobj0
$fGeneric0BranchS__$cobj0 =
  \ @ a0_a17zi _ @ p1_tEE @ p0_tEF ds_d1a29 ->
    case ds_d1a29 `cast` ... of _ { :*: x0_a17Dd x1_a17De ->
    BranchS_ (x0_a17Dd `cast` ...) (x1_a17De `cast` ...)
    }

$fGeneric0BranchS__$crep0
$fGeneric0BranchS__$crep0 =
  \ @ a0_a17zi _ @ p1_tEn @ p0_tEo ds_d1a1S ->
    case ds_d1a1S of _ { BranchS_ x0_a17Db x1_a17Dc ->
    (:*: (x0_a17Db `cast` ...) (x1_a17Dc `cast` ...)) `cast` ...
    }

lvl104_r1f0A
lvl104_r1f0A =
  \ @ a0_a17zi @ p1_tEn @ p0_tEo ds_d1a1S ->
    case ds_d1a1S of _ { BranchS_ x0_a17Db x1_a17Dc ->
    (:*: (x0_a17Db `cast` ...) (x1_a17Dc `cast` ...)) `cast` ...
    }

lvl105_r1f0B
lvl105_r1f0B =
  \ @ a0_a17zi @ p1_tEE @ p0_tEF ds_d1a29 ->
    case ds_d1a29 `cast` ... of _ { :*: x0_a17Dd x1_a17De ->
    BranchS_ (x0_a17Dd `cast` ...) (x1_a17De `cast` ...)
    }

lvl106_r1f0C
lvl106_r1f0C =
  \ @ a0_a17zi -> D:Generic0 (lvl104_r1f0A) (lvl105_r1f0B)

$fGeneric0BranchS_
$fGeneric0BranchS_ = \ @ a0_a17zi _ -> lvl106_r1f0C

$fDT0S_$cdisband0
$fDT0S_$cdisband0 =
  \ @ a0_a17zi _ _ @ p1_tDZ @ p0_tE0 ds_d1a1o ->
    case ds_d1a1o of _ {
      OneS x0_a17D8 -> (L ((OneS_ x0_a17D8) `cast` ...)) `cast` ...;
      BranchS x0_a17D9 x1_a17Da ->
        (R ((BranchS_ x0_a17D9 x1_a17Da) `cast` ...)) `cast` ...
    }

$fDT0S
$fDT0S =
  \ @ a0_a17zi $dReband0_a17DR cobox_a17DS ->
    D:DT0
      $dReband0_a17DR ($fDT0S_$cdisband0 $dReband0_a17DR cobox_a17DS)

$fDC1One__$crejoin1
$fDC1One__$crejoin1 =
  \ @ p0_twW ds_d1a1h ->
    case ds_d1a1h of _ { One_ x0_a17zS -> (One x0_a17zS) `cast` ... }

$fGeneric1One__$cobj1
$fGeneric1One__$cobj1 =
  \ @ p1_twM @ p0_twN ds_d1a0Z -> One_ (ds_d1a0Z `cast` ...)

$fGeneric1One__$crep1
$fGeneric1One__$crep1 =
  \ @ p0_twD @ p1_twE ds_d1a0J ->
    case ds_d1a0J of _ { One_ x0_a17zQ -> x0_a17zQ `cast` ... }

$fGeneric1One_
$fGeneric1One_ =
  D:Generic1 $fGeneric1One__$crep1 $fGeneric1One__$cobj1

$fDC1Branch__$crejoin1
$fDC1Branch__$crejoin1 =
  \ @ p0_twB ds_d1a0D ->
    case ds_d1a0D of _ { Branch_ x0_a17zO x1_a17zP ->
    (Branch x0_a17zO x1_a17zP) `cast` ...
    }

$fDT1T_$cdisband1
$fDT1T_$cdisband1 =
  \ @ p0_ts7 @ p1_ts8 ds_d19Z2 ->
    case ds_d19Z2 of _ {
      One x0_a17zy -> (L ((One_ x0_a17zy) `cast` ...)) `cast` ...;
      Branch x0_a17zz x1_a17zA ->
        (R ((Branch_ x0_a17zz x1_a17zA) `cast` ...)) `cast` ...
    }

$fDT1T1
$fDT1T1 =
  \ @ p1_X1TF @ p0_X1TI ds_Xf3P ->
    case ds_Xf3P of _ {
      L x_ae6A ->
        case x_ae6A `cast` ... of _ { One_ x0_a17zS -> One x0_a17zS };
      R x_ae6B ->
        case x_ae6B `cast` ... of _ { Branch_ x0_a17zO x1_a17zP ->
        Branch x0_a17zO x1_a17zP
        }
    }

$fDT1T_$dReband1
$fDT1T_$dReband1 = $fDT1T1 `cast` ...

$fDT1T
$fDT1T = D:DT1 ($fDT1T1 `cast` ...) $fDT1T_$cdisband1

$fDC1One_
$fDC1One_ =
  D:DC1 $fGeneric1One_ ($fDT1T `cast` ...) $fDC1One__$crejoin1

Rec {
$fGeneric1Branch_3
$fGeneric1Branch_3 =
  \ @ p0_tsv @ p1_tsw x_X1W5 ->
    $fGeneric1Branch__$cinvmap
      (($fGeneric1Branch_1) `cast` ...) ((unPar2) `cast` ...) x_X1W5

$fGeneric1Branch__x
$fGeneric1Branch__x =
  \ @ p1_tuu @ p0_tuv x_a123 ->
    $fGeneric1Branch__$cinvmap
      ((unPar2) `cast` ...)
      (($fGeneric1Branch_1) `cast` ...)
      (x_a123 `cast` ...)

$fGeneric1Branch__$cinvmap
$fGeneric1Branch__$cinvmap =
  \ @ a_ts2 @ b_ts3 eta_B2 eta1_XTH x_X135 ->
    case x_X135 of _ {
      One x0_a17zy -> One (eta_B2 x0_a17zy);
      Branch x0_a17zz x1_a17zA ->
        Branch
          (case x0_a17zz of _ { (x2_a1cnB, y_a1cnC) ->
           $fGeneric1Branch__$cinvmap
             ((unPar2) `cast` ...)
             (($fGeneric1Branch_1) `cast` ...)
             ($fGeneric1Branch__$cinvmap
                ((\ ds3_dgtB -> eta_B2 (ds3_dgtB `cast` ...)) `cast` ...)
                ((\ ds3_dgtB -> eta1_XTH (ds3_dgtB `cast` ...)) `cast` ...)
                ($fGeneric1Branch__$cinvmap
                   (($fGeneric1Branch_1) `cast` ...) ((unPar2) `cast` ...) x2_a1cnB))
           },
           case x0_a17zz of _ { (x2_a1cnG, y_a1cnH) ->
           let {
             lvl115_s1etz
             lvl115_s1etz = \ ds3_dgtB -> eta1_XTH (ds3_dgtB `cast` ...) } in
           let {
             lvl116_s1ety
             lvl116_s1ety = \ ds3_dgtB -> eta_B2 (ds3_dgtB `cast` ...) } in
           map
             ($fGeneric1Branch__x)
             (map
                ((\ ds_Xhmj ->
                    $fGeneric1Branch__$cinvmap
                      (lvl116_s1ety `cast` ...)
                      (lvl115_s1etz `cast` ...)
                      (ds_Xhmj `cast` ...))
                 `cast` ...)
                (map (($fGeneric1Branch_3) `cast` ...) y_a1cnH))
           })
          x1_a17zA
    }
end Rec }

$fGeneric1Branch__$cobj1
$fGeneric1Branch__$cobj1 =
  \ @ p1_abpN @ p0_abpO w_s1dCV ->
    case w_s1dCV `cast` ... of _ { :*: x0_a17zH x1_a17zI ->
    Branch_
      (case x0_a17zH `cast` ... of _ { (x_a1cnB, _) ->
       $fGeneric1Branch__$cinvmap
         ((unPar2) `cast` ...)
         (($fGeneric1Branch_1) `cast` ...)
         (x_a1cnB `cast` ...)
       },
       case x0_a17zH `cast` ... of _ { (_, y_a1cnH) ->
       map ($fGeneric1Branch__x) (y_a1cnH `cast` ...)
       })
      (x1_a17zI `cast` ...)
    }

$fGeneric1Branch_2
$fGeneric1Branch_2 =
  \ @ p0_XbOB @ p1_XbOD ww_s1dD1 ww1_s1dD2 ->
    :*:
      ((case ww_s1dD1 of _ { (x_a1cnB, y_a1cnC) ->
        ($fGeneric1Branch__$cinvmap
           (($fGeneric1Branch_1) `cast` ...) ((unPar2) `cast` ...) x_a1cnB)
        `cast` ...
        },
        case ww_s1dD1 of _ { (x_a1cnG, y_a1cnH) ->
        (map (($fGeneric1Branch_3) `cast` ...) y_a1cnH) `cast` ...
        })
       `cast` ...)
      (ww1_s1dD2 `cast` ...)

$fGeneric1Branch__$crep1
$fGeneric1Branch__$crep1 =
  \ @ p0_XbOH @ p1_XbOJ w_s1dCZ ->
    case w_s1dCZ of _ { Branch_ ww_X1e21 ww1_X1e23 ->
    ($fGeneric1Branch_2 ww_X1e21 ww1_X1e23) `cast` ...
    }

$fInvariantT
$fInvariantT = $fGeneric1Branch__$cinvmap `cast` ...

$fGeneric1Branch_
$fGeneric1Branch_ =
  D:Generic1 $fGeneric1Branch__$crep1 $fGeneric1Branch__$cobj1

$fDC1Branch_
$fDC1Branch_ =
  D:DC1 $fGeneric1Branch_ ($fDT1T `cast` ...) $fDC1Branch__$crejoin1

$fDC0One__$crejoin0
$fDC0One__$crejoin0 =
  \ @ a0_a17nJ _ _ _ ds_d19YN ->
    case ds_d19YN of _ { One_ x0_a17zx -> (One x0_a17zx) `cast` ... }

lvl107_r1f0D
lvl107_r1f0D =
  \ @ a0_a17nJ ds_d19YN ->
    case ds_d19YN of _ { One_ x0_a17zx -> (One x0_a17zx) `cast` ... }

$fDC0One_
$fDC0One_ =
  \ @ a0_a17nJ $dGeneric0_a17Bh $dDT0_a17Bi _ ->
    D:DC0 $dGeneric0_a17Bh $dDT0_a17Bi (lvl107_r1f0D)

$fGeneric0One__$cobj0
$fGeneric0One__$cobj0 =
  \ @ a0_a17nJ _ @ p1_trQ @ p0_trR ds_d19Yu ->
    One_ (ds_d19Yu `cast` ...)

$fGeneric0One__$crep0
$fGeneric0One__$crep0 =
  \ @ a0_a17nJ _ @ p1_trG @ p0_trH ds_d19Yd ->
    case ds_d19Yd of _ { One_ x0_a17zv -> x0_a17zv `cast` ... }

lvl108_r1f0E
lvl108_r1f0E =
  \ @ a0_a17nJ @ p1_trG @ p0_trH ds_d19Yd ->
    case ds_d19Yd of _ { One_ x0_a17zv -> x0_a17zv `cast` ... }

lvl109_r1f0F
lvl109_r1f0F =
  \ @ a0_a17nJ @ p1_trQ @ p0_trR ds_d19Yu ->
    One_ (ds_d19Yu `cast` ...)

lvl110_r1f0G
lvl110_r1f0G =
  \ @ a0_a17nJ -> D:Generic0 (lvl108_r1f0E) (lvl109_r1f0F)

$fGeneric0One_
$fGeneric0One_ = \ @ a0_a17nJ _ -> lvl110_r1f0G

$fDC0Branch__$crejoin0
$fDC0Branch__$crejoin0 =
  \ @ a0_a17nJ _ _ _ ds_d19Y2 ->
    case ds_d19Y2 of _ { Branch_ x0_a17zt x1_a17zu ->
    (Branch x0_a17zt x1_a17zu) `cast` ...
    }

lvl111_r1f0H
lvl111_r1f0H =
  \ @ a0_a17nJ ds_d19Y2 ->
    case ds_d19Y2 of _ { Branch_ x0_a17zt x1_a17zu ->
    (Branch x0_a17zt x1_a17zu) `cast` ...
    }

$fDC0Branch_
$fDC0Branch_ =
  \ @ a0_a17nJ $dGeneric0_a17AQ $dDT0_a17AR _ ->
    D:DC0 $dGeneric0_a17AQ $dDT0_a17AR (lvl111_r1f0H)

$fGeneric0Branch__$cobj0
$fGeneric0Branch__$cobj0 =
  \ @ a0_a17nJ _ @ p1_tqx @ p0_tqy ds_d19Xu ->
    case ds_d19Xu `cast` ... of _ { :*: x0_a17zp x1_a17zq ->
    Branch_
      (case x0_a17zp `cast` ... of _ { (x_a1cnB, _) ->
       x_a1cnB `cast` ...
       },
       case x0_a17zp `cast` ... of _ { (_, y_a1cnH) ->
       map ((unRec3) `cast` ...) (y_a1cnH `cast` ...)
       })
      (x1_a17zq `cast` ...)
    }

$fGeneric0Branch_1
$fGeneric0Branch_1 = \ @ a0_a17nJ tpl_X2bj -> tpl_X2bj

$fGeneric0Branch__$crep0
$fGeneric0Branch__$crep0 =
  \ @ a0_a17nJ _ @ p1_tps @ p0_tpt ds_d19WY ->
    case ds_d19WY of _ { Branch_ x0_a17zm x1_a17zn ->
    (:*:
       ((case x0_a17zm of _ { (x_a1cnB, y_a1cnC) -> x_a1cnB `cast` ... },
         case x0_a17zm of _ { (x_a1cnG, y_a1cnH) ->
         (map (($fGeneric0Branch_1) `cast` ...) y_a1cnH) `cast` ...
         })
        `cast` ...)
       (x1_a17zn `cast` ...))
    `cast` ...
    }

$fGeneric0Branch_
$fGeneric0Branch_ =
  \ @ a0_a17nJ cobox_a17Ap ->
    D:Generic0
      ($fGeneric0Branch__$crep0 cobox_a17Ap)
      ($fGeneric0Branch__$cobj0 cobox_a17Ap)

$fDT0T_$cdisband0
$fDT0T_$cdisband0 =
  \ @ a0_a17nJ _ _ @ p1_tp4 @ p0_tp5 ds_d19Ww ->
    case ds_d19Ww of _ {
      One x0_a17zj -> (L ((One_ x0_a17zj) `cast` ...)) `cast` ...;
      Branch x0_a17zk x1_a17zl ->
        (R ((Branch_ x0_a17zk x1_a17zl) `cast` ...)) `cast` ...
    }

$fDT0T
$fDT0T =
  \ @ a0_a17nJ $dReband0_a17Ad cobox_a17Ae ->
    D:DT0
      $dReband0_a17Ad ($fDT0T_$cdisband0 $dReband0_a17Ad cobox_a17Ae)

$fMinInfoNonRec(->)Dep2_$cminInfoNonRec
$fMinInfoNonRec(->)Dep2_$cminInfoNonRec =
  \ @ ff_a17pP
    @ rB_a17pQ
    @ rA_a17pR
    $dMinCtors_a17ym
    $dMinInfoNonRec_a17yn
    $dMinInfoNonRec1_a17yo
    _ ->
    plug10'
      (($dMinCtors_a17ym `cast` ...) (Proxy))
      (($dMinInfoNonRec_a17yn `cast` ...) (Proxy))
      (($dMinInfoNonRec1_a17yo `cast` ...) (Proxy))

$fMinInfoNonRec(->)Dep2
$fMinInfoNonRec(->)Dep2 =
  $fMinInfoNonRec(->)Dep2_$cminInfoNonRec `cast` ...

$fMinInfoRec(->)kVoidts_$cminInfoRec
$fMinInfoRec(->)kVoidts_$cminInfoRec =
  \ @ k_a17qY @ t_a17pN @ ts_a17pO $dVRepeat_a17yf _ _ ->
    minima1ToSiblingInT
      $dVRepeat_a17yf ($fMinCtors(->)Even20 `cast` ...)

$fMinInfoRec(->)kVoidts
$fMinInfoRec(->)kVoidts =
  $fMinInfoRec(->)kVoidts_$cminInfoRec `cast` ...

$fMinInfoNonRec(->)Void1
$fMinInfoNonRec(->)Void1 = \ @ t_a17pM _ -> $fMinCtors(->)Even20

$fMinInfoNonRec(->)Void_$cminInfoNonRec
$fMinInfoNonRec(->)Void_$cminInfoNonRec =
  $fMinInfoNonRec(->)Void1 `cast` ...

$fMinInfoNonRec(->)Void
$fMinInfoNonRec(->)Void = $fMinInfoNonRec(->)Void1 `cast` ...

$fMinInfoRec(->)kN2ts_$cminInfoRec
$fMinInfoRec(->)kN2ts_$cminInfoRec =
  \ @ k_a17qV @ dc_a17pE @ ts_a17pF $dMinInfoRec_a17xx _ ->
    ($dMinInfoRec_a17xx `cast` ...) (Proxy)

$fMinInfoRec(->)kN2ts
$fMinInfoRec(->)kN2ts =
  $fMinInfoRec(->)kN2ts_$cminInfoRec `cast` ...

lvl112_r1f0I
lvl112_r1f0I = map (id) $fMinCtors(->)(,)7

$fMinInfoRec(->)kPar1ts_$cminInfoRec
$fMinInfoRec(->)kPar1ts_$cminInfoRec =
  \ @ k_a17qO @ ts_a17pb $dVRepeat_a17vR _ _ _ ->
    let {
      lvl115_s1c36
      lvl115_s1c36 = ($dVRepeat_a17vR `cast` ...) $fMinCtors(->)(,)3 } in
    (mapKeysMonotonic
       (\ ds1_d19UT ->
          case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
          (lvl115_s1c36, np1_a17ow, np0_a17ox)
          })
       lvl112_r1f0I)
    `cast` ...

$fMinInfoRec(->)kPar1ts
$fMinInfoRec(->)kPar1ts =
  $fMinInfoRec(->)kPar1ts_$cminInfoRec `cast` ...

$fRegularishPar1Par0_$cregularish
$fRegularishPar1Par0_$cregularish =
  \ @ a_tdh x_a17oY _ -> x_a17oY (Eq# @~ <Par1>) (Eq# @~ <Par0>)

$fRegularishPar1Par0
$fRegularishPar1Par0 = $fRegularishPar1Par0_$cregularish `cast` ...

$fRegularishPar0Par1_$cregularish
$fRegularishPar0Par1_$cregularish =
  \ @ a_tdg _ y_a17oX -> y_a17oX (Eq# @~ <Par0>) (Eq# @~ <Par1>)

$fRegularishPar0Par1
$fRegularishPar0Par1 = $fRegularishPar0Par1_$cregularish `cast` ...

Rec {
$fMinInfoRec(->)kRec2ts_w
$fMinInfoRec(->)kRec2ts_w =
  \ @ k1_t9b @ ts1_t9c ds1_d8fQ ds2_d8fR ->
    case ds1_d8fQ of _ {
      ZIdx @ t_a81l @ ts2_a81m rb_d8qa ->
        case ds2_d8fR of _ {
          VNil ipv_s8qW -> cvUpd1;
          VCons @ t1_a81o @ ts3_a81p rb1_d8q8 a_a7VW as_a7VX ->
            (VCons
               @~ <(':) k1_t9b t1_a81o ts3_a81p>
               ($fMinCtors(->)(,)5 `cast` ...)
               as_a7VX)
            `cast` ...
        };
      SIdx @ ts2_a81w @ t_a81x rb_d8pM idx1_a7VY ->
        case ds2_d8fR of _ {
          VNil ipv_s8qZ -> cvUpd1;
          VCons @ t1_a81z @ ts3_a81A rb1_d8pK a_a7VZ as_a7W0 ->
            (VCons
               @~ <(':) k1_t9b t1_a81z ts2_a81w>
               a_a7VZ
               ($fMinInfoRec(->)kRec2ts_w idx1_a7VY (as_a7W0 `cast` ...)))
            `cast` ...
        }
    }
end Rec }

$wa13
$wa13 =
  \ @ k_a17qK
    @ lbl_a17oQ
    @ t_a17oR
    @ r_a17oS
    @ s_a17oT
    @ ts_a17oU
    w_s1dDb
    w1_s1dDc
    w2_s1dDe ->
    Bin
      1
      (($fMinInfoRec(->)kRec2ts_w
          ((w_s1dDb `cast` ...) (Proxy) w2_s1dDe)
          (((w1_s1dDc `cast` ...) $fMinCtors(->)(,)3) `cast` ...))
       `cast` ...,
       $fMinCtors(->)(,)3,
       $fMinCtors(->)(,)3)
      ($fMinCtors(->)(,)3 `cast` ...)
      (Tip)
      (Tip)

$fMinInfoRec(->)kRec2ts1
$fMinInfoRec(->)kRec2ts1 =
  \ @ k_a17qK
    @ lbl_a17oQ
    @ t_a17oR
    @ r_a17oS
    @ s_a17oT
    @ ts_a17oU
    _
    w1_s1dDb
    w2_s1dDc
    _
    w4_s1dDe ->
    $wa13 w1_s1dDb w2_s1dDc w4_s1dDe

$fMinInfoRec(->)kRec2ts_$cminInfoRec
$fMinInfoRec(->)kRec2ts_$cminInfoRec =
  $fMinInfoRec(->)kRec2ts1 `cast` ...

$fMinInfoRec(->)kRec2ts
$fMinInfoRec(->)kRec2ts = $fMinInfoRec(->)kRec2ts1 `cast` ...

$fMinCtors*Integer1
$fMinCtors*Integer1 = \ _ -> $fMinCtors(->)S3

$fMinCtors*Integer_$cminCtors
$fMinCtors*Integer_$cminCtors = $fMinCtors*Integer1 `cast` ...

$fMinCtors*Integer
$fMinCtors*Integer = $fMinCtors*Integer1 `cast` ...

$fMinCtors*Char1
$fMinCtors*Char1 = \ _ -> $fMinCtors(->)S3

$fMinCtors*Char_$cminCtors
$fMinCtors*Char_$cminCtors = $fMinCtors*Char1 `cast` ...

$fMinCtors*Char
$fMinCtors*Char = $fMinCtors*Char1 `cast` ...

$fMinCtors*Float1
$fMinCtors*Float1 = \ _ -> $fMinCtors(->)S3

$fMinCtors*Float_$cminCtors
$fMinCtors*Float_$cminCtors = $fMinCtors*Float1 `cast` ...

$fMinCtors*Float
$fMinCtors*Float = $fMinCtors*Float1 `cast` ...

$fMinCtors*Double1
$fMinCtors*Double1 = \ _ -> $fMinCtors(->)S3

$fMinCtors*Double_$cminCtors
$fMinCtors*Double_$cminCtors = $fMinCtors*Double1 `cast` ...

$fMinCtors*Double
$fMinCtors*Double = $fMinCtors*Double1 `cast` ...

$fMinCtors*Word1
$fMinCtors*Word1 = \ _ -> $fMinCtors(->)S3

$fMinCtors*Word8_$cminCtors
$fMinCtors*Word8_$cminCtors = $fMinCtors*Word1 `cast` ...

$fMinCtors*Word8
$fMinCtors*Word8 = $fMinCtors*Word1 `cast` ...

$wa8
$wa8 =
  \ @ a_a18bP @ b_a18bQ w_s1dDj w1_s1dDk ->
    unionWithKey
      $fMinCtors(->)Either_$dOrd
      ($fMinCtors(->)Either4 `cast` ...)
      (map
         ($fEnumInt_$csucc `cast` ...)
         (((w_s1dDj `cast` ...) (Proxy)) `cast` ...))
      (map
         ($fEnumInt_$csucc `cast` ...)
         (((w1_s1dDk `cast` ...) (Proxy)) `cast` ...))

$fMinCtors*Either1
$fMinCtors*Either1 =
  \ @ a_a18bP @ b_a18bQ w_s1dDj w1_s1dDk _ -> $wa8 w_s1dDj w1_s1dDk

$fMinCtors*Either_$cminCtors
$fMinCtors*Either_$cminCtors = $fMinCtors*Either1 `cast` ...

$fMinCtors*Either
$fMinCtors*Either = $fMinCtors*Either1 `cast` ...

$fMinCtors(->)Either2
$fMinCtors(->)Either2 = \ @ a_a18bR _ -> lvl8_r1eZ2

$fMinCtors(->)Either1
$fMinCtors(->)Either1 =
  \ @ a_X18Ff $dMinCtors_a18du _ ->
    unionWithKey
      $fMinCtors(->)Either_$dOrd
      ($fMinCtors(->)Either4 `cast` ...)
      (map
         ($fEnumInt_$csucc `cast` ...)
         ((($dMinCtors_a18du `cast` ...) (Proxy)) `cast` ...))
      (map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)(,)2)

$fMinCtors(->)Either_$cminCtors
$fMinCtors(->)Either_$cminCtors = $fMinCtors(->)Either1 `cast` ...

$fMinCtors(->)Either
$fMinCtors(->)Either = $fMinCtors(->)Either1 `cast` ...

$fMinCtors*Maybe2
$fMinCtors*Maybe2 = \ @ a_a18bT _ -> lvl_r1eYU

$fMinCtors*Maybe1
$fMinCtors*Maybe1 =
  \ @ a_X18Fo $dMinCtors_a18dW _ ->
    unionWithKey
      $fMinCtors(->)Either_$dOrd
      ($fMinCtors(->)Either4 `cast` ...)
      (map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)Even20)
      (map
         ($fEnumInt_$csucc `cast` ...)
         ((($dMinCtors_a18dW `cast` ...) (Proxy)) `cast` ...))

$fMinCtors*Maybe_$cminCtors
$fMinCtors*Maybe_$cminCtors = $fMinCtors*Maybe1 `cast` ...

$fMinCtors*Maybe
$fMinCtors*Maybe = $fMinCtors*Maybe1 `cast` ...

$fMinCtors*(,,)1
$fMinCtors*(,,)1 =
  \ @ a_a18bU
    @ b_a18bV
    @ c_a18bW
    $dMinCtors_a18ea
    $dMinCtors1_a18eb
    $dMinCtors2_a18ec
    _ ->
    map
      ($fEnumInt_$csucc `cast` ...)
      ((addMinima1
          (($dMinCtors_a18ea `cast` ...) (Proxy))
          (addMinima1
             (($dMinCtors1_a18eb `cast` ...) (Proxy))
             (($dMinCtors2_a18ec `cast` ...) (Proxy))))
       `cast` ...)

$fMinCtors*(,,)_$cminCtors
$fMinCtors*(,,)_$cminCtors = $fMinCtors*(,,)1 `cast` ...

$fMinCtors*(,,)
$fMinCtors*(,,) = $fMinCtors*(,,)1 `cast` ...

$fMinCtors(->)(,,)1
$fMinCtors(->)(,,)1 =
  \ @ a_a18bX @ b_a18bY $dMinCtors_a18ek $dMinCtors1_a18el _ ->
    map
      ($fEnumInt_$csucc `cast` ...)
      ((addMinima1
          (($dMinCtors_a18ek `cast` ...) (Proxy))
          (addMinima1
             (($dMinCtors1_a18el `cast` ...) (Proxy))
             ($fMinCtors(->)(,)2 `cast` ...)))
       `cast` ...)

$fMinCtors(->)(,,)_$cminCtors
$fMinCtors(->)(,,)_$cminCtors = $fMinCtors(->)(,,)1 `cast` ...

$fMinCtors(->)(,,)
$fMinCtors(->)(,,) = $fMinCtors(->)(,,)1 `cast` ...

$wa
$wa =
  \ @ a_a18bZ w_s1dDp ->
    map
      ($fEnumInt_$csucc `cast` ...)
      ((addMinima1 ((w_s1dDp `cast` ...) (Proxy)) $fMinCtors(->)(,,)3)
       `cast` ...)

$fMinCtors(->)(,,)2
$fMinCtors(->)(,,)2 = \ @ a_a18bZ w_s1dDp _ -> $wa w_s1dDp

$fMinCtors(->)(,,)0_$cminCtors
$fMinCtors(->)(,,)0_$cminCtors = $fMinCtors(->)(,,)2 `cast` ...

$fMinCtors(->)(,,)0
$fMinCtors(->)(,,)0 = $fMinCtors(->)(,,)2 `cast` ...

$fMinCtors*(,)1
$fMinCtors*(,)1 =
  \ @ a_a18c0 @ b_a18c1 $dMinCtors_a18eB $dMinCtors1_a18eC _ ->
    map
      ($fEnumInt_$csucc `cast` ...)
      ((addMinima1
          (($dMinCtors_a18eB `cast` ...) (Proxy))
          (($dMinCtors1_a18eC `cast` ...) (Proxy)))
       `cast` ...)

$fMinCtors*(,)_$cminCtors
$fMinCtors*(,)_$cminCtors = $fMinCtors*(,)1 `cast` ...

$fMinCtors*(,)
$fMinCtors*(,) = $fMinCtors*(,)1 `cast` ...

$fMinCtors(->)(,)1
$fMinCtors(->)(,)1 =
  \ @ a_a18c2 $dMinCtors_a18eK _ ->
    map
      ($fEnumInt_$csucc `cast` ...)
      ((addMinima1
          (($dMinCtors_a18eK `cast` ...) (Proxy))
          ($fMinCtors(->)(,)2 `cast` ...))
       `cast` ...)

$fMinCtors(->)(,)_$cminCtors
$fMinCtors(->)(,)_$cminCtors = $fMinCtors(->)(,)1 `cast` ...

$fMinCtors(->)(,)
$fMinCtors(->)(,) = $fMinCtors(->)(,)1 `cast` ...

$fMinCtors*Ratio1
$fMinCtors*Ratio1 =
  \ @ a_a18c3 $dMinCtors_a18f4 _ ->
    map
      ($fEnumInt_$csucc `cast` ...)
      ((addMinima1
          (($dMinCtors_a18f4 `cast` ...) (Proxy))
          (($dMinCtors_a18f4 `cast` ...) (Proxy)))
       `cast` ...)

$fMinCtors*Ratio_$cminCtors
$fMinCtors*Ratio_$cminCtors = $fMinCtors*Ratio1 `cast` ...

$fMinCtors*Ratio
$fMinCtors*Ratio = $fMinCtors*Ratio1 `cast` ...

lvl113_r1f0J
lvl113_r1f0J =
  map ($fEnumInt_$csucc `cast` ...) (lvl9_r1eZ3 `cast` ...)

$fMinCtors*S2
$fMinCtors*S2 = \ @ a_a18c6 _ -> lvl113_r1f0J

$fMinCtors*S1
$fMinCtors*S1 =
  \ @ a_X18FU $dMinCtors_a18ge _ ->
    unionWithKey
      $fMinCtors(->)Either_$dOrd
      ($fMinCtors(->)Either4 `cast` ...)
      (map
         ($fEnumInt_$csucc `cast` ...)
         ((($dMinCtors_a18ge `cast` ...) (Proxy)) `cast` ...))
      (map
         ($fEnumInt_$csucc `cast` ...)
         ((addMinima1
             ($fMinCtors(->)S3 `cast` ...) ($fMinCtors(->)S3 `cast` ...))
          `cast` ...))

$fMinCtors*S_$cminCtors
$fMinCtors*S_$cminCtors = $fMinCtors*S1 `cast` ...

$fMinCtors*S
$fMinCtors*S = $fMinCtors*S1 `cast` ...

$wa11
$wa11 =
  \ @ a_a18ca w_s1dDu ->
    map
      ($fEnumInt_$csucc `cast` ...)
      ((addMinima1
          (addMinima1
             ((w_s1dDu `cast` ...) (Proxy)) ((w_s1dDu `cast` ...) (Proxy)))
          (addMinima1
             ((w_s1dDu `cast` ...) (Proxy)) ((w_s1dDu `cast` ...) (Proxy))))
       `cast` ...)

$fMinCtors*X1
$fMinCtors*X1 = \ @ a_a18ca w_s1dDu _ -> $wa11 w_s1dDu

$fMinCtors*X_$cminCtors
$fMinCtors*X_$cminCtors = $fMinCtors*X1 `cast` ...

$fMinCtors*X
$fMinCtors*X = $fMinCtors*X1 `cast` ...

$fMinCtors*Y1
$fMinCtors*Y1 =
  \ @ a_a18c9 $dMinCtors_a18gU _ ->
    let {
      lvl115_s1etP
      lvl115_s1etP = $wa11 $dMinCtors_a18gU } in
    map
      ($fEnumInt_$csucc `cast` ...)
      ($wa11 ((\ _ -> lvl115_s1etP) `cast` ...))

$fMinCtors*Y_$cminCtors
$fMinCtors*Y_$cminCtors = $fMinCtors*Y1 `cast` ...

$fMinCtors*Y
$fMinCtors*Y = $fMinCtors*Y1 `cast` ...

$fMinCtors(->)Either5
$fMinCtors(->)Either5 = \ _ -> lvl11_r1eZ5

$fMinCtors(->)Either0_$cminCtors
$fMinCtors(->)Either0_$cminCtors = $fMinCtors(->)Either5 `cast` ...

$fMinCtors(->)Either0
$fMinCtors(->)Either0 = $fMinCtors(->)Either5 `cast` ...

$fMinCtors(->)Maybe1
$fMinCtors(->)Maybe1 = \ _ -> lvl12_r1eZ6

$fMinCtors(->)Maybe_$cminCtors
$fMinCtors(->)Maybe_$cminCtors = $fMinCtors(->)Maybe1 `cast` ...

$fMinCtors(->)Maybe
$fMinCtors(->)Maybe = $fMinCtors(->)Maybe1 `cast` ...

$fMinCtors*()1
$fMinCtors*()1 = \ _ -> lvl_r1eYU

$fMinCtors*()_$cminCtors
$fMinCtors*()_$cminCtors = $fMinCtors*()1 `cast` ...

$fMinCtors*()
$fMinCtors*() = $fMinCtors*()1 `cast` ...

lvl114_r1f0K
lvl114_r1f0K =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors(->)X4 `cast` ...)

$fMinCtors(->)Ratio1
$fMinCtors(->)Ratio1 = \ _ -> lvl114_r1f0K

$fMinCtors(->)Ratio_$cminCtors
$fMinCtors(->)Ratio_$cminCtors = $fMinCtors(->)Ratio1 `cast` ...

$fMinCtors(->)Ratio
$fMinCtors(->)Ratio = $fMinCtors(->)Ratio1 `cast` ...

$fMinCtors*Bool1
$fMinCtors*Bool1 = \ _ -> lvl15_r1eZ9

$fMinCtors*Bool_$cminCtors
$fMinCtors*Bool_$cminCtors = $fMinCtors*Bool1 `cast` ...

$fMinCtors*Bool
$fMinCtors*Bool = $fMinCtors*Bool1 `cast` ...

$fMinCtors(->)S1
$fMinCtors(->)S1 = \ _ -> lvl16_r1eZa

$fMinCtors(->)S_$cminCtors
$fMinCtors(->)S_$cminCtors = $fMinCtors(->)S1 `cast` ...

$fMinCtors(->)S
$fMinCtors(->)S = $fMinCtors(->)S1 `cast` ...

$fMinCtors(->)Y1
$fMinCtors(->)Y1 = gen_minCtors5

$fMinCtors(->)Y_$cminCtors
$fMinCtors(->)Y_$cminCtors = $fMinCtors(->)Y1 `cast` ...

$fMinCtors(->)Y
$fMinCtors(->)Y = $fMinCtors(->)Y1 `cast` ...

$fMinCtors*[]14
$fMinCtors*[]14 = \ @ a_a18bS -> $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*[]13
$fMinCtors*[]13 =
  \ @ a_a18bS -> $fMinCtors*[]14 (($WVNil) `cast` ...)

$fMinCtors*[]12
$fMinCtors*[]12 =
  \ @ a_a18bS ->
    VCons
      @~ <(':) * [a_a18bS] ('[] *)>
      (($WZIdx) `cast` ...)
      (($fMinCtors*[]13) `cast` ...)

$fMinCtors*[]4
$fMinCtors*[]4 =
  \ @ a_a18bS @ a1_X18T a_X8SS ->
    VCons @~ <(':) * [a_a18bS] ('[] *)> (a_X8SS `cast` ...) ($WVNil)

$fMinCtors*[]7
$fMinCtors*[]7 =
  \ @ a_a18bS -> $fEqVec ($fEqInt `cast` ...) ($fEqVec0)

$fMinCtors*[]6
$fMinCtors*[]6 =
  \ @ a_a18bS ->
    $fOrdVec
      ($fMinCtors*[]7) ($fOrdInt `cast` ...) $fMinCtors*Even_$dOrd

$fMinCtors*[]8
$fMinCtors*[]8 = \ @ a_a18bS -> $fEqCVec ($fMinCtors*[]7)

$fMinCtors*[]3
$fMinCtors*[]3 =
  \ @ a_a18bS ->
    minima1ToSiblingInT
      (($fMinCtors*[]4) `cast` ...) ($fMinCtors(->)Even20 `cast` ...)

$fMinCtors*[]2
$fMinCtors*[]2 =
  \ @ a_a18bS ->
    map ($fEnumInt_$csucc `cast` ...) (($fMinCtors*[]3) `cast` ...)

$fMinCtors*[]1
$fMinCtors*[]1 = \ @ a_a18bS _ _ -> $fMinCtors*[]2

$fMinCtors*[]5
$fMinCtors*[]5 =
  \ @ a_a18bS -> $fOrdCVec ($fMinCtors*[]8) ($fMinCtors*[]6)

$fMinCtors*[]9
$fMinCtors*[]9 = \ @ a_a18bS -> addSiblingInTs ($fMinCtors*[]5)

$fMinCtors*[]11
$fMinCtors*[]11 =
  \ @ a_a18bS ->
    VCons
      @~ <(':) * [a_a18bS] ('[] *)>
      ($fMinCtors(->)(,)3 `cast` ...)
      ($WVNil)

$fMinCtors*[]10
$fMinCtors*[]10 =
  \ @ a_a18bS ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    (($fMinCtors*[]11) `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*[]15
$fMinCtors*[]15 =
  \ @ a_a18bS ds_X8KV ds1_X8KX ->
    case ds_X8KV `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv _ ->
    case ds1_X8KX `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx _ ->
    $fMinCtors(->)Even31 (a_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    }
    }

$fMinCtors*[]_$cminCtors
$fMinCtors*[]_$cminCtors =
  \ @ a_a18bS $dMinCtors_a18dI ->
    let {
      lvl115_s1eu5
      lvl115_s1eu5 =
        cvAt1
          (($WZIdx) `cast` ...)
          ($wsolve_sibling_set'
             (($fMinCtors*[]15) `cast` ...)
             (($fMinCtors*[]12) `cast` ...)
             ((VCons
                 @~ <(':) * [a_a18bS] ('[] *)>
                 (let {
                    a_s1eEA
                    a_s1eEA =
                      mapKeysMonotonic
                        ($fMinCtors*[]10)
                        (map
                           (id) ((($dMinCtors_a18dI `cast` ...) (Proxy)) `cast` ...)) } in
                  let {
                    $wa14_s1dF0
                    $wa14_s1dF0 =
                      \ _ ->
                        map
                          ($fEnumInt_$csucc `cast` ...)
                          (($fMinCtors*[]9
                              (a_s1eEA `cast` ...)
                              ((Bin
                                  1
                                  (($fMinCtors*Even_w
                                      ($WZIdx)
                                      (VCons
                                         @~ <(':) * [a_a18bS] ('[] *)>
                                         ($fMinCtors(->)(,)3 `cast` ...)
                                         ($WVNil)))
                                   `cast` ...,
                                   $fMinCtors(->)(,)3,
                                   $fMinCtors(->)(,)3)
                                  ($fMinCtors(->)(,)3 `cast` ...)
                                  (Tip)
                                  (Tip))
                               `cast` ...))
                           `cast` ...) } in
                  let {
                    a1_s1cG8
                    a1_s1cG8 = \ _ w1_s1dDA -> $wa14_s1dF0 w1_s1dDA } in
                  ($fMinCtors(->)Even_$cminInfoRec
                     ($fMinCtors*[]5)
                     (($fMinCtors*[]1) `cast` ...)
                     (a1_s1cG8 `cast` ...)
                     ((Proxy) `cast` ...)
                     ((Proxy) `cast` ...))
                  `cast` ...)
                 ($WVNil))
              `cast` ...)) } in
    \ _ -> lvl115_s1eu5

$fMinCtors*[]
$fMinCtors*[] = $fMinCtors*[]_$cminCtors `cast` ...

$fMinCtors*Even17
$fMinCtors*Even17 =
  \ @ a_a18c4 ->
    SIdx
      @~ <(':) * (Even a_a18c4) ((':) * (Odd a_a18c4) ('[] *))> ($WZIdx)

$fMinCtors*Even26
$fMinCtors*Even26 = \ @ a_a18c4 -> $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Even25
$fMinCtors*Even25 = \ @ a_a18c4 -> $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Odd20
$fMinCtors*Odd20 =
  \ @ a_a18c4 -> $fMinCtors*Even25 (($WVNil) `cast` ...)

$fMinCtors*Odd19
$fMinCtors*Odd19 =
  \ @ a_a18c4 ->
    VCons
      @~ <(':) * (Odd a_a18c4) ('[] *)>
      (($WZIdx) `cast` ...)
      (($fMinCtors*Odd20) `cast` ...)

$fMinCtors*Odd18
$fMinCtors*Odd18 =
  \ @ a_a18c4 -> $fMinCtors*Even26 (($fMinCtors*Odd19) `cast` ...)

$fMinCtors*Odd17
$fMinCtors*Odd17 =
  \ @ a_a18c4 ->
    VCons
      @~ <(':) * (Even a_a18c4) ((':) * (Odd a_a18c4) ('[] *))>
      (($WZIdx) `cast` ...)
      (($fMinCtors*Odd18) `cast` ...)

$fMinCtors*Even10
$fMinCtors*Even10 =
  \ @ a_a18c4 @ a1_X19p a_X8To ->
    VCons
      @~ <(':) * (Even a_a18c4) ((':) * (Odd a_a18c4) ('[] *))>
      (a_X8To `cast` ...)
      (VCons
         @~ <(':) * (Odd a_a18c4) ('[] *)> (a_X8To `cast` ...) ($WVNil))

$fMinCtors*Even14
$fMinCtors*Even14 =
  \ @ a_a18c4 -> $fEqVec ($fEqInt `cast` ...) ($fEqVec0)

$fMinCtors*Odd11
$fMinCtors*Odd11 =
  \ @ a_a18c4 ->
    $fOrdVec
      ($fMinCtors*Even14) ($fOrdInt `cast` ...) $fMinCtors*Even_$dOrd

$fMinCtors*Odd12
$fMinCtors*Odd12 =
  \ @ a_a18c4 -> $fEqVec ($fEqInt `cast` ...) ($fMinCtors*Even14)

$fMinCtors*Odd10
$fMinCtors*Odd10 =
  \ @ a_a18c4 ->
    $fOrdVec
      ($fMinCtors*Odd12) ($fOrdInt `cast` ...) ($fMinCtors*Odd11)

$fMinCtors*Odd13
$fMinCtors*Odd13 = \ @ a_a18c4 -> $fEqCVec ($fMinCtors*Odd12)

$fMinCtors*Odd9
$fMinCtors*Odd9 =
  \ @ a_a18c4 -> $fOrdCVec ($fMinCtors*Odd13) ($fMinCtors*Odd10)

$fMinCtors*Odd8
$fMinCtors*Odd8 =
  \ @ a_a18c4 ->
    minima1ToSiblingInT
      (($fMinCtors*Even10) `cast` ...) ($fMinCtors(->)Even20 `cast` ...)

$fMinCtors*Odd7
$fMinCtors*Odd7 =
  \ @ a_a18c4 ->
    map ($fEnumInt_$csucc `cast` ...) (($fMinCtors*Odd8) `cast` ...)

$fMinCtors*Odd6
$fMinCtors*Odd6 = \ @ a_a18c4 _ _ -> $fMinCtors*Odd7

$fMinCtors*Odd14
$fMinCtors*Odd14 = \ @ a_a18c4 -> addSiblingInTs ($fMinCtors*Odd9)

$fMinCtors*Even6
$fMinCtors*Even6 =
  \ @ a_a18c4 ->
    VCons
      @~ <(':) * (Odd a_a18c4) ('[] *)>
      ($fMinCtors(->)(,)3 `cast` ...)
      ($WVNil)

$fMinCtors*Odd16
$fMinCtors*Odd16 =
  \ @ a_a18c4 ->
    VCons
      @~ <(':) * (Even a_a18c4) ((':) * (Odd a_a18c4) ('[] *))>
      ($fMinCtors(->)(,)3 `cast` ...)
      ($fMinCtors*Even6)

$fMinCtors*Odd15
$fMinCtors*Odd15 =
  \ @ a_a18c4 ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    (($fMinCtors*Odd16) `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Odd21
$fMinCtors*Odd21 =
  \ @ a_a18c4 ds_X8L4 ds1_X8L6 ->
    case ds_X8L4 `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv as_a7Xw ->
    case ds1_X8L6 `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors(->)Even31 (a_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8Cp @ ts3_X8Cr rb2_X8OT a1_X8nB _ ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8Cz @ ts4_X8CB rb3_X8OY b1_X8nK _ ->
        $fMinCtors(->)Even31 (a1_X8nB `cast` ...) (b1_X8nK `cast` ...)
        }
        }
    }
    }
    }

$fMinCtors*Odd5
$fMinCtors*Odd5 =
  \ @ a_a18c4 ->
    VCons
      @~ <(':) * (Even a_a18c4) ((':) * (Odd a_a18c4) ('[] *))>
      ($fMinCtors(->)(,)3 `cast` ...)
      ($fMinCtors*Even6)

$fMinCtors*Odd4
$fMinCtors*Odd4 =
  \ @ a_a18c4 ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    (($fMinCtors*Odd5) `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Odd3
$fMinCtors*Odd3 =
  \ @ a_a18c4 ->
    $fMinCtors*Even_w
      ($WZIdx)
      (VCons
         @~ <(':) * (Even a_a18c4) ((':) * (Odd a_a18c4) ('[] *))>
         ($fMinCtors(->)(,)3 `cast` ...)
         (VCons
            @~ <(':) * (Odd a_a18c4) ('[] *)>
            ($fMinCtors(->)(,)3 `cast` ...)
            ($WVNil)))

$fMinCtors*Odd2
$fMinCtors*Odd2 =
  \ @ a_a18c4 ->
    (($fMinCtors*Odd3) `cast` ...,
     $fMinCtors(->)(,)3,
     $fMinCtors(->)(,)3)

$fMinCtors*Odd1
$fMinCtors*Odd1 =
  \ @ a_a18c4 ->
    Bin 1 ($fMinCtors*Odd2) ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Odd_$cminCtors
$fMinCtors*Odd_$cminCtors =
  \ @ a_a18c4 $dMinCtors_a18fo ->
    let {
      lvl115_s1eun
      lvl115_s1eun =
        cvAt1
          (($fMinCtors*Even17) `cast` ...)
          ($wsolve_sibling_set'
             (($fMinCtors*Odd21) `cast` ...)
             (($fMinCtors*Odd17) `cast` ...)
             ((VCons
                 @~ <(':) * (Even a_a18c4) ((':) * (Odd a_a18c4) ('[] *))>
                 (let {
                    a_s1eET
                    a_s1eET =
                      mapKeysMonotonic
                        ($fMinCtors*Odd15)
                        (map
                           (id) ((($dMinCtors_a18fo `cast` ...) (Proxy)) `cast` ...)) } in
                  let {
                    $wa14_s1dF1
                    $wa14_s1dF1 =
                      \ _ ->
                        map
                          ($fEnumInt_$csucc `cast` ...)
                          (($fMinCtors*Odd14
                              (a_s1eET `cast` ...)
                              ((Bin
                                  1
                                  (($fMinCtors*Even_w
                                      (SIdx
                                         @~ <(':) * (Even a_a18c4) ((':) * (Odd a_a18c4) ('[] *))>
                                         ($WZIdx))
                                      (VCons
                                         @~ <(':) * (Even a_a18c4) ((':) * (Odd a_a18c4) ('[] *))>
                                         ($fMinCtors(->)(,)3 `cast` ...)
                                         (VCons
                                            @~ <(':) * (Odd a_a18c4) ('[] *)>
                                            ($fMinCtors(->)(,)3 `cast` ...)
                                            ($WVNil))))
                                   `cast` ...,
                                   $fMinCtors(->)(,)3,
                                   $fMinCtors(->)(,)3)
                                  ($fMinCtors(->)(,)3 `cast` ...)
                                  (Tip)
                                  (Tip))
                               `cast` ...))
                           `cast` ...) } in
                  let {
                    a1_s1cGo
                    a1_s1cGo = \ _ w1_s1dDF -> $wa14_s1dF1 w1_s1dDF } in
                  ($fMinCtors(->)Even_$cminInfoRec
                     ($fMinCtors*Odd9)
                     (($fMinCtors*Odd6) `cast` ...)
                     (a1_s1cGo `cast` ...)
                     ((Proxy) `cast` ...)
                     ((Proxy) `cast` ...))
                  `cast` ...)
                 (VCons
                    @~ <(':) * (Odd a_a18c4) ('[] *)>
                    ((map
                        ($fEnumInt_$csucc `cast` ...)
                        (($fMinCtors*Odd14
                            ((mapKeysMonotonic
                                ($fMinCtors*Odd4)
                                (map (id) ((($dMinCtors_a18fo `cast` ...) (Proxy)) `cast` ...)))
                             `cast` ...)
                            (($fMinCtors*Odd1) `cast` ...))
                         `cast` ...))
                     `cast` ...)
                    ($WVNil)))
              `cast` ...)) } in
    \ _ -> lvl115_s1eun

$fMinCtors*Odd
$fMinCtors*Odd = $fMinCtors*Odd_$cminCtors `cast` ...

$fMinCtors*Even24
$fMinCtors*Even24 =
  \ @ a_a18c5 -> $fMinCtors*Even25 (($WVNil) `cast` ...)

$fMinCtors*Even23
$fMinCtors*Even23 =
  \ @ a_a18c5 ->
    VCons
      @~ <(':) * (Odd a_a18c5) ('[] *)>
      (($WZIdx) `cast` ...)
      (($fMinCtors*Even24) `cast` ...)

$fMinCtors*Even22
$fMinCtors*Even22 =
  \ @ a_a18c5 -> $fMinCtors*Even26 (($fMinCtors*Even23) `cast` ...)

$fMinCtors*Even21
$fMinCtors*Even21 =
  \ @ a_a18c5 ->
    VCons
      @~ <(':) * (Even a_a18c5) ((':) * (Odd a_a18c5) ('[] *))>
      (($WZIdx) `cast` ...)
      (($fMinCtors*Even22) `cast` ...)

$fMinCtors*Even13
$fMinCtors*Even13 =
  \ @ a_a18c5 ->
    $fOrdVec
      ($fMinCtors*Even14) ($fOrdInt `cast` ...) $fMinCtors*Even_$dOrd

$fMinCtors*Even15
$fMinCtors*Even15 =
  \ @ a_a18c5 -> $fEqVec ($fEqInt `cast` ...) ($fMinCtors*Even14)

$fMinCtors*Even12
$fMinCtors*Even12 =
  \ @ a_a18c5 ->
    $fOrdVec
      ($fMinCtors*Even15) ($fOrdInt `cast` ...) ($fMinCtors*Even13)

$fMinCtors*Even16
$fMinCtors*Even16 = \ @ a_a18c5 -> $fEqCVec ($fMinCtors*Even15)

$fMinCtors*Even9
$fMinCtors*Even9 =
  \ @ a_a18c5 ->
    minima1ToSiblingInT
      (($fMinCtors*Even10) `cast` ...) ($fMinCtors(->)Even20 `cast` ...)

$fMinCtors*Even8
$fMinCtors*Even8 =
  \ @ a_a18c5 ->
    map ($fEnumInt_$csucc `cast` ...) (($fMinCtors*Even9) `cast` ...)

$fMinCtors*Even7
$fMinCtors*Even7 = \ @ a_a18c5 _ _ -> $fMinCtors*Even8

$fMinCtors*Even11
$fMinCtors*Even11 =
  \ @ a_a18c5 -> $fOrdCVec ($fMinCtors*Even16) ($fMinCtors*Even12)

$fMinCtors*Even18
$fMinCtors*Even18 =
  \ @ a_a18c5 -> addSiblingInTs ($fMinCtors*Even11)

$fMinCtors*Even20
$fMinCtors*Even20 =
  \ @ a_a18c5 ->
    VCons
      @~ <(':) * (Even a_a18c5) ((':) * (Odd a_a18c5) ('[] *))>
      ($fMinCtors(->)(,)3 `cast` ...)
      ($fMinCtors*Even6)

$fMinCtors*Even19
$fMinCtors*Even19 =
  \ @ a_a18c5 ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    (($fMinCtors*Even20) `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Even27
$fMinCtors*Even27 =
  \ @ a_a18c5 ds_X8La ds1_X8Lc ->
    case ds_X8La `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv as_a7Xw ->
    case ds1_X8Lc `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors(->)Even31 (a_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8Cz @ ts3_X8CB rb2_X8P3 a1_X8nL _ ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8CJ @ ts4_X8CL rb3_X8P8 b1_X8nU _ ->
        $fMinCtors(->)Even31 (a1_X8nL `cast` ...) (b1_X8nU `cast` ...)
        }
        }
    }
    }
    }

$fMinCtors*Even5
$fMinCtors*Even5 =
  \ @ a_a18c5 ->
    VCons
      @~ <(':) * (Even a_a18c5) ((':) * (Odd a_a18c5) ('[] *))>
      ($fMinCtors(->)(,)3 `cast` ...)
      ($fMinCtors*Even6)

$fMinCtors*Even4
$fMinCtors*Even4 =
  \ @ a_a18c5 ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    (($fMinCtors*Even5) `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Even3
$fMinCtors*Even3 =
  \ @ a_a18c5 ->
    $fMinCtors*Even_w
      ($WZIdx)
      (VCons
         @~ <(':) * (Even a_a18c5) ((':) * (Odd a_a18c5) ('[] *))>
         ($fMinCtors(->)(,)3 `cast` ...)
         (VCons
            @~ <(':) * (Odd a_a18c5) ('[] *)>
            ($fMinCtors(->)(,)3 `cast` ...)
            ($WVNil)))

$fMinCtors*Even2
$fMinCtors*Even2 =
  \ @ a_a18c5 ->
    (($fMinCtors*Even3) `cast` ...,
     $fMinCtors(->)(,)3,
     $fMinCtors(->)(,)3)

$fMinCtors*Even1
$fMinCtors*Even1 =
  \ @ a_a18c5 ->
    Bin
      1 ($fMinCtors*Even2) ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Even_$cminCtors
$fMinCtors*Even_$cminCtors =
  \ @ a_a18c5 $dMinCtors_a18fw ->
    let {
      lvl115_s1euE
      lvl115_s1euE =
        cvAt1
          (($WZIdx) `cast` ...)
          ($wsolve_sibling_set'
             (($fMinCtors*Even27) `cast` ...)
             (($fMinCtors*Even21) `cast` ...)
             ((VCons
                 @~ <(':) * (Even a_a18c5) ((':) * (Odd a_a18c5) ('[] *))>
                 (let {
                    a_s1eFc
                    a_s1eFc =
                      mapKeysMonotonic
                        ($fMinCtors*Even19)
                        (map
                           (id) ((($dMinCtors_a18fw `cast` ...) (Proxy)) `cast` ...)) } in
                  let {
                    $wa14_s1dF2
                    $wa14_s1dF2 =
                      \ _ ->
                        map
                          ($fEnumInt_$csucc `cast` ...)
                          (($fMinCtors*Even18
                              (a_s1eFc `cast` ...)
                              ((Bin
                                  1
                                  (($fMinCtors*Even_w
                                      ($fMinCtors*Even17)
                                      (VCons
                                         @~ <(':) * (Even a_a18c5) ((':) * (Odd a_a18c5) ('[] *))>
                                         ($fMinCtors(->)(,)3 `cast` ...)
                                         (VCons
                                            @~ <(':) * (Odd a_a18c5) ('[] *)>
                                            ($fMinCtors(->)(,)3 `cast` ...)
                                            ($WVNil))))
                                   `cast` ...,
                                   $fMinCtors(->)(,)3,
                                   $fMinCtors(->)(,)3)
                                  ($fMinCtors(->)(,)3 `cast` ...)
                                  (Tip)
                                  (Tip))
                               `cast` ...))
                           `cast` ...) } in
                  let {
                    a1_s1cGx
                    a1_s1cGx = \ _ w1_s1dDK -> $wa14_s1dF2 w1_s1dDK } in
                  ($fMinCtors(->)Even_$cminInfoRec
                     ($fMinCtors*Even11)
                     (($fMinCtors*Even7) `cast` ...)
                     (a1_s1cGx `cast` ...)
                     ((Proxy) `cast` ...)
                     ((Proxy) `cast` ...))
                  `cast` ...)
                 (VCons
                    @~ <(':) * (Odd a_a18c5) ('[] *)>
                    ((map
                        ($fEnumInt_$csucc `cast` ...)
                        (($fMinCtors*Even18
                            ((mapKeysMonotonic
                                ($fMinCtors*Even4)
                                (map (id) ((($dMinCtors_a18fw `cast` ...) (Proxy)) `cast` ...)))
                             `cast` ...)
                            (($fMinCtors*Even1) `cast` ...))
                         `cast` ...))
                     `cast` ...)
                    ($WVNil)))
              `cast` ...)) } in
    \ _ -> lvl115_s1euE

$fMinCtors*Even
$fMinCtors*Even = $fMinCtors*Even_$cminCtors `cast` ...

$fMinCtors*Stream13
$fMinCtors*Stream13 = \ @ a_a18c8 -> $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Stream12
$fMinCtors*Stream12 =
  \ @ a_a18c8 -> $fMinCtors*Stream13 (($WVNil) `cast` ...)

$fMinCtors*Stream11
$fMinCtors*Stream11 =
  \ @ a_a18c8 ->
    VCons
      @~ <(':) * (Stream a_a18c8) ('[] *)>
      (($WZIdx) `cast` ...)
      (($fMinCtors*Stream12) `cast` ...)

$fMinCtors*Stream9
$fMinCtors*Stream9 =
  \ @ a_a18c8 -> $fEqVec ($fEqInt `cast` ...) ($fEqVec0)

$fMinCtors*Stream10
$fMinCtors*Stream10 = \ @ a_a18c8 -> $fEqCVec ($fMinCtors*Stream9)

$fMinCtors*Stream8
$fMinCtors*Stream8 =
  \ @ a_a18c8 ->
    $fOrdVec
      ($fMinCtors*Stream9) ($fOrdInt `cast` ...) $fMinCtors*Even_$dOrd

$fMinCtors*Stream7
$fMinCtors*Stream7 =
  \ @ a_a18c8 -> $fOrdCVec ($fMinCtors*Stream10) ($fMinCtors*Stream8)

$fMinCtors*Stream14
$fMinCtors*Stream14 =
  \ @ a_a18c8 ds_X8L0 ds1_X8L2 ->
    case ds_X8L0 `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv _ ->
    case ds1_X8L2 `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx _ ->
    $fMinCtors(->)Even31 (a_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    }
    }

$fMinCtors*Stream6
$fMinCtors*Stream6 =
  \ @ a_a18c8 -> addSiblingInTs ($fMinCtors*Stream7)

$fMinCtors*Stream5
$fMinCtors*Stream5 =
  \ @ a_a18c8 ->
    VCons
      @~ <(':) * (Stream a_a18c8) ('[] *)>
      ($fMinCtors(->)(,)3 `cast` ...)
      ($WVNil)

$fMinCtors*Stream4
$fMinCtors*Stream4 =
  \ @ a_a18c8 ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    (($fMinCtors*Stream5) `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Stream3
$fMinCtors*Stream3 =
  \ @ a_a18c8 ->
    $fMinCtors*Even_w
      ($WZIdx)
      (VCons
         @~ <(':) * (Stream a_a18c8) ('[] *)>
         ($fMinCtors(->)(,)3 `cast` ...)
         ($WVNil))

$fMinCtors*Stream2
$fMinCtors*Stream2 =
  \ @ a_a18c8 ->
    (($fMinCtors*Stream3) `cast` ...,
     $fMinCtors(->)(,)3,
     $fMinCtors(->)(,)3)

$fMinCtors*Stream1
$fMinCtors*Stream1 =
  \ @ a_a18c8 ->
    Bin
      1 ($fMinCtors*Stream2) ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Stream_$cminCtors
$fMinCtors*Stream_$cminCtors =
  \ @ a_a18c8 $dMinCtors_a18gG ->
    let {
      lvl115_s1euL
      lvl115_s1euL =
        cvAt1
          (($WZIdx) `cast` ...)
          ($wsolve_sibling_set'
             (($fMinCtors*Stream14) `cast` ...)
             (($fMinCtors*Stream11) `cast` ...)
             ((VCons
                 @~ <(':) * (Stream a_a18c8) ('[] *)>
                 ((map
                     ($fEnumInt_$csucc `cast` ...)
                     (($fMinCtors*Stream6
                         ((mapKeysMonotonic
                             ($fMinCtors*Stream4)
                             (map (id) ((($dMinCtors_a18gG `cast` ...) (Proxy)) `cast` ...)))
                          `cast` ...)
                         (($fMinCtors*Stream1) `cast` ...))
                      `cast` ...))
                  `cast` ...)
                 ($WVNil))
              `cast` ...)) } in
    \ _ -> lvl115_s1euL

$fMinCtors*Stream
$fMinCtors*Stream = $fMinCtors*Stream_$cminCtors `cast` ...

$fMinCtors*T16
$fMinCtors*T16 = \ @ a_a18c7 -> $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*T15
$fMinCtors*T15 =
  \ @ a_a18c7 -> $fMinCtors*T16 (($WVNil) `cast` ...)

$fMinCtors*T14
$fMinCtors*T14 =
  \ @ a_a18c7 ->
    VCons
      @~ <(':) * (T a_a18c7) ('[] *)>
      (($WZIdx) `cast` ...)
      (($fMinCtors*T15) `cast` ...)

$fMinCtors*T8
$fMinCtors*T8 =
  \ @ a_a18c7 -> $fEqVec ($fEqInt `cast` ...) ($fEqVec0)

$fMinCtors*T7
$fMinCtors*T7 =
  \ @ a_a18c7 ->
    $fOrdVec
      ($fMinCtors*T8) ($fOrdInt `cast` ...) $fMinCtors*Even_$dOrd

$fMinCtors*T9
$fMinCtors*T9 = \ @ a_a18c7 -> $fEqCVec ($fMinCtors*T8)

$fMinCtors*T4
$fMinCtors*T4 =
  \ @ a_a18c7 ->
    VCons
      @~ <(':) * (T a_a18c7) ('[] *)>
      ($fMinCtors(->)(,)3 `cast` ...)
      ($WVNil)

$fMinCtors*T13
$fMinCtors*T13 =
  \ @ a_a18c7 ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    (($fMinCtors*T4) `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*T6
$fMinCtors*T6 =
  \ @ a_a18c7 -> $fOrdCVec ($fMinCtors*T9) ($fMinCtors*T7)

$fMinCtors*T12
$fMinCtors*T12 = \ @ a_a18c7 -> addSiblingInTs ($fMinCtors*T6)

$fMinCtors*T11
$fMinCtors*T11 = \ @ a_a18c7 -> plug10 ($fMinCtors*T6)

$fMinCtors*T10
$fMinCtors*T10 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors(->)(,,)3 `cast` ...)

$fMinCtors*T5
$fMinCtors*T5 = \ @ a_a18c7 -> plug0 ($fMinCtors*T6)

$fMinCtors*T3
$fMinCtors*T3 =
  \ @ a_a18c7 ds_d19UT ->
    case ds_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    (($fMinCtors*T4) `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*T2
$fMinCtors*T2 =
  \ @ a_a18c7 -> mapKeysMonotonic ($fMinCtors*T3) $fMinCtors(->)T9

$fMinCtors*T1
$fMinCtors*T1 =
  \ @ a_a18c7 _ _ ->
    map
      ($fEnumInt_$csucc `cast` ...)
      (($fMinCtors*T12
          ($fMinCtors*T11
             ($fMinCtors*T10 `cast` ...)
             ((Bin
                 1
                 (($fMinCtors*Even_w
                     ($WZIdx)
                     (VCons
                        @~ <(':) * (T a_a18c7) ('[] *)>
                        ($fMinCtors(->)(,)3 `cast` ...)
                        ($WVNil)))
                  `cast` ...,
                  $fMinCtors(->)(,)3,
                  $fMinCtors(->)(,)3)
                 ($fMinCtors(->)(,)3 `cast` ...)
                 (Tip)
                 (Tip))
              `cast` ...)
             ($fMinCtors*T5
                $fMinCtors(->)T12
                ((Bin
                    1
                    (($fMinCtors*Even_w
                        ($WZIdx)
                        (VCons
                           @~ <(':) * (T a_a18c7) ('[] *)>
                           ($fMinCtors(->)(,)3 `cast` ...)
                           ($WVNil)))
                     `cast` ...,
                     $fMinCtors(->)(,)3,
                     $fMinCtors(->)(,)3)
                    ($fMinCtors(->)(,)3 `cast` ...)
                    (Tip)
                    (Tip))
                 `cast` ...)))
          (($fMinCtors*T2) `cast` ...))
       `cast` ...)

$fMinCtors*T17
$fMinCtors*T17 =
  \ @ a_a18c7 ds_X8Le ds1_X8Lg ->
    case ds_X8Le `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a_a7Xv _ ->
    case ds1_X8Lg `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx _ ->
    $fMinCtors(->)Even31 (a_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    }
    }

$fMinCtors*T_$cminCtors
$fMinCtors*T_$cminCtors =
  \ @ a_a18c7 $dMinCtors_a18gs ->
    let {
      lvl115_s1euY
      lvl115_s1euY =
        cvAt1
          (($WZIdx) `cast` ...)
          ($wsolve_sibling_set'
             (($fMinCtors*T17) `cast` ...)
             (($fMinCtors*T14) `cast` ...)
             ((VCons
                 @~ <(':) * (T a_a18c7) ('[] *)>
                 (let {
                    $wa14_s1dF3
                    $wa14_s1dF3 =
                      map
                        ($fEnumInt_$csucc `cast` ...)
                        (mapKeysMonotonic
                           ($fMinCtors*T13)
                           (map
                              (id) ((($dMinCtors_a18gs `cast` ...) (Proxy)) `cast` ...))) } in
                  let {
                    a_s1cGO
                    a_s1cGO = \ _ _ -> $wa14_s1dF3 } in
                  ($fMinCtors(->)Even_$cminInfoRec
                     ($fMinCtors*T6)
                     (a_s1cGO `cast` ...)
                     (($fMinCtors*T1) `cast` ...)
                     ((Proxy) `cast` ...)
                     ((Proxy) `cast` ...))
                  `cast` ...)
                 ($WVNil))
              `cast` ...)) } in
    \ _ -> lvl115_s1euY

$fMinCtors*T
$fMinCtors*T = $fMinCtors*T_$cminCtors `cast` ...

$fMinCtors(->)Odd_$cminCtors
$fMinCtors(->)Odd_$cminCtors = gen_minCtors_$sgen_minCtors7

$fMinCtors(->)Odd
$fMinCtors(->)Odd = $fMinCtors(->)Odd_$cminCtors `cast` ...

$fMinCtors(->)Even_$cminCtors
$fMinCtors(->)Even_$cminCtors = gen_minCtors_$sgen_minCtors6

$fMinCtors(->)Even
$fMinCtors(->)Even = $fMinCtors(->)Even_$cminCtors `cast` ...

$fMinCtors*Inf_$cminCtors
$fMinCtors*Inf_$cminCtors = gen_minCtors_$sgen_minCtors

$fMinCtors*Inf
$fMinCtors*Inf = $fMinCtors*Inf_$cminCtors `cast` ...

$fMinCtors*Nat_$cminCtors
$fMinCtors*Nat_$cminCtors = gen_minCtors_$sgen_minCtors3

$fMinCtors*Nat
$fMinCtors*Nat = $fMinCtors*Nat_$cminCtors `cast` ...

$fMinCtors*M2_$cminCtors
$fMinCtors*M2_$cminCtors = gen_minCtors_$sgen_minCtors2

$fMinCtors*M2
$fMinCtors*M2 = $fMinCtors*M2_$cminCtors `cast` ...

$fMinCtors*M1_$cminCtors
$fMinCtors*M1_$cminCtors = gen_minCtors_$sgen_minCtors1

$fMinCtors*M1
$fMinCtors*M1 = $fMinCtors*M1_$cminCtors `cast` ...

$fMinCtors(->)T_$cminCtors
$fMinCtors(->)T_$cminCtors = gen_minCtors_$sgen_minCtors10

$fMinCtors(->)T
$fMinCtors(->)T = $fMinCtors(->)T_$cminCtors `cast` ...

$fMinCtors(->)Stream_$cminCtors
$fMinCtors(->)Stream_$cminCtors = gen_minCtors_$sgen_minCtors9

$fMinCtors(->)Stream
$fMinCtors(->)Stream = $fMinCtors(->)Stream_$cminCtors `cast` ...


------ Local rules for imported ids --------
"SPEC gen_minCtors [* -> * -> *, Either]" [ALWAYS]
    forall $dMinCtorsWorker_s1c3Q.
      gen_minCtors $dMinCtorsWorker_s1c3Q
      = gen_minCtors_$sgen_minCtors17
"SPEC gen_minCtors [* -> * -> *, (,)]" [ALWAYS]
    forall $dMinCtorsWorker_s1c3R.
      gen_minCtors $dMinCtorsWorker_s1c3R
      = gen_minCtors_$sgen_minCtors16
"SPEC gen_minCtors [* -> *, []]" [ALWAYS]
    forall $dMinCtorsWorker_s1c3S.
      gen_minCtors $dMinCtorsWorker_s1c3S
      = gen_minCtors_$sgen_minCtors15
"SPEC gen_minCtors [* -> *, Ratio]" [ALWAYS]
    forall $dMinCtorsWorker_s1c3T.
      gen_minCtors $dMinCtorsWorker_s1c3T
      = gen_minCtors_$sgen_minCtors14
"SPEC gen_minCtors [* -> *, Maybe]" [ALWAYS]
    forall $dMinCtorsWorker_s1c3U.
      gen_minCtors $dMinCtorsWorker_s1c3U
      = gen_minCtors_$sgen_minCtors13
"SPEC gen_minCtors [* -> *, Y]" [ALWAYS]
    forall $dMinCtorsWorker_s1c3V.
      gen_minCtors $dMinCtorsWorker_s1c3V
      = gen_minCtors_$sgen_minCtors12
"SPEC gen_minCtors [* -> *, X]" [ALWAYS]
    forall $dMinCtorsWorker_s1c3W.
      gen_minCtors $dMinCtorsWorker_s1c3W
      = gen_minCtors_$sgen_minCtors11
"SPEC gen_minCtors [* -> *, T]" [ALWAYS]
    forall $dMinCtorsWorker_s1c3X.
      gen_minCtors $dMinCtorsWorker_s1c3X
      = gen_minCtors_$sgen_minCtors10
"SPEC gen_minCtors [* -> *, Stream]" [ALWAYS]
    forall $dMinCtorsWorker_s1c3Y.
      gen_minCtors $dMinCtorsWorker_s1c3Y
      = gen_minCtors_$sgen_minCtors9
"SPEC gen_minCtors [* -> *, S]" [ALWAYS]
    forall $dMinCtorsWorker_s1c3Z.
      gen_minCtors $dMinCtorsWorker_s1c3Z
      = gen_minCtors_$sgen_minCtors8
"SPEC gen_minCtors [* -> *, Odd]" [ALWAYS]
    forall $dMinCtorsWorker_s1c40.
      gen_minCtors $dMinCtorsWorker_s1c40
      = gen_minCtors_$sgen_minCtors7
"SPEC gen_minCtors [* -> *, Even]" [ALWAYS]
    forall $dMinCtorsWorker_s1c41.
      gen_minCtors $dMinCtorsWorker_s1c41
      = gen_minCtors_$sgen_minCtors6
"SPEC gen_minCtors [*, Bool]" [ALWAYS]
    forall $dMinCtorsWorker_s1c42.
      gen_minCtors $dMinCtorsWorker_s1c42
      = gen_minCtors_$sgen_minCtors5
"SPEC gen_minCtors [*, ()]" [ALWAYS]
    forall $dMinCtorsWorker_s1c43.
      gen_minCtors $dMinCtorsWorker_s1c43
      = gen_minCtors_$sgen_minCtors4
"SPEC gen_minCtors [*, Nat]" [ALWAYS]
    forall $dMinCtorsWorker_s1c44.
      gen_minCtors $dMinCtorsWorker_s1c44
      = gen_minCtors_$sgen_minCtors3
"SPEC gen_minCtors [*, M2]" [ALWAYS]
    forall $dMinCtorsWorker_s1c45.
      gen_minCtors $dMinCtorsWorker_s1c45
      = gen_minCtors_$sgen_minCtors2
"SPEC gen_minCtors [*, M1]" [ALWAYS]
    forall $dMinCtorsWorker_s1c46.
      gen_minCtors $dMinCtorsWorker_s1c46
      = gen_minCtors_$sgen_minCtors1
"SPEC gen_minCtors [*, Inf]" [ALWAYS]
    forall $dMinCtorsWorker_s1c47.
      gen_minCtors $dMinCtorsWorker_s1c47
      = gen_minCtors_$sgen_minCtors


[11 of 11] Compiling Data.Yoko.MinCtorsTest ( Data/Yoko/MinCtorsTest.hs, Data/Yoko/MinCtorsTest.o )

==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "TyLit"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "NameSpace"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "PkgName"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "ModName"))



==================== Simplified expression ====================
yokoTH_with
  (YokoOptions
     (id)
     (id)
     (id)
     (let {
        a_s1omI
        a_s1omI =
          mkNameG_d
            (unpackCString# "template-haskell")
            (unpackCString# "Language.Haskell.TH.Syntax")
            (unpackCString# "NameU") } in
      let {
        a_s1omL
        a_s1omL =
          mkNameG_d
            (unpackCString# "template-haskell")
            (unpackCString# "Language.Haskell.TH.Syntax")
            (unpackCString# "NameL") } in
      let {
        a_s1omM
        a_s1omM = : a_s1omL ([]) } in
      let {
        ds_a1omz
        ds_a1omz = : a_s1omI a_s1omM } in
      \ ds_a1omy -> \\ $fEqName ds_a1omy ds_a1omz))
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "NameFlavour"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "OccName"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "Name"))



==================== Simplified expression ====================
$fFunctorQ_$cfmap
  (concat)
  (mapM
     $fMonadQ
     yokoTH
     (: (mkNameG_tc
           (unpackCString# "template-haskell")
           (unpackCString# "Language.Haskell.TH.Syntax")
           (unpackCString# "Pred"))
        (: (mkNameG_tc
              (unpackCString# "template-haskell")
              (unpackCString# "Language.Haskell.TH.Syntax")
              (unpackCString# "TyVarBndr"))
           (: (mkNameG_tc
                 (unpackCString# "template-haskell")
                 (unpackCString# "Language.Haskell.TH.Syntax")
                 (unpackCString# "Type"))
              ([])))))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "RuleBndr"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "Phases"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "RuleMatch"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "Inline"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "Lit"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "FamFlavour"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "Fixity"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "FixityDirection"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "Foreign"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "Safety"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "FunDep"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "Callconv"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "Con"))



==================== Simplified expression ====================
yokoTH
  (mkNameG_tc
     (unpackCString# "template-haskell")
     (unpackCString# "Language.Haskell.TH.Syntax")
     (unpackCString# "Strict"))



==================== Simplified expression ====================
$fFunctorQ_$cfmap
  (concat)
  (mapM
     $fMonadQ
     yokoTH
     (: (mkNameG_tc
           (unpackCString# "template-haskell")
           (unpackCString# "Language.Haskell.TH.Syntax")
           (unpackCString# "Body"))
        (: (mkNameG_tc
              (unpackCString# "template-haskell")
              (unpackCString# "Language.Haskell.TH.Syntax")
              (unpackCString# "Clause"))
           (: (mkNameG_tc
                 (unpackCString# "template-haskell")
                 (unpackCString# "Language.Haskell.TH.Syntax")
                 (unpackCString# "Dec"))
              (: (mkNameG_tc
                    (unpackCString# "template-haskell")
                    (unpackCString# "Language.Haskell.TH.Syntax")
                    (unpackCString# "Exp"))
                 (: (mkNameG_tc
                       (unpackCString# "template-haskell")
                       (unpackCString# "Language.Haskell.TH.Syntax")
                       (unpackCString# "Guard"))
                    (: (mkNameG_tc
                          (unpackCString# "template-haskell")
                          (unpackCString# "Language.Haskell.TH.Syntax")
                          (unpackCString# "Match"))
                       (: (mkNameG_tc
                             (unpackCString# "template-haskell")
                             (unpackCString# "Language.Haskell.TH.Syntax")
                             (unpackCString# "Pat"))
                          (: (mkNameG_tc
                                (unpackCString# "template-haskell")
                                (unpackCString# "Language.Haskell.TH.Syntax")
                                (unpackCString# "Pragma"))
                             (: (mkNameG_tc
                                   (unpackCString# "template-haskell")
                                   (unpackCString# "Language.Haskell.TH.Syntax")
                                   (unpackCString# "Range"))
                                (: (mkNameG_tc
                                      (unpackCString# "template-haskell")
                                      (unpackCString# "Language.Haskell.TH.Syntax")
                                      (unpackCString# "Stmt"))
                                   ([]))))))))))))



==================== Tidy Core ====================
Result size of Tidy Core
  = {terms: 16,698, types: 137,272, coercions: 93,186}

$fMinCtors*Body516
$fMinCtors*Body516 =
  $fMinCtors*[]_$cminCtors ($fMinCtors*Word1 `cast` ...)

$fMinCtors*Body827
$fMinCtors*Body827 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Body826
$fMinCtors*Body826 = $fMinCtors*Body827 (($WVNil) `cast` ...)

$fMinCtors*Body825
$fMinCtors*Body825 =
  VCons
    @~ <(':) * Con ('[] *)>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Body826 `cast` ...)

$fMinCtors*Body1052
$fMinCtors*Body1052 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Body1051
$fMinCtors*Body1051 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Body1050
$fMinCtors*Body1050 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Body1049
$fMinCtors*Body1049 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Body1048
$fMinCtors*Body1048 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Body1047
$fMinCtors*Body1047 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Body1046
$fMinCtors*Body1046 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Body1045
$fMinCtors*Body1045 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Body1044
$fMinCtors*Body1044 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Body1043
$fMinCtors*Body1043 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Body1042
$fMinCtors*Body1042 = $fMinCtors*Body1043 (($WVNil) `cast` ...)

$fMinCtors*Body1041
$fMinCtors*Body1041 =
  VCons
    @~ <(':) * Stmt ('[] *)>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Body1042 `cast` ...)

$fMinCtors*Body1040
$fMinCtors*Body1040 =
  $fMinCtors*Body1044 ($fMinCtors*Body1041 `cast` ...)

$fMinCtors*Body1039
$fMinCtors*Body1039 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Body1040 `cast` ...)

$fMinCtors*Body1038
$fMinCtors*Body1038 =
  $fMinCtors*Body1045 ($fMinCtors*Body1039 `cast` ...)

$fMinCtors*Body1037
$fMinCtors*Body1037 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Body1038 `cast` ...)

$fMinCtors*Body1036
$fMinCtors*Body1036 =
  $fMinCtors*Body1046 ($fMinCtors*Body1037 `cast` ...)

$fMinCtors*Body1035
$fMinCtors*Body1035 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Body1036 `cast` ...)

$fMinCtors*Body1034
$fMinCtors*Body1034 =
  $fMinCtors*Body1047 ($fMinCtors*Body1035 `cast` ...)

$fMinCtors*Body1033
$fMinCtors*Body1033 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Body1034 `cast` ...)

$fMinCtors*Body1032
$fMinCtors*Body1032 =
  $fMinCtors*Body1048 ($fMinCtors*Body1033 `cast` ...)

$fMinCtors*Body1031
$fMinCtors*Body1031 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Body1032 `cast` ...)

$fMinCtors*Body1030
$fMinCtors*Body1030 =
  $fMinCtors*Body1049 ($fMinCtors*Body1031 `cast` ...)

$fMinCtors*Body1029
$fMinCtors*Body1029 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Body1030 `cast` ...)

$fMinCtors*Body1028
$fMinCtors*Body1028 =
  $fMinCtors*Body1050 ($fMinCtors*Body1029 `cast` ...)

$fMinCtors*Body1027
$fMinCtors*Body1027 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Body1028 `cast` ...)

$fMinCtors*Body1026
$fMinCtors*Body1026 =
  $fMinCtors*Body1051 ($fMinCtors*Body1027 `cast` ...)

$fMinCtors*Body1025
$fMinCtors*Body1025 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Body1026 `cast` ...)

$fMinCtors*Body1024
$fMinCtors*Body1024 =
  $fMinCtors*Body1052 ($fMinCtors*Body1025 `cast` ...)

$fMinCtors*Body1023
$fMinCtors*Body1023 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Body1024 `cast` ...)

$fMinCtors*Body285
$fMinCtors*Body285 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Body284
$fMinCtors*Body284 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Body283
$fMinCtors*Body283 = $fFunctorCVec_$cfmap ($WSIdx)

$fMinCtors*Body282
$fMinCtors*Body282 = $fMinCtors*Body283 (($WVNil) `cast` ...)

$fMinCtors*Body281
$fMinCtors*Body281 =
  VCons
    @~ <(':) * Type ('[] *)>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Body282 `cast` ...)

$fMinCtors*Body280
$fMinCtors*Body280 =
  $fMinCtors*Body284 ($fMinCtors*Body281 `cast` ...)

$fMinCtors*Body279
$fMinCtors*Body279 =
  VCons
    @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Body280 `cast` ...)

$fMinCtors*Body278
$fMinCtors*Body278 =
  $fMinCtors*Body285 ($fMinCtors*Body279 `cast` ...)

$fMinCtors*Body277
$fMinCtors*Body277 =
  VCons
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    (($WZIdx) `cast` ...)
    ($fMinCtors*Body278 `cast` ...)

$fMinCtors*Body444
$fMinCtors*Body444 =
  \ @ a_X19p a5_X8To ->
    VCons
      @~ <(':)
            *
            Body
            ((':)
               *
               Clause
               ((':)
                  *
                  Dec
                  ((':)
                     *
                     Exp
                     ((':)
                        *
                        Guard
                        ((':)
                           *
                           Match
                           ((':)
                              * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
      (a5_X8To `cast` ...)
      (VCons
         @~ <(':)
               *
               Clause
               ((':)
                  *
                  Dec
                  ((':)
                     *
                     Exp
                     ((':)
                        *
                        Guard
                        ((':)
                           *
                           Match
                           ((':)
                              * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
         (a5_X8To `cast` ...)
         (VCons
            @~ <(':)
                  *
                  Dec
                  ((':)
                     *
                     Exp
                     ((':)
                        *
                        Guard
                        ((':)
                           *
                           Match
                           ((':)
                              * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
            (a5_X8To `cast` ...)
            (VCons
               @~ <(':)
                     *
                     Exp
                     ((':)
                        *
                        Guard
                        ((':)
                           *
                           Match
                           ((':)
                              * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
               (a5_X8To `cast` ...)
               (VCons
                  @~ <(':)
                        *
                        Guard
                        ((':)
                           *
                           Match
                           ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
                  (a5_X8To `cast` ...)
                  (VCons
                     @~ <(':)
                           *
                           Match
                           ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
                     (a5_X8To `cast` ...)
                     (VCons
                        @~ <(':)
                              * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
                        (a5_X8To `cast` ...)
                        (VCons
                           @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
                           (a5_X8To `cast` ...)
                           (VCons
                              @~ <(':) * Range ((':) * Stmt ('[] *))>
                              (a5_X8To `cast` ...)
                              (VCons
                                 @~ <(':) * Stmt ('[] *)> (a5_X8To `cast` ...) ($WVNil))))))))))

$fMinCtors*Body48
$fMinCtors*Body48 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($WZIdx)

$fMinCtors*Body1021
$fMinCtors*Body1021 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body1020
$fMinCtors*Body1020 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body1021

$fMinCtors*Body31
$fMinCtors*Body31 =
  VCons
    @~ <(':) * Stmt ('[] *)> ($fMinCtors(->)(,)3 `cast` ...) ($WVNil)

$fMinCtors*Body30
$fMinCtors*Body30 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body31

$fMinCtors*Body29
$fMinCtors*Body29 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body30

$fMinCtors*Body28
$fMinCtors*Body28 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body29

$fMinCtors*Body27
$fMinCtors*Body27 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body28

$fMinCtors*Body26
$fMinCtors*Body26 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body27

$fMinCtors*Body25
$fMinCtors*Body25 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body26

$fMinCtors*Body24
$fMinCtors*Body24 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body25

$fMinCtors*Body23
$fMinCtors*Body23 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body24

$fMinCtors*Body22
$fMinCtors*Body22 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body23

$fMinCtors*Body1019
$fMinCtors*Body1019 =
  $fMinCtors*Even_w $fMinCtors*Body1020 $fMinCtors*Body22

$fMinCtors*Body1018
$fMinCtors*Body1018 =
  ($fMinCtors*Body1019 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body1017
$fMinCtors*Body1017 =
  Bin
    1 $fMinCtors*Body1018 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$wa79
$wa79 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body1017

$fMinCtors*Body1016
$fMinCtors*Body1016 = \ _ _ -> $wa79

$fMinCtors*Body685
$fMinCtors*Body685 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body684
$fMinCtors*Body684 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body685

$fMinCtors*Body683
$fMinCtors*Body683 =
  $fMinCtors*Even_w $fMinCtors*Body684 $fMinCtors*Body22

$fMinCtors*Body682
$fMinCtors*Body682 =
  ($fMinCtors*Body683 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body681
$fMinCtors*Body681 =
  Bin
    1 $fMinCtors*Body682 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$wa43
$wa43 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body681

$fMinCtors*Body680
$fMinCtors*Body680 = \ _ _ -> $wa43

$fMinCtors*Body561
$fMinCtors*Body561 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body560
$fMinCtors*Body560 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body561

$fMinCtors*Body559
$fMinCtors*Body559 =
  $fMinCtors*Even_w $fMinCtors*Body560 $fMinCtors*Body22

$fMinCtors*Body558
$fMinCtors*Body558 =
  ($fMinCtors*Body559 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body557
$fMinCtors*Body557 =
  Bin
    1 $fMinCtors*Body558 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$wa35
$wa35 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body557

$fMinCtors*Body556
$fMinCtors*Body556 = \ _ _ -> $wa35

$fMinCtors*Body106
$fMinCtors*Body106 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body105
$fMinCtors*Body105 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body106

$fMinCtors*Body104
$fMinCtors*Body104 =
  $fMinCtors*Even_w $fMinCtors*Body105 $fMinCtors*Body22

$fMinCtors*Body103
$fMinCtors*Body103 =
  ($fMinCtors*Body104 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body102
$fMinCtors*Body102 =
  Bin
    1 $fMinCtors*Body103 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$wa3
$wa3 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body102

$fMinCtors*Body101
$fMinCtors*Body101 = \ _ _ -> $wa3

$fMinCtors*Body47
$fMinCtors*Body47 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body46
$fMinCtors*Body46 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body47

$fMinCtors*Body45
$fMinCtors*Body45 =
  $fMinCtors*Even_w $fMinCtors*Body46 $fMinCtors*Body22

$fMinCtors*Body44
$fMinCtors*Body44 =
  ($fMinCtors*Body45 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body43
$fMinCtors*Body43 =
  Bin 1 $fMinCtors*Body44 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$wa1
$wa1 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body43

$fMinCtors*Body42
$fMinCtors*Body42 = \ _ _ -> $wa1

$fMinCtors*Body73
$fMinCtors*Body73 =
  SIdx
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($WZIdx)

$fMinCtors*Body486
$fMinCtors*Body486 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body73

$fMinCtors*Body485
$fMinCtors*Body485 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body486

$fMinCtors*Body484
$fMinCtors*Body484 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body485

$fMinCtors*Body483
$fMinCtors*Body483 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body484

$fMinCtors*Body482
$fMinCtors*Body482 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body483

$fMinCtors*Body481
$fMinCtors*Body481 =
  $fMinCtors*Even_w $fMinCtors*Body482 $fMinCtors*Body22

$fMinCtors*Body480
$fMinCtors*Body480 =
  ($fMinCtors*Body481 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body479
$fMinCtors*Body479 =
  Bin
    1 $fMinCtors*Body480 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$wa29
$wa29 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body479

$fMinCtors*Body478
$fMinCtors*Body478 = \ _ _ -> $wa29

$fMinCtors*Body474
$fMinCtors*Body474 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body73

$fMinCtors*Body473
$fMinCtors*Body473 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body474

$fMinCtors*Body472
$fMinCtors*Body472 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body473

$fMinCtors*Body471
$fMinCtors*Body471 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body472

$fMinCtors*Body470
$fMinCtors*Body470 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body471

$fMinCtors*Body469
$fMinCtors*Body469 =
  $fMinCtors*Even_w $fMinCtors*Body470 $fMinCtors*Body22

$fMinCtors*Body468
$fMinCtors*Body468 =
  ($fMinCtors*Body469 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body467
$fMinCtors*Body467 =
  Bin
    1 $fMinCtors*Body468 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$wa28
$wa28 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body467

$fMinCtors*Body466
$fMinCtors*Body466 = \ _ _ -> $wa28

$fMinCtors*Body465
$fMinCtors*Body465 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body73

$fMinCtors*Body464
$fMinCtors*Body464 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body465

$fMinCtors*Body463
$fMinCtors*Body463 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body464

$fMinCtors*Body462
$fMinCtors*Body462 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body463

$fMinCtors*Body461
$fMinCtors*Body461 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body462

$fMinCtors*Body460
$fMinCtors*Body460 =
  $fMinCtors*Even_w $fMinCtors*Body461 $fMinCtors*Body22

$fMinCtors*Body459
$fMinCtors*Body459 =
  ($fMinCtors*Body460 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body458
$fMinCtors*Body458 =
  Bin
    1 $fMinCtors*Body459 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$wa27
$wa27 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body458

$fMinCtors*Body457
$fMinCtors*Body457 = \ _ _ -> $wa27

$fMinCtors*Body925
$fMinCtors*Body925 =
  SIdx
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($WZIdx)

$fMinCtors*Body924
$fMinCtors*Body924 =
  SIdx
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    $fMinCtors*Body925

$fMinCtors*Body923
$fMinCtors*Body923 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body924

$fMinCtors*Body922
$fMinCtors*Body922 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body923

$fMinCtors*Body921
$fMinCtors*Body921 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body922

$fMinCtors*Body920
$fMinCtors*Body920 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body921

$fMinCtors*Body919
$fMinCtors*Body919 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body920

$fMinCtors*Body918
$fMinCtors*Body918 =
  $fMinCtors*Even_w $fMinCtors*Body919 $fMinCtors*Body22

$fMinCtors*Body917
$fMinCtors*Body917 =
  ($fMinCtors*Body918 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body916
$fMinCtors*Body916 =
  Bin
    1 $fMinCtors*Body917 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$wa62
$wa62 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body916

$fMinCtors*Body915
$fMinCtors*Body915 = \ _ _ -> $wa62

$fMinCtors*Body613
$fMinCtors*Body613 =
  SIdx
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))> ($WZIdx)

$fMinCtors*Body612
$fMinCtors*Body612 =
  SIdx
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    $fMinCtors*Body613

$fMinCtors*Body611
$fMinCtors*Body611 =
  SIdx
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    $fMinCtors*Body612

$fMinCtors*Body610
$fMinCtors*Body610 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body611

$fMinCtors*Body609
$fMinCtors*Body609 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body610

$fMinCtors*Body608
$fMinCtors*Body608 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body609

$fMinCtors*Body607
$fMinCtors*Body607 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body608

$fMinCtors*Body606
$fMinCtors*Body606 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body607

$fMinCtors*Body605
$fMinCtors*Body605 =
  $fMinCtors*Even_w $fMinCtors*Body606 $fMinCtors*Body22

$fMinCtors*Body604
$fMinCtors*Body604 =
  ($fMinCtors*Body605 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body603
$fMinCtors*Body603 =
  Bin
    1 $fMinCtors*Body604 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$wa39
$wa39 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body603

$fMinCtors*Body602
$fMinCtors*Body602 = \ _ _ -> $wa39

lvl_r1Fl6
lvl_r1Fl6 =
  minima1ToSiblingInT
    ($fMinCtors*Body444 `cast` ...) ($fMinCtors(->)Even20 `cast` ...)

lvl1_r1Fl7
lvl1_r1Fl7 =
  map ($fEnumInt_$csucc `cast` ...) (lvl_r1Fl6 `cast` ...)

$fMinCtors*Body443
$fMinCtors*Body443 = \ _ _ -> lvl1_r1Fl7

$fMinCtors*Body169
$fMinCtors*Body169 =
  \ @ a_X1bE a5_X8VD ->
    VCons
      @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
      (a5_X8VD `cast` ...)
      (VCons
         @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
         (a5_X8VD `cast` ...)
         (VCons @~ <(':) * Type ('[] *)> (a5_X8VD `cast` ...) ($WVNil)))

lvl2_r1Fl8
lvl2_r1Fl8 =
  minima1ToSiblingInT
    ($fMinCtors*Body169 `cast` ...) ($fMinCtors(->)Even20 `cast` ...)

lvl3_r1Fl9
lvl3_r1Fl9 =
  map ($fEnumInt_$csucc `cast` ...) (lvl2_r1Fl8 `cast` ...)

$fMinCtors*Body184
$fMinCtors*Body184 = \ _ _ -> lvl3_r1Fl9

lvl4_r1Fla
lvl4_r1Fla =
  map ($fEnumInt_$csucc `cast` ...) (lvl2_r1Fl8 `cast` ...)

$fMinCtors*Body183
$fMinCtors*Body183 = \ _ _ -> lvl4_r1Fla

lvl5_r1Flb
lvl5_r1Flb =
  map ($fEnumInt_$csucc `cast` ...) (lvl2_r1Fl8 `cast` ...)

$fMinCtors*Body175
$fMinCtors*Body175 = \ _ _ -> lvl5_r1Flb

lvl6_r1Flc
lvl6_r1Flc =
  map ($fEnumInt_$csucc `cast` ...) (lvl2_r1Fl8 `cast` ...)

$fMinCtors*Body172
$fMinCtors*Body172 = \ _ _ -> lvl6_r1Flc

lvl7_r1Fld
lvl7_r1Fld =
  map ($fEnumInt_$csucc `cast` ...) (lvl2_r1Fl8 `cast` ...)

$fMinCtors*Body171
$fMinCtors*Body171 = \ _ _ -> lvl7_r1Fld

lvl8_r1Fle
lvl8_r1Fle =
  map ($fEnumInt_$csucc `cast` ...) (lvl2_r1Fl8 `cast` ...)

$fMinCtors*Body168
$fMinCtors*Body168 = \ _ _ -> lvl8_r1Fle

$fMinCtors*Body_$dEq16
$fMinCtors*Body_$dEq16 = $fEq(,) $fEqInt $fEqInt

$fMinCtors*Body_$dEq15
$fMinCtors*Body_$dEq15 = $fEqMin $fEqInt

$fMinCtors*Body_$dOrd11
$fMinCtors*Body_$dOrd11 = $fOrdVec0 ($fEqVec0)

$fMinCtors*Body_$dEq17
$fMinCtors*Body_$dEq17 = $fEqVec ($fEqInt `cast` ...) ($fEqVec0)

$fMinCtors*Body_$dEq18
$fMinCtors*Body_$dEq18 = $fEqCVec $fMinCtors*Body_$dEq17

$fMinCtors*Body_$dOrd17
$fMinCtors*Body_$dOrd17 =
  $fOrdVec
    $fMinCtors*Body_$dEq17
    ($fOrdInt `cast` ...)
    $fMinCtors*Body_$dOrd11

$fMinCtors*Body_$dOrd16
$fMinCtors*Body_$dOrd16 =
  $fOrdCVec $fMinCtors*Body_$dEq18 $fMinCtors*Body_$dOrd17

$fMinCtors*Body_$dEq
$fMinCtors*Body_$dEq = $fEqVec ($fEqInt `cast` ...) ($fEqVec0)

$fMinCtors*Body_$dEq1
$fMinCtors*Body_$dEq1 =
  $fEqVec ($fEqInt `cast` ...) $fMinCtors*Body_$dEq

$fMinCtors*Body_$dEq2
$fMinCtors*Body_$dEq2 =
  $fEqVec ($fEqInt `cast` ...) $fMinCtors*Body_$dEq1

$fMinCtors*Body_$dEq3
$fMinCtors*Body_$dEq3 =
  $fEqVec ($fEqInt `cast` ...) $fMinCtors*Body_$dEq2

$fMinCtors*Body_$dEq4
$fMinCtors*Body_$dEq4 =
  $fEqVec ($fEqInt `cast` ...) $fMinCtors*Body_$dEq3

$fMinCtors*Body_$dEq5
$fMinCtors*Body_$dEq5 =
  $fEqVec ($fEqInt `cast` ...) $fMinCtors*Body_$dEq4

$fMinCtors*Body_$dEq6
$fMinCtors*Body_$dEq6 =
  $fEqVec ($fEqInt `cast` ...) $fMinCtors*Body_$dEq5

$fMinCtors*Body_$dEq7
$fMinCtors*Body_$dEq7 =
  $fEqVec ($fEqInt `cast` ...) $fMinCtors*Body_$dEq6

$fMinCtors*Body_$dEq8
$fMinCtors*Body_$dEq8 =
  $fEqVec ($fEqInt `cast` ...) $fMinCtors*Body_$dEq7

$fMinCtors*Body_$dEq9
$fMinCtors*Body_$dEq9 =
  $fEqVec ($fEqInt `cast` ...) $fMinCtors*Body_$dEq8

$fMinCtors*Body_$dEq10
$fMinCtors*Body_$dEq10 = $fEqCVec $fMinCtors*Body_$dEq9

$fMinCtors*Body_$dOrd10
$fMinCtors*Body_$dOrd10 =
  $fOrdVec
    $fMinCtors*Body_$dEq ($fOrdInt `cast` ...) $fMinCtors*Body_$dOrd11

$fMinCtors*Body_$dOrd9
$fMinCtors*Body_$dOrd9 =
  $fOrdVec
    $fMinCtors*Body_$dEq1 ($fOrdInt `cast` ...) $fMinCtors*Body_$dOrd10

$fMinCtors*Body_$dOrd8
$fMinCtors*Body_$dOrd8 =
  $fOrdVec
    $fMinCtors*Body_$dEq2 ($fOrdInt `cast` ...) $fMinCtors*Body_$dOrd9

$fMinCtors*Body_$dOrd7
$fMinCtors*Body_$dOrd7 =
  $fOrdVec
    $fMinCtors*Body_$dEq3 ($fOrdInt `cast` ...) $fMinCtors*Body_$dOrd8

$fMinCtors*Body_$dOrd6
$fMinCtors*Body_$dOrd6 =
  $fOrdVec
    $fMinCtors*Body_$dEq4 ($fOrdInt `cast` ...) $fMinCtors*Body_$dOrd7

$fMinCtors*Body_$dOrd5
$fMinCtors*Body_$dOrd5 =
  $fOrdVec
    $fMinCtors*Body_$dEq5 ($fOrdInt `cast` ...) $fMinCtors*Body_$dOrd6

$fMinCtors*Body_$dOrd4
$fMinCtors*Body_$dOrd4 =
  $fOrdVec
    $fMinCtors*Body_$dEq6 ($fOrdInt `cast` ...) $fMinCtors*Body_$dOrd5

$fMinCtors*Body_$dOrd3
$fMinCtors*Body_$dOrd3 =
  $fOrdVec
    $fMinCtors*Body_$dEq7 ($fOrdInt `cast` ...) $fMinCtors*Body_$dOrd4

$fMinCtors*Body_$dOrd2
$fMinCtors*Body_$dOrd2 =
  $fOrdVec
    $fMinCtors*Body_$dEq8 ($fOrdInt `cast` ...) $fMinCtors*Body_$dOrd3

$fMinCtors*Body_$dOrd1
$fMinCtors*Body_$dOrd1 =
  $fOrdVec
    $fMinCtors*Body_$dEq9 ($fOrdInt `cast` ...) $fMinCtors*Body_$dOrd2

$fMinCtors*Body_$dOrd
$fMinCtors*Body_$dOrd =
  $fOrdCVec $fMinCtors*Body_$dEq10 $fMinCtors*Body_$dOrd1

$fMinCtors*Body41
$fMinCtors*Body41 = plug0 $fMinCtors*Body_$dOrd

$fMinCtors*Body661
$fMinCtors*Body661 = plug10 $fMinCtors*Body_$dOrd

$fMinCtors*Body660
$fMinCtors*Body660 =
  addMinima1
    ($fMinCtors(->)(,)7 `cast` ...) ($fMinCtors(->)(,)2 `cast` ...)

$fMinCtors*Body659
$fMinCtors*Body659 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body660 `cast` ...)

$fMinCtors*Body658
$fMinCtors*Body658 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($WZIdx)

$fMinCtors*Body657
$fMinCtors*Body657 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body658

$fMinCtors*Body656
$fMinCtors*Body656 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body657

$fMinCtors*Body655
$fMinCtors*Body655 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body656

$fMinCtors*Body654
$fMinCtors*Body654 =
  $fMinCtors*Even_w $fMinCtors*Body655 $fMinCtors*Body22

$fMinCtors*Body653
$fMinCtors*Body653 =
  ($fMinCtors*Body654 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body652
$fMinCtors*Body652 =
  Bin
    1 $fMinCtors*Body653 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body651
$fMinCtors*Body651 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body650
$fMinCtors*Body650 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body651

$fMinCtors*Body649
$fMinCtors*Body649 =
  $fMinCtors*Even_w $fMinCtors*Body650 $fMinCtors*Body22

$fMinCtors*Body648
$fMinCtors*Body648 =
  ($fMinCtors*Body649 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body647
$fMinCtors*Body647 =
  Bin
    1 $fMinCtors*Body648 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body646
$fMinCtors*Body646 =
  $fMinCtors*Body661
    ($fMinCtors*Body659 `cast` ...)
    ($fMinCtors*Body652 `cast` ...)
    ($fMinCtors*Body647 `cast` ...)

$fMinCtors*Body645
$fMinCtors*Body645 =
  $fMinCtors*Body41 $fMinCtors(->)T12 $fMinCtors*Body646

$fMinCtors*Body644
$fMinCtors*Body644 = \ _ _ -> $fMinCtors*Body645

lvl9_r1Flf
lvl9_r1Flf =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body645 `cast` ...)

$fMinCtors*Body1022
$fMinCtors*Body1022 = \ _ _ -> lvl9_r1Flf

$fMinCtors*Body1015
$fMinCtors*Body1015 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body1022 `cast` ...)
    ($fMinCtors*Body1016 `cast` ...)

$fMinCtors*Body643
$fMinCtors*Body643 = \ _ _ -> lvl9_r1Flf

$fMinCtors*Body426
$fMinCtors*Body426 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body73

$fMinCtors*Body425
$fMinCtors*Body425 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body426

$fMinCtors*Body424
$fMinCtors*Body424 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body425

$fMinCtors*Body423
$fMinCtors*Body423 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body424

$fMinCtors*Body422
$fMinCtors*Body422 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body423

$fMinCtors*Body421
$fMinCtors*Body421 =
  $fMinCtors*Even_w $fMinCtors*Body422 $fMinCtors*Body22

$fMinCtors*Body420
$fMinCtors*Body420 =
  ($fMinCtors*Body421 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body419
$fMinCtors*Body419 =
  Bin
    1 $fMinCtors*Body420 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body418
$fMinCtors*Body418 =
  $fMinCtors*Body41 $fMinCtors(->)T12 ($fMinCtors*Body419 `cast` ...)

$fMinCtors*Body417
$fMinCtors*Body417 = \ _ _ -> $fMinCtors*Body418

lvl10_r1Flg
lvl10_r1Flg =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body418 `cast` ...)

$fMinCtors*Body505
$fMinCtors*Body505 = \ _ _ -> lvl10_r1Flg

$fMinCtors*Body504
$fMinCtors*Body504 = \ _ _ -> lvl10_r1Flg

$fMinCtors*Body416
$fMinCtors*Body416 = \ _ _ -> lvl10_r1Flg

$fMinCtors*Body57
$fMinCtors*Body57 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($WZIdx)

$fMinCtors*Body56
$fMinCtors*Body56 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body57

$fMinCtors*Body55
$fMinCtors*Body55 =
  $fMinCtors*Even_w $fMinCtors*Body56 $fMinCtors*Body22

$fMinCtors*Body54
$fMinCtors*Body54 =
  ($fMinCtors*Body55 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body53
$fMinCtors*Body53 =
  Bin 1 $fMinCtors*Body54 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body52
$fMinCtors*Body52 =
  $fMinCtors*Body41 $fMinCtors(->)T12 ($fMinCtors*Body53 `cast` ...)

$fMinCtors*Body51
$fMinCtors*Body51 = \ _ _ -> $fMinCtors*Body52

$fMinCtors*Body74
$fMinCtors*Body74 = addSiblingInTs $fMinCtors*Body_$dOrd

$fMinCtors*Body543
$fMinCtors*Body543 = $fMinCtors*Even_w ($WZIdx) $fMinCtors*Body22

$fMinCtors*Body542
$fMinCtors*Body542 =
  ($fMinCtors*Body543 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body541
$fMinCtors*Body541 =
  Bin
    1 $fMinCtors*Body542 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body540
$fMinCtors*Body540 =
  $fMinCtors*Body74 ($fMinCtors*Body541 `cast` ...) $fMinCtors*Body52

$fMinCtors*Body1013
$fMinCtors*Body1013 =
  $fMinCtors*Body74 $fMinCtors*Body418 $fMinCtors*Body540

$wa78
$wa78 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body1013 `cast` ...)

lvl11_r1Flh
lvl11_r1Flh =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body52 `cast` ...)

$fMinCtors*Body50
$fMinCtors*Body50 = \ _ _ -> lvl11_r1Flh

$fMinCtors*Body551
$fMinCtors*Body551 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body73

$fMinCtors*Body550
$fMinCtors*Body550 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body551

$fMinCtors*Body549
$fMinCtors*Body549 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body550

$fMinCtors*Body548
$fMinCtors*Body548 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body549

$fMinCtors*Body547
$fMinCtors*Body547 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body548

$fMinCtors*Body546
$fMinCtors*Body546 =
  $fMinCtors*Even_w $fMinCtors*Body547 $fMinCtors*Body22

$fMinCtors*Body545
$fMinCtors*Body545 =
  ($fMinCtors*Body546 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body544
$fMinCtors*Body544 =
  Bin
    1 $fMinCtors*Body545 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body539
$fMinCtors*Body539 =
  $fMinCtors*Body74
    ($fMinCtors*Body544 `cast` ...) $fMinCtors*Body540

$fMinCtors*Body1005
$fMinCtors*Body1005 = \ _ _ -> $fMinCtors*Body539

$fMinCtors*Body538
$fMinCtors*Body538 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body539 `cast` ...)

$fMinCtors*Body1004
$fMinCtors*Body1004 = \ _ _ -> $fMinCtors*Body538

$fMinCtors*Body91
$fMinCtors*Body91 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body90
$fMinCtors*Body90 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body91

$fMinCtors*Body89
$fMinCtors*Body89 =
  $fMinCtors*Even_w $fMinCtors*Body90 $fMinCtors*Body22

$fMinCtors*Body88
$fMinCtors*Body88 =
  ($fMinCtors*Body89 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body87
$fMinCtors*Body87 =
  Bin 1 $fMinCtors*Body88 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body86
$fMinCtors*Body86 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body85
$fMinCtors*Body85 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body86

$fMinCtors*Body84
$fMinCtors*Body84 =
  $fMinCtors*Even_w $fMinCtors*Body85 $fMinCtors*Body22

$fMinCtors*Body83
$fMinCtors*Body83 =
  ($fMinCtors*Body84 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body82
$fMinCtors*Body82 =
  Bin 1 $fMinCtors*Body83 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body81
$fMinCtors*Body81 =
  $fMinCtors*Body74
    ($fMinCtors*Body87 `cast` ...) ($fMinCtors*Body82 `cast` ...)

$fMinCtors*Body98
$fMinCtors*Body98 = \ _ _ -> $fMinCtors*Body81

lvl12_r1Fli
lvl12_r1Fli =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body81 `cast` ...)

$fMinCtors*Body713
$fMinCtors*Body713 = \ _ _ -> lvl12_r1Fli

$fMinCtors*Body100
$fMinCtors*Body100 = \ _ _ -> lvl12_r1Fli

$fMinCtors*Body97
$fMinCtors*Body97 = \ _ _ -> lvl12_r1Fli

$fMinCtors*Body117
$fMinCtors*Body117 =
  map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)Even20

$fMinCtors*Body700
$fMinCtors*Body700 =
  map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)(,)2

$fMinCtors*Body712
$fMinCtors*Body712 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body700

$fMinCtors*Body711
$fMinCtors*Body711 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body710
$fMinCtors*Body710 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body711

$fMinCtors*Body709
$fMinCtors*Body709 =
  $fMinCtors*Even_w $fMinCtors*Body710 $fMinCtors*Body22

$fMinCtors*Body708
$fMinCtors*Body708 =
  ($fMinCtors*Body709 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body707
$fMinCtors*Body707 =
  Bin
    1 $fMinCtors*Body708 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body706
$fMinCtors*Body706 =
  $fMinCtors*Body41
    ($fMinCtors*Body712 `cast` ...) ($fMinCtors*Body707 `cast` ...)

$fMinCtors*Body705
$fMinCtors*Body705 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body704
$fMinCtors*Body704 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body705

$fMinCtors*Body703
$fMinCtors*Body703 =
  $fMinCtors*Even_w $fMinCtors*Body704 $fMinCtors*Body22

$fMinCtors*Body702
$fMinCtors*Body702 =
  ($fMinCtors*Body703 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body701
$fMinCtors*Body701 =
  Bin
    1 $fMinCtors*Body702 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body699
$fMinCtors*Body699 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body700

$fMinCtors*Body698
$fMinCtors*Body698 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body697
$fMinCtors*Body697 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body698

$fMinCtors*Body696
$fMinCtors*Body696 =
  $fMinCtors*Even_w $fMinCtors*Body697 $fMinCtors*Body22

$fMinCtors*Body695
$fMinCtors*Body695 =
  ($fMinCtors*Body696 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body694
$fMinCtors*Body694 =
  Bin
    1 $fMinCtors*Body695 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body693
$fMinCtors*Body693 =
  $fMinCtors*Body41
    ($fMinCtors*Body699 `cast` ...) ($fMinCtors*Body694 `cast` ...)

$fMinCtors*Body692
$fMinCtors*Body692 =
  $fMinCtors*Body74
    ($fMinCtors*Body701 `cast` ...) $fMinCtors*Body693

$fMinCtors*Body691
$fMinCtors*Body691 =
  $fMinCtors*Body74 $fMinCtors*Body706 $fMinCtors*Body692

$wa44
$wa44 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body691 `cast` ...)

$fMinCtors*Body690
$fMinCtors*Body690 = \ _ _ -> $wa44

$fMinCtors*Body689
$fMinCtors*Body689 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body713 `cast` ...)
    ($fMinCtors*Body690 `cast` ...)

$fMinCtors*Body96
$fMinCtors*Body96 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body95
$fMinCtors*Body95 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body96

$fMinCtors*Body94
$fMinCtors*Body94 =
  $fMinCtors*Even_w $fMinCtors*Body95 $fMinCtors*Body22

$fMinCtors*Body93
$fMinCtors*Body93 =
  ($fMinCtors*Body94 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body92
$fMinCtors*Body92 =
  Bin 1 $fMinCtors*Body93 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body80
$fMinCtors*Body80 =
  $fMinCtors*Body74 ($fMinCtors*Body92 `cast` ...) $fMinCtors*Body81

$fMinCtors*Body79
$fMinCtors*Body79 = \ _ _ -> $fMinCtors*Body80

lvl13_r1Flj
lvl13_r1Flj =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body80 `cast` ...)

$fMinCtors*Body686
$fMinCtors*Body686 = \ _ _ -> lvl13_r1Flj

$fMinCtors*Body662
$fMinCtors*Body662 = \ _ _ -> lvl13_r1Flj

$fMinCtors*Body78
$fMinCtors*Body78 = \ _ _ -> lvl13_r1Flj

$fMinCtors*Body679
$fMinCtors*Body679 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body678
$fMinCtors*Body678 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body679

$fMinCtors*Body677
$fMinCtors*Body677 =
  $fMinCtors*Even_w $fMinCtors*Body678 $fMinCtors*Body22

$fMinCtors*Body676
$fMinCtors*Body676 =
  ($fMinCtors*Body677 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body675
$fMinCtors*Body675 =
  Bin
    1 $fMinCtors*Body676 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body674
$fMinCtors*Body674 =
  $fMinCtors*Body74
    $fMinCtors*Body418 ($fMinCtors*Body675 `cast` ...)

$wa42
$wa42 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body674 `cast` ...)

$fMinCtors*Body673
$fMinCtors*Body673 = \ _ _ -> $wa42

$fMinCtors*Body672
$fMinCtors*Body672 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body680 `cast` ...)
    ($fMinCtors*Body673 `cast` ...)

$fMinCtors*Body671
$fMinCtors*Body671 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body686 `cast` ...)
    ($fMinCtors*Body672 `cast` ...)

$fMinCtors*Body629
$fMinCtors*Body629 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($WZIdx)

$fMinCtors*Body628
$fMinCtors*Body628 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body629

$fMinCtors*Body627
$fMinCtors*Body627 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body628

$fMinCtors*Body626
$fMinCtors*Body626 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body627

$fMinCtors*Body625
$fMinCtors*Body625 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body626

$fMinCtors*Body624
$fMinCtors*Body624 =
  $fMinCtors*Even_w $fMinCtors*Body625 $fMinCtors*Body22

$fMinCtors*Body623
$fMinCtors*Body623 =
  ($fMinCtors*Body624 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body622
$fMinCtors*Body622 =
  Bin
    1 $fMinCtors*Body623 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body621
$fMinCtors*Body621 =
  $fMinCtors*Body41 $fMinCtors(->)T12 ($fMinCtors*Body622 `cast` ...)

$fMinCtors*Body670
$fMinCtors*Body670 = \ _ _ -> $fMinCtors*Body621

lvl14_r1Flk
lvl14_r1Flk =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body621 `cast` ...)

$fMinCtors*Body669
$fMinCtors*Body669 = \ _ _ -> lvl14_r1Flk

$fMinCtors*Body601
$fMinCtors*Body601 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body600
$fMinCtors*Body600 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body601

$fMinCtors*Body599
$fMinCtors*Body599 =
  $fMinCtors*Even_w $fMinCtors*Body600 $fMinCtors*Body22

$fMinCtors*Body598
$fMinCtors*Body598 =
  ($fMinCtors*Body599 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body597
$fMinCtors*Body597 =
  Bin
    1 $fMinCtors*Body598 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body596
$fMinCtors*Body596 =
  $fMinCtors*Body41 $fMinCtors(->)T12 ($fMinCtors*Body597 `cast` ...)

$fMinCtors*Body595
$fMinCtors*Body595 = \ _ _ -> $fMinCtors*Body596

lvl15_r1Fll
lvl15_r1Fll =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body596 `cast` ...)

$fMinCtors*Body668
$fMinCtors*Body668 = \ _ _ -> lvl15_r1Fll

$fMinCtors*Body667
$fMinCtors*Body667 = \ _ _ -> lvl15_r1Fll

$fMinCtors*Body666
$fMinCtors*Body666 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body668 `cast` ...)
    ($fMinCtors*Body667 `cast` ...)

$fMinCtors*Body665
$fMinCtors*Body665 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body669 `cast` ...)
    ($fMinCtors*Body666 `cast` ...)

$fMinCtors*Body664
$fMinCtors*Body664 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body671 `cast` ...)
    ($fMinCtors*Body665 `cast` ...)

$fMinCtors*Body594
$fMinCtors*Body594 = \ _ _ -> lvl15_r1Fll

$fMinCtors*Body642
$fMinCtors*Body642 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body662 `cast` ...)
    ($fMinCtors*Body643 `cast` ...)

$fMinCtors*Body641
$fMinCtors*Body641 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body640
$fMinCtors*Body640 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body641

$fMinCtors*Body639
$fMinCtors*Body639 =
  $fMinCtors*Even_w $fMinCtors*Body640 $fMinCtors*Body22

$fMinCtors*Body638
$fMinCtors*Body638 =
  ($fMinCtors*Body639 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body637
$fMinCtors*Body637 =
  Bin
    1 $fMinCtors*Body638 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body636
$fMinCtors*Body636 =
  $fMinCtors*Body74 $fMinCtors*Body52 ($fMinCtors*Body637 `cast` ...)

$wa41
$wa41 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body636 `cast` ...)

$fMinCtors*Body635
$fMinCtors*Body635 = \ _ _ -> $wa41

$fMinCtors*Body634
$fMinCtors*Body634 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body633
$fMinCtors*Body633 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body634

$fMinCtors*Body632
$fMinCtors*Body632 =
  $fMinCtors*Even_w $fMinCtors*Body633 $fMinCtors*Body22

$fMinCtors*Body631
$fMinCtors*Body631 =
  ($fMinCtors*Body632 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body630
$fMinCtors*Body630 =
  Bin
    1 $fMinCtors*Body631 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body620
$fMinCtors*Body620 =
  $fMinCtors*Body74
    ($fMinCtors*Body630 `cast` ...) $fMinCtors*Body621

$wa40
$wa40 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body620 `cast` ...)

$fMinCtors*Body619
$fMinCtors*Body619 = \ _ _ -> $wa40

$fMinCtors*Body40
$fMinCtors*Body40 =
  SIdx @~ <(':) * Range ((':) * Stmt ('[] *))> ($WZIdx)

$fMinCtors*Body39
$fMinCtors*Body39 =
  SIdx
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    $fMinCtors*Body40

$fMinCtors*Body38
$fMinCtors*Body38 =
  SIdx
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    $fMinCtors*Body39

$fMinCtors*Body37
$fMinCtors*Body37 =
  SIdx
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    $fMinCtors*Body38

$fMinCtors*Body36
$fMinCtors*Body36 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body37

$fMinCtors*Body35
$fMinCtors*Body35 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body36

$fMinCtors*Body34
$fMinCtors*Body34 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body35

$fMinCtors*Body33
$fMinCtors*Body33 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body34

$fMinCtors*Body32
$fMinCtors*Body32 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body33

$fMinCtors*Body21
$fMinCtors*Body21 =
  $fMinCtors*Even_w $fMinCtors*Body32 $fMinCtors*Body22

$fMinCtors*Body20
$fMinCtors*Body20 =
  ($fMinCtors*Body21 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body19
$fMinCtors*Body19 =
  Bin 1 $fMinCtors*Body20 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body18
$fMinCtors*Body18 =
  $fMinCtors*Body41 $fMinCtors(->)T12 ($fMinCtors*Body19 `cast` ...)

$fMinCtors*Body555
$fMinCtors*Body555 = \ _ _ -> $fMinCtors*Body18

lvl16_r1Flm
lvl16_r1Flm =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body18 `cast` ...)

$fMinCtors*Body618
$fMinCtors*Body618 = \ _ _ -> lvl16_r1Flm

$fMinCtors*Body617
$fMinCtors*Body617 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body619 `cast` ...)
    ($fMinCtors*Body618 `cast` ...)

$fMinCtors*Body616
$fMinCtors*Body616 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body635 `cast` ...)
    ($fMinCtors*Body617 `cast` ...)

$fMinCtors*Body615
$fMinCtors*Body615 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body642 `cast` ...)
    ($fMinCtors*Body616 `cast` ...)

$fMinCtors*Body614
$fMinCtors*Body614 = \ _ _ -> lvl16_r1Flm

$fMinCtors*Body554
$fMinCtors*Body554 = \ _ _ -> lvl16_r1Flm

$fMinCtors*Body593
$fMinCtors*Body593 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body602 `cast` ...)
    ($fMinCtors*Body594 `cast` ...)

$fMinCtors*Body592
$fMinCtors*Body592 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body614 `cast` ...)
    ($fMinCtors*Body593 `cast` ...)

$fMinCtors*Body553
$fMinCtors*Body553 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body556 `cast` ...)
    ($fMinCtors*Body554 `cast` ...)

$fMinCtors*Body503
$fMinCtors*Body503 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body505 `cast` ...)
    ($fMinCtors*Body504 `cast` ...)

$fMinCtors*Body456
$fMinCtors*Body456 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body466 `cast` ...)
    ($fMinCtors*Body457 `cast` ...)

$fMinCtors*Body404
$fMinCtors*Body404 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body403
$fMinCtors*Body403 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body404

$fMinCtors*Body402
$fMinCtors*Body402 =
  $fMinCtors*Even_w $fMinCtors*Body403 $fMinCtors*Body22

$fMinCtors*Body401
$fMinCtors*Body401 =
  ($fMinCtors*Body402 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body400
$fMinCtors*Body400 =
  Bin
    1 $fMinCtors*Body401 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body399
$fMinCtors*Body399 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body73

$fMinCtors*Body398
$fMinCtors*Body398 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body399

$fMinCtors*Body397
$fMinCtors*Body397 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body398

$fMinCtors*Body396
$fMinCtors*Body396 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body397

$fMinCtors*Body395
$fMinCtors*Body395 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body396

$fMinCtors*Body394
$fMinCtors*Body394 =
  $fMinCtors*Even_w $fMinCtors*Body395 $fMinCtors*Body22

$fMinCtors*Body393
$fMinCtors*Body393 =
  ($fMinCtors*Body394 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body392
$fMinCtors*Body392 =
  Bin
    1 $fMinCtors*Body393 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body391
$fMinCtors*Body391 =
  $fMinCtors*Body74
    ($fMinCtors*Body400 `cast` ...) ($fMinCtors*Body392 `cast` ...)

$wa24
$wa24 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body391 `cast` ...)

$fMinCtors*Body390
$fMinCtors*Body390 = \ _ _ -> $wa24

$fMinCtors*Body99
$fMinCtors*Body99 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body101 `cast` ...)
    ($fMinCtors*Body100 `cast` ...)

$fMinCtors*Body77
$fMinCtors*Body77 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body97 `cast` ...)
    ($fMinCtors*Body78 `cast` ...)

$fMinCtors*Body76
$fMinCtors*Body76 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body99 `cast` ...)
    ($fMinCtors*Body77 `cast` ...)

$fMinCtors*Body72
$fMinCtors*Body72 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body73

$fMinCtors*Body71
$fMinCtors*Body71 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body72

$fMinCtors*Body70
$fMinCtors*Body70 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body71

$fMinCtors*Body69
$fMinCtors*Body69 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body70

$fMinCtors*Body68
$fMinCtors*Body68 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body69

$fMinCtors*Body67
$fMinCtors*Body67 =
  $fMinCtors*Even_w $fMinCtors*Body68 $fMinCtors*Body22

$fMinCtors*Body66
$fMinCtors*Body66 =
  ($fMinCtors*Body67 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body65
$fMinCtors*Body65 =
  Bin 1 $fMinCtors*Body66 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body64
$fMinCtors*Body64 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body63
$fMinCtors*Body63 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body64

$fMinCtors*Body62
$fMinCtors*Body62 =
  $fMinCtors*Even_w $fMinCtors*Body63 $fMinCtors*Body22

$fMinCtors*Body61
$fMinCtors*Body61 =
  ($fMinCtors*Body62 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body60
$fMinCtors*Body60 =
  Bin 1 $fMinCtors*Body61 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body59
$fMinCtors*Body59 =
  $fMinCtors*Body74
    ($fMinCtors*Body65 `cast` ...) ($fMinCtors*Body60 `cast` ...)

$wa2
$wa2 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body59 `cast` ...)

$fMinCtors*Body58
$fMinCtors*Body58 = \ _ _ -> $wa2

$fMinCtors*Body49
$fMinCtors*Body49 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body58 `cast` ...)
    ($fMinCtors*Body50 `cast` ...)

$fMinCtors*Body17
$fMinCtors*Body17 =
  $fMinCtors*Body41 $fMinCtors(->)T12 $fMinCtors*Body18

$wa
$wa =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body17 `cast` ...)

$fMinCtors*Body16
$fMinCtors*Body16 = \ _ _ -> $wa

$fMinCtors*Body15
$fMinCtors*Body15 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body42 `cast` ...)
    ($fMinCtors*Body16 `cast` ...)

$fMinCtors*Body14
$fMinCtors*Body14 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body49 `cast` ...)
    ($fMinCtors*Body15 `cast` ...)

$fMinCtors*Body_$dEq11
$fMinCtors*Body_$dEq11 = $fEqVec ($fEqInt `cast` ...) ($fEqVec0)

$fMinCtors*Body_$dOrd15
$fMinCtors*Body_$dOrd15 =
  $fOrdVec
    $fMinCtors*Body_$dEq11
    ($fOrdInt `cast` ...)
    $fMinCtors*Body_$dOrd11

$fMinCtors*Body_$dEq12
$fMinCtors*Body_$dEq12 =
  $fEqVec ($fEqInt `cast` ...) $fMinCtors*Body_$dEq11

$fMinCtors*Body_$dOrd14
$fMinCtors*Body_$dOrd14 =
  $fOrdVec
    $fMinCtors*Body_$dEq12
    ($fOrdInt `cast` ...)
    $fMinCtors*Body_$dOrd15

$fMinCtors*Body_$dEq13
$fMinCtors*Body_$dEq13 =
  $fEqVec ($fEqInt `cast` ...) $fMinCtors*Body_$dEq12

$fMinCtors*Body_$dOrd13
$fMinCtors*Body_$dOrd13 =
  $fOrdVec
    $fMinCtors*Body_$dEq13
    ($fOrdInt `cast` ...)
    $fMinCtors*Body_$dOrd14

$fMinCtors*Body_$dEq14
$fMinCtors*Body_$dEq14 = $fEqCVec $fMinCtors*Body_$dEq13

$fMinCtors*Body_$dOrd12
$fMinCtors*Body_$dOrd12 =
  $fOrdCVec $fMinCtors*Body_$dEq14 $fMinCtors*Body_$dOrd13

$fMinCtors*Body182
$fMinCtors*Body182 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body184 `cast` ...)
    ($fMinCtors*Body183 `cast` ...)

$fMinCtors*Body170
$fMinCtors*Body170 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body172 `cast` ...)
    ($fMinCtors*Body171 `cast` ...)

$fMinCtors*Body228
$fMinCtors*Body228 = addSiblingInTs $fMinCtors*Body_$dOrd12

$fMinCtors*Body221
$fMinCtors*Body221 =
  SIdx @~ <(':) * TyVarBndr ((':) * Type ('[] *))> ($WZIdx)

$fMinCtors*Body227
$fMinCtors*Body227 =
  SIdx
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    $fMinCtors*Body221

$fMinCtors*Body167
$fMinCtors*Body167 =
  VCons
    @~ <(':) * Type ('[] *)> ($fMinCtors(->)(,)3 `cast` ...) ($WVNil)

$fMinCtors*Body226
$fMinCtors*Body226 =
  VCons
    @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body167

$fMinCtors*Body225
$fMinCtors*Body225 =
  VCons
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body226

$fMinCtors*Body224
$fMinCtors*Body224 =
  $fMinCtors*Even_w $fMinCtors*Body227 $fMinCtors*Body225

$fMinCtors*Body223
$fMinCtors*Body223 =
  ($fMinCtors*Body224 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body222
$fMinCtors*Body222 =
  Bin
    1 $fMinCtors*Body223 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body220
$fMinCtors*Body220 =
  SIdx
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    $fMinCtors*Body221

$fMinCtors*Body219
$fMinCtors*Body219 =
  VCons
    @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body167

$fMinCtors*Body218
$fMinCtors*Body218 =
  VCons
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body219

$fMinCtors*Body217
$fMinCtors*Body217 =
  $fMinCtors*Even_w $fMinCtors*Body220 $fMinCtors*Body218

$fMinCtors*Body216
$fMinCtors*Body216 =
  ($fMinCtors*Body217 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body215
$fMinCtors*Body215 =
  Bin
    1 $fMinCtors*Body216 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body214
$fMinCtors*Body214 =
  $fMinCtors*Body228
    ($fMinCtors*Body222 `cast` ...) ($fMinCtors*Body215 `cast` ...)

$fMinCtors*Body213
$fMinCtors*Body213 = \ _ _ -> $fMinCtors*Body214

lvl17_r1Fln
lvl17_r1Fln =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body214 `cast` ...)

$fMinCtors*Body267
$fMinCtors*Body267 = \ _ _ -> lvl17_r1Fln

$fMinCtors*Body230
$fMinCtors*Body230 = \ _ _ -> lvl17_r1Fln

$fMinCtors*Body212
$fMinCtors*Body212 = \ _ _ -> lvl17_r1Fln

$fMinCtors*Body246
$fMinCtors*Body246 = plug0 $fMinCtors*Body_$dOrd12

$fMinCtors*Body253
$fMinCtors*Body253 =
  SIdx
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))> ($WZIdx)

$fMinCtors*Body252
$fMinCtors*Body252 =
  VCons
    @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body167

$fMinCtors*Body251
$fMinCtors*Body251 =
  VCons
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body252

$fMinCtors*Body250
$fMinCtors*Body250 =
  $fMinCtors*Even_w $fMinCtors*Body253 $fMinCtors*Body251

$fMinCtors*Body249
$fMinCtors*Body249 =
  ($fMinCtors*Body250 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body248
$fMinCtors*Body248 =
  Bin
    1 $fMinCtors*Body249 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body247
$fMinCtors*Body247 =
  $fMinCtors*Body246
    $fMinCtors(->)T12 ($fMinCtors*Body248 `cast` ...)

$fMinCtors*Body245
$fMinCtors*Body245 =
  VCons
    @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body167

$fMinCtors*Body244
$fMinCtors*Body244 =
  VCons
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body245

$fMinCtors*Body243
$fMinCtors*Body243 = $fMinCtors*Even_w ($WZIdx) $fMinCtors*Body244

$fMinCtors*Body242
$fMinCtors*Body242 =
  ($fMinCtors*Body243 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body241
$fMinCtors*Body241 =
  Bin
    1 $fMinCtors*Body242 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body240
$fMinCtors*Body240 =
  $fMinCtors*Body246
    $fMinCtors(->)T12 ($fMinCtors*Body241 `cast` ...)

$fMinCtors*Body239
$fMinCtors*Body239 =
  SIdx
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    $fMinCtors*Body221

$fMinCtors*Body238
$fMinCtors*Body238 =
  VCons
    @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body167

$fMinCtors*Body237
$fMinCtors*Body237 =
  VCons
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body238

$fMinCtors*Body236
$fMinCtors*Body236 =
  $fMinCtors*Even_w $fMinCtors*Body239 $fMinCtors*Body237

$fMinCtors*Body235
$fMinCtors*Body235 =
  ($fMinCtors*Body236 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body234
$fMinCtors*Body234 =
  Bin
    1 $fMinCtors*Body235 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body233
$fMinCtors*Body233 =
  $fMinCtors*Body228
    $fMinCtors*Body240 ($fMinCtors*Body234 `cast` ...)

$fMinCtors*Body232
$fMinCtors*Body232 =
  $fMinCtors*Body228 $fMinCtors*Body247 $fMinCtors*Body233

$wa16
$wa16 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body232 `cast` ...)

$fMinCtors*Body231
$fMinCtors*Body231 = \ _ _ -> $wa16

$fMinCtors*Body229
$fMinCtors*Body229 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body231 `cast` ...)
    ($fMinCtors*Body230 `cast` ...)

$fMinCtors*Body181
$fMinCtors*Body181 =
  VCons
    @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body167

$fMinCtors*Body180
$fMinCtors*Body180 =
  VCons
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body181

$fMinCtors*Body179
$fMinCtors*Body179 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body180 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body178
$fMinCtors*Body178 = map (id) $fMinCtors(->)S3

$wa9
$wa9 = mapKeysMonotonic $fMinCtors*Body179 $fMinCtors*Body178

a_r1Flo
a_r1Flo = \ _ _ -> $wa9

$fMinCtors*Body177
$fMinCtors*Body177 = a_r1Flo `cast` ...

lvl18_r1Flp
lvl18_r1Flp = map ($fEnumInt_$csucc `cast` ...) $wa9

$fMinCtors*Body189
$fMinCtors*Body189 = \ _ _ -> lvl18_r1Flp

$fMinCtors*Body188
$fMinCtors*Body188 = \ _ _ -> lvl18_r1Flp

$fMinCtors*Body187
$fMinCtors*Body187 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body189 `cast` ...)
    ($fMinCtors*Body188 `cast` ...)

$fMinCtors*Body176
$fMinCtors*Body176 = \ _ _ -> lvl18_r1Flp

$fMinCtors*Body174
$fMinCtors*Body174 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body176 `cast` ...)
    ($fMinCtors*Body175 `cast` ...)

$fMinCtors*Body173
$fMinCtors*Body173 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body182 `cast` ...)
    ($fMinCtors*Body174 `cast` ...)

$fMinCtors*Body116
$fMinCtors*Body116 =
  map ($fEnumInt_$csucc `cast` ...) $fMinCtors(->)S3

$wa6
$wa6 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body116
    $fMinCtors*Body116

$wa21
$wa21 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body117

$wa65
$wa65 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body117

$wa70
$wa70 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body117

$wa53
$wa53 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body117

$wa14
$wa14 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body117

$fMinCtors*Body163
$fMinCtors*Body163 =
  $fMinCtors*[]_$cminCtors ($fMinCtors*Char1 `cast` ...)

$fMinCtors*Body162
$fMinCtors*Body162 = $fMinCtors*Body163 (Proxy)

$fMinCtors*Body527
$fMinCtors*Body527 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body162 `cast` ...)

$fMinCtors*Body526
$fMinCtors*Body526 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body116
    $fMinCtors*Body527

$fMinCtors*Body519
$fMinCtors*Body519 =
  addMinima1
    ($fMinCtors(->)S3 `cast` ...) ($fMinCtors(->)S3 `cast` ...)

$fMinCtors*Body525
$fMinCtors*Body525 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body519 `cast` ...)

$fMinCtors*Body524
$fMinCtors*Body524 =
  map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body525

$fMinCtors*Body523
$fMinCtors*Body523 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body116
    $fMinCtors*Body524

$wa34
$wa34 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body526
    $fMinCtors*Body523

$fMinCtors*Body522
$fMinCtors*Body522 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body116
    $fMinCtors*Body116

$fMinCtors*Body521
$fMinCtors*Body521 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body519 `cast` ...)

$fMinCtors*Body520
$fMinCtors*Body520 =
  map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body521

$fMinCtors*Body518
$fMinCtors*Body518 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body519 `cast` ...)

$fMinCtors*Body517
$fMinCtors*Body517 =
  map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body518

$fMinCtors*Body515
$fMinCtors*Body515 = $fMinCtors*Body516 (Proxy)

$fMinCtors*Body514
$fMinCtors*Body514 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body515 `cast` ...)

$fMinCtors*Body513
$fMinCtors*Body513 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body517
    $fMinCtors*Body514

$fMinCtors*Body512
$fMinCtors*Body512 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body520
    $fMinCtors*Body513

$wa33
$wa33 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body522
    $fMinCtors*Body512

$fDC0GuardedB__$crejoin0
$fDC0GuardedB__$crejoin0 =
  \ ds_d1vZc ->
    case ds_d1vZc of _ { GuardedB_ x0_a1pmZ ->
    (GuardedB x0_a1pmZ) `cast` ...
    }

$fGeneric0GuardedB__x
$fGeneric0GuardedB__x =
  \ @ p1_t6rW @ p0_t6rX x_X2li ->
    (case x_X2li `cast` ... of _ { (x1_a1cnB, _) ->
     x1_a1cnB `cast` ...
     },
     case x_X2li `cast` ... of _ { (_, y_a1cnH) -> y_a1cnH `cast` ... })

$fGeneric0GuardedB__$cobj0
$fGeneric0GuardedB__$cobj0 =
  \ @ p1_t6rW @ p0_t6rX ds_d1vYJ ->
    GuardedB_ (map ($fGeneric0GuardedB__x) (ds_d1vYJ `cast` ...))

$fGeneric0GuardedB_1
$fGeneric0GuardedB_1 =
  \ @ p1_t6qO @ p0_t6qP x_X2lv ->
    (case x_X2lv of _ { (x1_a1cnB, y_a1cnC) -> x1_a1cnB `cast` ... },
     case x_X2lv of _ { (x1_a1cnG, y_a1cnH) -> y_a1cnH `cast` ... })

$fGeneric0GuardedB__$crep0
$fGeneric0GuardedB__$crep0 =
  \ @ p1_t6qO @ p0_t6qP ds_d1vYg ->
    case ds_d1vYg of _ { GuardedB_ x0_a1pmU ->
    (map (($fGeneric0GuardedB_1) `cast` ...) x0_a1pmU) `cast` ...
    }

$fGeneric0GuardedB_
$fGeneric0GuardedB_ =
  D:Generic0 $fGeneric0GuardedB__$crep0 $fGeneric0GuardedB__$cobj0

$fDC0NormalB__$crejoin0
$fDC0NormalB__$crejoin0 =
  \ ds_d1vYc ->
    case ds_d1vYc of _ { NormalB_ x0_a1pmT ->
    (NormalB x0_a1pmT) `cast` ...
    }

$fGeneric0NormalB__$cobj0
$fGeneric0NormalB__$cobj0 =
  \ @ p1_t6qD @ p0_t6qE ds_d1vXR -> NormalB_ (ds_d1vXR `cast` ...)

$fGeneric0NormalB__$crep0
$fGeneric0NormalB__$crep0 =
  \ @ p1_t6qs @ p0_t6qt ds_d1vXy ->
    case ds_d1vXy of _ { NormalB_ x0_a1pmR -> x0_a1pmR `cast` ... }

$fGeneric0NormalB_
$fGeneric0NormalB_ =
  D:Generic0 $fGeneric0NormalB__$crep0 $fGeneric0NormalB__$cobj0

$fDT0Body_$cdisband0
$fDT0Body_$cdisband0 =
  \ @ p1_t6q6 @ p0_t6q7 ds_d1vXa ->
    case ds_d1vXa of _ {
      GuardedB x0_a1pmP ->
        (L ((GuardedB_ x0_a1pmP) `cast` ...)) `cast` ...;
      NormalB x0_a1pmQ -> (R ((NormalB_ x0_a1pmQ) `cast` ...)) `cast` ...
    }

$fDT0Body1
$fDT0Body1 =
  \ @ p1_t9T @ p0_t9U ds_debU ->
    case ds_debU of _ {
      L x_ae6I ->
        case x_ae6I `cast` ... of _ { GuardedB_ x0_a1pmZ ->
        GuardedB x0_a1pmZ
        };
      R x_ae6J ->
        case x_ae6J `cast` ... of _ { NormalB_ x0_a1pmT ->
        NormalB x0_a1pmT
        }
    }

$fDT0Body_$dReband0
$fDT0Body_$dReband0 = $fDT0Body1 `cast` ...

$fDT0Body
$fDT0Body = D:DT0 ($fDT0Body1 `cast` ...) $fDT0Body_$cdisband0

$fDC0NormalB_
$fDC0NormalB_ =
  D:DC0
    $fGeneric0NormalB_ ($fDT0Body `cast` ...) $fDC0NormalB__$crejoin0

$fDC0GuardedB_
$fDC0GuardedB_ =
  D:DC0
    $fGeneric0GuardedB_ ($fDT0Body `cast` ...) $fDC0GuardedB__$crejoin0

$fDC0Clause__$crejoin0
$fDC0Clause__$crejoin0 =
  \ ds_d1vX6 ->
    case ds_d1vX6 of _ { Clause_ x0_a1pmM x1_a1pmN x2_a1pmO ->
    (Clause x0_a1pmM x1_a1pmN x2_a1pmO) `cast` ...
    }

$fGeneric0Clause__$cobj0
$fGeneric0Clause__$cobj0 =
  \ @ p1_abpS @ p0_abpT w_s1Coq ->
    case w_s1Coq `cast` ... of _ { :*: x0_a1pmH ds_d1vWw ->
    case ds_d1vWw of _ { :*: x1_a1pmI x2_a1pmJ ->
    Clause_
      (map ((unRec3) `cast` ...) (x0_a1pmH `cast` ...))
      (x1_a1pmI `cast` ...)
      (map ((unRec3) `cast` ...) (x2_a1pmJ `cast` ...))
    }
    }

$fGeneric0Clause_1
$fGeneric0Clause_1 = \ tpl_X20q -> tpl_X20q

$fGeneric0ClassD_2
$fGeneric0ClassD_2 = \ tpl_X20t -> tpl_X20t

$fGeneric0Clause__$crep0
$fGeneric0Clause__$crep0 =
  \ @ p1_XbRZ @ p0_XbS1 w_s1Cou ->
    case w_s1Cou of _ { Clause_ ww_X1CQJ ww1_X1CQL ww2_X1CQN ->
    (:*:
       ((map ($fGeneric0Clause_1 `cast` ...) ww_X1CQJ) `cast` ...)
       (:*:
          (ww1_X1CQL `cast` ...)
          ((map ($fGeneric0ClassD_2 `cast` ...) ww2_X1CQN) `cast` ...)))
    `cast` ...
    }

$fGeneric0Clause_
$fGeneric0Clause_ =
  D:Generic0 $fGeneric0Clause__$crep0 $fGeneric0Clause__$cobj0

$fDT0Clause_$cdisband0
$fDT0Clause_$cdisband0 =
  \ @ p1_t6oj @ p0_t6ok ds_d1vVK ->
    case ds_d1vVK of _ { Clause x0_a1pmB x1_a1pmC x2_a1pmD ->
    (Clause_ x0_a1pmB x1_a1pmC x2_a1pmD) `cast` ...
    }

$fDT0Clause1
$fDT0Clause1 =
  \ @ p1_X1ui @ p0_X1uk ds_Xfwc ->
    case ds_Xfwc `cast` ...
    of _ { Clause_ x0_a1pmM x1_a1pmN x2_a1pmO ->
    Clause x0_a1pmM x1_a1pmN x2_a1pmO
    }

$fDT0Clause_$dReband0
$fDT0Clause_$dReband0 = $fDT0Clause1 `cast` ...

$fDT0Clause
$fDT0Clause =
  D:DT0 ($fDT0Clause1 `cast` ...) $fDT0Clause_$cdisband0

$fDC0Clause_
$fDC0Clause_ =
  D:DC0
    $fGeneric0Clause_ ($fDT0Clause `cast` ...) $fDC0Clause__$crejoin0

$fDC0FunD__$crejoin0
$fDC0FunD__$crejoin0 =
  \ ds_d1vVH ->
    case ds_d1vVH of _ { FunD_ x0_a1pmz x1_a1pmA ->
    (FunD x0_a1pmz x1_a1pmA) `cast` ...
    }

$fGeneric0FunD__$cobj0
$fGeneric0FunD__$cobj0 =
  \ @ p1_t6nP @ p0_t6nQ ds_d1vVg ->
    case ds_d1vVg `cast` ... of _ { :*: x0_a1pmw x1_a1pmx ->
    FunD_
      (x0_a1pmw `cast` ...)
      (map ((unRec3) `cast` ...) (x1_a1pmx `cast` ...))
    }

$fGeneric0FunD_1
$fGeneric0FunD_1 = \ tpl_X20X -> tpl_X20X

$fGeneric0FunD__$crep0
$fGeneric0FunD__$crep0 =
  \ @ p1_t6nj @ p0_t6nk ds_d1vUS ->
    case ds_d1vUS of _ { FunD_ x0_a1pmu x1_a1pmv ->
    (:*:
       (x0_a1pmu `cast` ...)
       ((map ($fGeneric0FunD_1 `cast` ...) x1_a1pmv) `cast` ...))
    `cast` ...
    }

$fGeneric0FunD_
$fGeneric0FunD_ =
  D:Generic0 $fGeneric0FunD__$crep0 $fGeneric0FunD__$cobj0

$fDC0ValD__$crejoin0
$fDC0ValD__$crejoin0 =
  \ ds_d1vUP ->
    case ds_d1vUP of _ { ValD_ x0_a1pmr x1_a1pms x2_a1pmt ->
    (ValD x0_a1pmr x1_a1pms x2_a1pmt) `cast` ...
    }

$fGeneric0ValD__$cobj0
$fGeneric0ValD__$cobj0 =
  \ @ p1_t6mI @ p0_t6mJ ds_d1vUe ->
    case ds_d1vUe `cast` ... of _ { :*: x0_a1pmn ds1_d1vUh ->
    case ds1_d1vUh of _ { :*: x1_a1pmo x2_a1pmp ->
    ValD_
      (x0_a1pmn `cast` ...)
      (x1_a1pmo `cast` ...)
      (map ((unRec3) `cast` ...) (x2_a1pmp `cast` ...))
    }
    }

$fGeneric0ValD_1
$fGeneric0ValD_1 = $fGeneric0ClassD_2

$fGeneric0ValD__$crep0
$fGeneric0ValD__$crep0 =
  \ @ p1_t6m3 @ p0_t6m4 ds_d1vTI ->
    case ds_d1vTI of _ { ValD_ x0_a1pmk x1_a1pml x2_a1pmm ->
    (:*:
       (x0_a1pmk `cast` ...)
       (:*:
          (x1_a1pml `cast` ...)
          ((map ($fGeneric0ClassD_2 `cast` ...) x2_a1pmm) `cast` ...)))
    `cast` ...
    }

$fGeneric0ValD_
$fGeneric0ValD_ =
  D:Generic0 $fGeneric0ValD__$crep0 $fGeneric0ValD__$cobj0

$fDC0DataD__$crejoin0
$fDC0DataD__$crejoin0 =
  \ ds_d1vTF ->
    case ds_d1vTF
    of _ { DataD_ x0_a1pmf x1_a1pmg x2_a1pmh x3_a1pmi x4_a1pmj ->
    (DataD x0_a1pmf x1_a1pmg x2_a1pmh x3_a1pmi x4_a1pmj) `cast` ...
    }

$fGeneric0DataD__$cobj0
$fGeneric0DataD__$cobj0 =
  \ @ p1_t6lz @ p0_t6lA ds_d1vTf ->
    case ds_d1vTf `cast` ... of _ { :*: ds1_d1vTi ds2_d1vTj ->
    case ds1_d1vTi of _ { :*: x0_a1pma x1_a1pmb ->
    case ds2_d1vTj of _ { :*: x2_a1pmc ds3_d1vTk ->
    case ds3_d1vTk of _ { :*: x3_a1pmd x4_a1pme ->
    DataD_
      (x0_a1pma `cast` ...)
      (x1_a1pmb `cast` ...)
      (x2_a1pmc `cast` ...)
      (x3_a1pmd `cast` ...)
      (x4_a1pme `cast` ...)
    }
    }
    }
    }

$fGeneric0DataD__$crep0
$fGeneric0DataD__$crep0 =
  \ @ p1_t6kX @ p0_t6kY ds_d1vSZ ->
    case ds_d1vSZ
    of _ { DataD_ x0_a1pm5 x1_a1pm6 x2_a1pm7 x3_a1pm8 x4_a1pm9 ->
    (:*:
       (:*: (x0_a1pm5 `cast` ...) (x1_a1pm6 `cast` ...))
       (:*:
          (x2_a1pm7 `cast` ...)
          (:*: (x3_a1pm8 `cast` ...) (x4_a1pm9 `cast` ...))))
    `cast` ...
    }

$fGeneric0DataD_
$fGeneric0DataD_ =
  D:Generic0 $fGeneric0DataD__$crep0 $fGeneric0DataD__$cobj0

$fDC0NewtypeD__$crejoin0
$fDC0NewtypeD__$crejoin0 =
  \ ds_d1vSW ->
    case ds_d1vSW
    of _ { NewtypeD_ x0_a1pm0 x1_a1pm1 x2_a1pm2 x3_a1pm3 x4_a1pm4 ->
    (NewtypeD x0_a1pm0 x1_a1pm1 x2_a1pm2 x3_a1pm3 x4_a1pm4) `cast` ...
    }

$fGeneric0NewtypeD__$cobj0
$fGeneric0NewtypeD__$cobj0 =
  \ @ p1_t6kt @ p0_t6ku ds_d1vSw ->
    case ds_d1vSw `cast` ... of _ { :*: ds1_d1vSz ds2_d1vSA ->
    case ds1_d1vSz of _ { :*: x0_a1plV x1_a1plW ->
    case ds2_d1vSA of _ { :*: x2_a1plX ds3_d1vSB ->
    case ds3_d1vSB of _ { :*: x3_a1plY x4_a1plZ ->
    NewtypeD_
      (x0_a1plV `cast` ...)
      (x1_a1plW `cast` ...)
      (x2_a1plX `cast` ...)
      (x3_a1plY `cast` ...)
      (x4_a1plZ `cast` ...)
    }
    }
    }
    }

$fGeneric0NewtypeD__$crep0
$fGeneric0NewtypeD__$crep0 =
  \ @ p1_t6jR @ p0_t6jS ds_d1vSg ->
    case ds_d1vSg
    of _ { NewtypeD_ x0_a1plQ x1_a1plR x2_a1plS x3_a1plT x4_a1plU ->
    (:*:
       (:*: (x0_a1plQ `cast` ...) (x1_a1plR `cast` ...))
       (:*:
          (x2_a1plS `cast` ...)
          (:*: (x3_a1plT `cast` ...) (x4_a1plU `cast` ...))))
    `cast` ...
    }

$fGeneric0NewtypeD_
$fGeneric0NewtypeD_ =
  D:Generic0 $fGeneric0NewtypeD__$crep0 $fGeneric0NewtypeD__$cobj0

$fDC0TySynD__$crejoin0
$fDC0TySynD__$crejoin0 =
  \ ds_d1vSd ->
    case ds_d1vSd of _ { TySynD_ x0_a1plN x1_a1plO x2_a1plP ->
    (TySynD x0_a1plN x1_a1plO x2_a1plP) `cast` ...
    }

$fGeneric0TySynD__$cobj0
$fGeneric0TySynD__$cobj0 =
  \ @ p1_t6jx @ p0_t6jy ds_d1vRR ->
    case ds_d1vRR `cast` ... of _ { :*: x0_a1plK ds1_d1vRU ->
    case ds1_d1vRU of _ { :*: x1_a1plL x2_a1plM ->
    TySynD_
      (x0_a1plK `cast` ...) (x1_a1plL `cast` ...) (x2_a1plM `cast` ...)
    }
    }

$fGeneric0TySynD__$crep0
$fGeneric0TySynD__$crep0 =
  \ @ p1_t6j9 @ p0_t6ja ds_d1vRB ->
    case ds_d1vRB of _ { TySynD_ x0_a1plH x1_a1plI x2_a1plJ ->
    (:*:
       (x0_a1plH `cast` ...)
       (:*: (x1_a1plI `cast` ...) (x2_a1plJ `cast` ...)))
    `cast` ...
    }

$fGeneric0TySynD_
$fGeneric0TySynD_ =
  D:Generic0 $fGeneric0TySynD__$crep0 $fGeneric0TySynD__$cobj0

$fDC0ClassD__$crejoin0
$fDC0ClassD__$crejoin0 =
  \ ds_d1vRy ->
    case ds_d1vRy
    of _ { ClassD_ x0_a1plC x1_a1plD x2_a1plE x3_a1plF x4_a1plG ->
    (ClassD x0_a1plC x1_a1plD x2_a1plE x3_a1plF x4_a1plG) `cast` ...
    }

$fGeneric0ClassD__$cobj0
$fGeneric0ClassD__$cobj0 =
  \ @ p1_t6iq @ p0_t6ir ds_d1vQX ->
    case ds_d1vQX `cast` ... of _ { :*: ds1_d1vR0 ds2_d1vR1 ->
    case ds1_d1vR0 of _ { :*: x0_a1plw x1_a1plx ->
    case ds2_d1vR1 of _ { :*: x2_a1ply ds3_d1vR2 ->
    case ds3_d1vR2 of _ { :*: x3_a1plz x4_a1plA ->
    ClassD_
      (x0_a1plw `cast` ...)
      (x1_a1plx `cast` ...)
      (x2_a1ply `cast` ...)
      (x3_a1plz `cast` ...)
      (map ((unRec3) `cast` ...) (x4_a1plA `cast` ...))
    }
    }
    }
    }

$fGeneric0ClassD_1
$fGeneric0ClassD_1 = $fGeneric0ClassD_2

$fGeneric0ClassD__$crep0
$fGeneric0ClassD__$crep0 =
  \ @ p1_t6hz @ p0_t6hA ds_d1vQv ->
    case ds_d1vQv
    of _ { ClassD_ x0_a1plr x1_a1pls x2_a1plt x3_a1plu x4_a1plv ->
    (:*:
       (:*: (x0_a1plr `cast` ...) (x1_a1pls `cast` ...))
       (:*:
          (x2_a1plt `cast` ...)
          (:*:
             (x3_a1plu `cast` ...)
             ((map ($fGeneric0ClassD_2 `cast` ...) x4_a1plv) `cast` ...))))
    `cast` ...
    }

$fGeneric0ClassD_
$fGeneric0ClassD_ =
  D:Generic0 $fGeneric0ClassD__$crep0 $fGeneric0ClassD__$cobj0

$fDC0InstanceD__$crejoin0
$fDC0InstanceD__$crejoin0 =
  \ ds_d1vQs ->
    case ds_d1vQs of _ { InstanceD_ x0_a1plo x1_a1plp x2_a1plq ->
    (InstanceD x0_a1plo x1_a1plp x2_a1plq) `cast` ...
    }

$fGeneric0InstanceD__$cobj0
$fGeneric0InstanceD__$cobj0 =
  \ @ p1_t6h0 @ p0_t6h1 ds_d1vPX ->
    case ds_d1vPX `cast` ... of _ { :*: x0_a1plk ds1_d1vQ0 ->
    case ds1_d1vQ0 of _ { :*: x1_a1pll x2_a1plm ->
    InstanceD_
      (x0_a1plk `cast` ...)
      (x1_a1pll `cast` ...)
      (map ((unRec3) `cast` ...) (x2_a1plm `cast` ...))
    }
    }

$fGeneric0InstanceD_1
$fGeneric0InstanceD_1 = $fGeneric0ClassD_2

$fGeneric0InstanceD__$crep0
$fGeneric0InstanceD__$crep0 =
  \ @ p1_t6gn @ p0_t6go ds_d1vPx ->
    case ds_d1vPx of _ { InstanceD_ x0_a1plh x1_a1pli x2_a1plj ->
    (:*:
       (x0_a1plh `cast` ...)
       (:*:
          (x1_a1pli `cast` ...)
          ((map ($fGeneric0ClassD_2 `cast` ...) x2_a1plj) `cast` ...)))
    `cast` ...
    }

$fGeneric0InstanceD_
$fGeneric0InstanceD_ =
  D:Generic0 $fGeneric0InstanceD__$crep0 $fGeneric0InstanceD__$cobj0

$fDC0SigD__$crejoin0
$fDC0SigD__$crejoin0 =
  \ ds_d1vPu ->
    case ds_d1vPu of _ { SigD_ x0_a1plf x1_a1plg ->
    (SigD x0_a1plf x1_a1plg) `cast` ...
    }

$fGeneric0SigD__$cobj0
$fGeneric0SigD__$cobj0 =
  \ @ p1_t6g8 @ p0_t6g9 ds_d1vPa ->
    case ds_d1vPa `cast` ... of _ { :*: x0_a1pld x1_a1ple ->
    SigD_ (x0_a1pld `cast` ...) (x1_a1ple `cast` ...)
    }

$fGeneric0SigD__$crep0
$fGeneric0SigD__$crep0 =
  \ @ p1_t6fR @ p0_t6fS ds_d1vOU ->
    case ds_d1vOU of _ { SigD_ x0_a1plb x1_a1plc ->
    (:*: (x0_a1plb `cast` ...) (x1_a1plc `cast` ...)) `cast` ...
    }

$fGeneric0SigD_
$fGeneric0SigD_ =
  D:Generic0 $fGeneric0SigD__$crep0 $fGeneric0SigD__$cobj0

$fDC0ForeignD__$crejoin0
$fDC0ForeignD__$crejoin0 =
  \ ds_d1vOR ->
    case ds_d1vOR of _ { ForeignD_ x0_a1pla ->
    (ForeignD x0_a1pla) `cast` ...
    }

$fGeneric0ForeignD__$cobj0
$fGeneric0ForeignD__$cobj0 =
  \ @ p1_t6fH @ p0_t6fI ds_d1vOz -> ForeignD_ (ds_d1vOz `cast` ...)

$fGeneric0ForeignD__$crep0
$fGeneric0ForeignD__$crep0 =
  \ @ p1_t6fx @ p0_t6fy ds_d1vOj ->
    case ds_d1vOj of _ { ForeignD_ x0_a1pl8 -> x0_a1pl8 `cast` ... }

$fGeneric0ForeignD_
$fGeneric0ForeignD_ =
  D:Generic0 $fGeneric0ForeignD__$crep0 $fGeneric0ForeignD__$cobj0

$fDC0InfixD__$crejoin0
$fDC0InfixD__$crejoin0 =
  \ ds_d1vOg ->
    case ds_d1vOg of _ { InfixD_ x0_a1pl6 x1_a1pl7 ->
    (InfixD x0_a1pl6 x1_a1pl7) `cast` ...
    }

$fGeneric0InfixD__$cobj0
$fGeneric0InfixD__$cobj0 =
  \ @ p1_t6fi @ p0_t6fj ds_d1vNW ->
    case ds_d1vNW `cast` ... of _ { :*: x0_a1pl4 x1_a1pl5 ->
    InfixD_ (x0_a1pl4 `cast` ...) (x1_a1pl5 `cast` ...)
    }

$fGeneric0InfixD__$crep0
$fGeneric0InfixD__$crep0 =
  \ @ p1_t6f1 @ p0_t6f2 ds_d1vNG ->
    case ds_d1vNG of _ { InfixD_ x0_a1pl2 x1_a1pl3 ->
    (:*: (x0_a1pl2 `cast` ...) (x1_a1pl3 `cast` ...)) `cast` ...
    }

$fGeneric0InfixD_
$fGeneric0InfixD_ =
  D:Generic0 $fGeneric0InfixD__$crep0 $fGeneric0InfixD__$cobj0

$fDC0PragmaD__$crejoin0
$fDC0PragmaD__$crejoin0 =
  \ ds_d1vND ->
    case ds_d1vND of _ { PragmaD_ x0_a1pl1 ->
    (PragmaD x0_a1pl1) `cast` ...
    }

$fGeneric0PragmaD__$cobj0
$fGeneric0PragmaD__$cobj0 =
  \ @ p1_t6eQ @ p0_t6eR ds_d1vNi -> PragmaD_ (ds_d1vNi `cast` ...)

$fGeneric0PragmaD__$crep0
$fGeneric0PragmaD__$crep0 =
  \ @ p1_t6eF @ p0_t6eG ds_d1vMZ ->
    case ds_d1vMZ of _ { PragmaD_ x0_a1pkZ -> x0_a1pkZ `cast` ... }

$fGeneric0PragmaD_
$fGeneric0PragmaD_ =
  D:Generic0 $fGeneric0PragmaD__$crep0 $fGeneric0PragmaD__$cobj0

$fDC0FamilyD__$crejoin0
$fDC0FamilyD__$crejoin0 =
  \ ds_d1vMW ->
    case ds_d1vMW
    of _ { FamilyD_ x0_a1pkV x1_a1pkW x2_a1pkX x3_a1pkY ->
    (FamilyD x0_a1pkV x1_a1pkW x2_a1pkX x3_a1pkY) `cast` ...
    }

$fGeneric0FamilyD__$cobj0
$fGeneric0FamilyD__$cobj0 =
  \ @ p1_t6eg @ p0_t6eh ds_d1vMy ->
    case ds_d1vMy `cast` ... of _ { :*: ds1_d1vMB ds2_d1vMC ->
    case ds1_d1vMB of _ { :*: x0_a1pkR x1_a1pkS ->
    case ds2_d1vMC of _ { :*: x2_a1pkT x3_a1pkU ->
    FamilyD_
      (x0_a1pkR `cast` ...)
      (x1_a1pkS `cast` ...)
      (x2_a1pkT `cast` ...)
      (x3_a1pkU `cast` ...)
    }
    }
    }

$fGeneric0FamilyD__$crep0
$fGeneric0FamilyD__$crep0 =
  \ @ p1_t6dL @ p0_t6dM ds_d1vMi ->
    case ds_d1vMi
    of _ { FamilyD_ x0_a1pkN x1_a1pkO x2_a1pkP x3_a1pkQ ->
    (:*:
       (:*: (x0_a1pkN `cast` ...) (x1_a1pkO `cast` ...))
       (:*: (x2_a1pkP `cast` ...) (x3_a1pkQ `cast` ...)))
    `cast` ...
    }

$fGeneric0FamilyD_
$fGeneric0FamilyD_ =
  D:Generic0 $fGeneric0FamilyD__$crep0 $fGeneric0FamilyD__$cobj0

$fDC0DataInstD__$crejoin0
$fDC0DataInstD__$crejoin0 =
  \ ds_d1vMf ->
    case ds_d1vMf
    of _ { DataInstD_ x0_a1pkI x1_a1pkJ x2_a1pkK x3_a1pkL x4_a1pkM ->
    (DataInstD x0_a1pkI x1_a1pkJ x2_a1pkK x3_a1pkL x4_a1pkM) `cast` ...
    }

$fGeneric0DataInstD__$cobj0
$fGeneric0DataInstD__$cobj0 =
  \ @ p1_t6dh @ p0_t6di ds_d1vLP ->
    case ds_d1vLP `cast` ... of _ { :*: ds1_d1vLS ds2_d1vLT ->
    case ds1_d1vLS of _ { :*: x0_a1pkD x1_a1pkE ->
    case ds2_d1vLT of _ { :*: x2_a1pkF ds3_d1vLU ->
    case ds3_d1vLU of _ { :*: x3_a1pkG x4_a1pkH ->
    DataInstD_
      (x0_a1pkD `cast` ...)
      (x1_a1pkE `cast` ...)
      (x2_a1pkF `cast` ...)
      (x3_a1pkG `cast` ...)
      (x4_a1pkH `cast` ...)
    }
    }
    }
    }

$fGeneric0DataInstD__$crep0
$fGeneric0DataInstD__$crep0 =
  \ @ p1_t6cF @ p0_t6cG ds_d1vLz ->
    case ds_d1vLz
    of _ { DataInstD_ x0_a1pky x1_a1pkz x2_a1pkA x3_a1pkB x4_a1pkC ->
    (:*:
       (:*: (x0_a1pky `cast` ...) (x1_a1pkz `cast` ...))
       (:*:
          (x2_a1pkA `cast` ...)
          (:*: (x3_a1pkB `cast` ...) (x4_a1pkC `cast` ...))))
    `cast` ...
    }

$fGeneric0DataInstD_
$fGeneric0DataInstD_ =
  D:Generic0 $fGeneric0DataInstD__$crep0 $fGeneric0DataInstD__$cobj0

$fDC0NewtypeInstD__$crejoin0
$fDC0NewtypeInstD__$crejoin0 =
  \ ds_d1vLw ->
    case ds_d1vLw
    of _
    { NewtypeInstD_ x0_a1pkt x1_a1pku x2_a1pkv x3_a1pkw x4_a1pkx ->
    (NewtypeInstD x0_a1pkt x1_a1pku x2_a1pkv x3_a1pkw x4_a1pkx)
    `cast` ...
    }

$fGeneric0NewtypeInstD__$cobj0
$fGeneric0NewtypeInstD__$cobj0 =
  \ @ p1_t6cb @ p0_t6cc ds_d1vL6 ->
    case ds_d1vL6 `cast` ... of _ { :*: ds1_d1vL9 ds2_d1vLa ->
    case ds1_d1vL9 of _ { :*: x0_a1pko x1_a1pkp ->
    case ds2_d1vLa of _ { :*: x2_a1pkq ds3_d1vLb ->
    case ds3_d1vLb of _ { :*: x3_a1pkr x4_a1pks ->
    NewtypeInstD_
      (x0_a1pko `cast` ...)
      (x1_a1pkp `cast` ...)
      (x2_a1pkq `cast` ...)
      (x3_a1pkr `cast` ...)
      (x4_a1pks `cast` ...)
    }
    }
    }
    }

$fGeneric0NewtypeInstD__$crep0
$fGeneric0NewtypeInstD__$crep0 =
  \ @ p1_t6bz @ p0_t6bA ds_d1vKQ ->
    case ds_d1vKQ
    of _
    { NewtypeInstD_ x0_a1pkj x1_a1pkk x2_a1pkl x3_a1pkm x4_a1pkn ->
    (:*:
       (:*: (x0_a1pkj `cast` ...) (x1_a1pkk `cast` ...))
       (:*:
          (x2_a1pkl `cast` ...)
          (:*: (x3_a1pkm `cast` ...) (x4_a1pkn `cast` ...))))
    `cast` ...
    }

$fGeneric0NewtypeInstD_
$fGeneric0NewtypeInstD_ =
  D:Generic0
    $fGeneric0NewtypeInstD__$crep0 $fGeneric0NewtypeInstD__$cobj0

$fDC0TySynInstD__$crejoin0
$fDC0TySynInstD__$crejoin0 =
  \ ds_d1vKN ->
    case ds_d1vKN of _ { TySynInstD_ x0_a1pkg x1_a1pkh x2_a1pki ->
    (TySynInstD x0_a1pkg x1_a1pkh x2_a1pki) `cast` ...
    }

$fGeneric0TySynInstD__$cobj0
$fGeneric0TySynInstD__$cobj0 =
  \ @ p1_t6bf @ p0_t6bg ds_d1vKr ->
    case ds_d1vKr `cast` ... of _ { :*: x0_a1pkd ds1_d1vKu ->
    case ds1_d1vKu of _ { :*: x1_a1pke x2_a1pkf ->
    TySynInstD_
      (x0_a1pkd `cast` ...) (x1_a1pke `cast` ...) (x2_a1pkf `cast` ...)
    }
    }

$fGeneric0TySynInstD__$crep0
$fGeneric0TySynInstD__$crep0 =
  \ @ p1_t6aR @ p0_t6aS ds_d1vKb ->
    case ds_d1vKb of _ { TySynInstD_ x0_a1pka x1_a1pkb x2_a1pkc ->
    (:*:
       (x0_a1pka `cast` ...)
       (:*: (x1_a1pkb `cast` ...) (x2_a1pkc `cast` ...)))
    `cast` ...
    }

$fGeneric0TySynInstD_
$fGeneric0TySynInstD_ =
  D:Generic0
    $fGeneric0TySynInstD__$crep0 $fGeneric0TySynInstD__$cobj0

$fDT0Dec_$cdisband0
$fDT0Dec_$cdisband0 =
  \ @ p1_t63r @ p0_t63s ds_d1vFm ->
    case ds_d1vFm of _ {
      FunD x0_a1pjn x1_a1pjo ->
        (L (L (L ((FunD_ x0_a1pjn x1_a1pjo) `cast` ...)))) `cast` ...;
      ValD x0_a1pjp x1_a1pjq x2_a1pjr ->
        (L (L (R (L ((ValD_ x0_a1pjp x1_a1pjq x2_a1pjr) `cast` ...)))))
        `cast` ...;
      DataD x0_a1pjs x1_a1pjt x2_a1pju x3_a1pjv x4_a1pjw ->
        (L (L (R (R ((DataD_ x0_a1pjs x1_a1pjt x2_a1pju x3_a1pjv x4_a1pjw)
                     `cast` ...)))))
        `cast` ...;
      NewtypeD x0_a1pjx x1_a1pjy x2_a1pjz x3_a1pjA x4_a1pjB ->
        (L (R (L (L ((NewtypeD_
                        x0_a1pjx x1_a1pjy x2_a1pjz x3_a1pjA x4_a1pjB)
                     `cast` ...)))))
        `cast` ...;
      TySynD x0_a1pjC x1_a1pjD x2_a1pjE ->
        (L (R (L (R ((TySynD_ x0_a1pjC x1_a1pjD x2_a1pjE) `cast` ...)))))
        `cast` ...;
      ClassD x0_a1pjF x1_a1pjG x2_a1pjH x3_a1pjI x4_a1pjJ ->
        (L (R (R (L ((ClassD_ x0_a1pjF x1_a1pjG x2_a1pjH x3_a1pjI x4_a1pjJ)
                     `cast` ...)))))
        `cast` ...;
      InstanceD x0_a1pjK x1_a1pjL x2_a1pjM ->
        (L (R (R (R ((InstanceD_ x0_a1pjK x1_a1pjL x2_a1pjM)
                     `cast` ...)))))
        `cast` ...;
      SigD x0_a1pjN x1_a1pjO ->
        (R (L (L (L ((SigD_ x0_a1pjN x1_a1pjO) `cast` ...))))) `cast` ...;
      ForeignD x0_a1pjP ->
        (R (L (L (R ((ForeignD_ x0_a1pjP) `cast` ...))))) `cast` ...;
      InfixD x0_a1pjQ x1_a1pjR ->
        (R (L (R (L ((InfixD_ x0_a1pjQ x1_a1pjR) `cast` ...)))))
        `cast` ...;
      PragmaD x0_a1pjS ->
        (R (L (R (R ((PragmaD_ x0_a1pjS) `cast` ...))))) `cast` ...;
      FamilyD x0_a1pjT x1_a1pjU x2_a1pjV x3_a1pjW ->
        (R (R (L (L ((FamilyD_ x0_a1pjT x1_a1pjU x2_a1pjV x3_a1pjW)
                     `cast` ...)))))
        `cast` ...;
      DataInstD x0_a1pjX x1_a1pjY x2_a1pjZ x3_a1pk0 x4_a1pk1 ->
        (R (R (L (R ((DataInstD_
                        x0_a1pjX x1_a1pjY x2_a1pjZ x3_a1pk0 x4_a1pk1)
                     `cast` ...)))))
        `cast` ...;
      NewtypeInstD x0_a1pk2 x1_a1pk3 x2_a1pk4 x3_a1pk5 x4_a1pk6 ->
        (R (R (R (L ((NewtypeInstD_
                        x0_a1pk2 x1_a1pk3 x2_a1pk4 x3_a1pk5 x4_a1pk6)
                     `cast` ...)))))
        `cast` ...;
      TySynInstD x0_a1pk7 x1_a1pk8 x2_a1pk9 ->
        (R (R (R (R ((TySynInstD_ x0_a1pk7 x1_a1pk8 x2_a1pk9)
                     `cast` ...)))))
        `cast` ...
    }

$fDT0Dec1
$fDT0Dec1 =
  \ @ p1_X1A7 @ p0_X1A9 ds_XfCa ->
    case ds_XfCa of _ {
      L x_ae6I ->
        case x_ae6I of _ {
          L x1_Xfx4 ->
            case x1_Xfx4 of _ {
              L x2_XeLd ->
                case x2_XeLd `cast` ... of _ { FunD_ x0_a1pmz x3_a1pmA ->
                FunD x0_a1pmz x3_a1pmA
                };
              R x2_ae6J ->
                case x2_ae6J of _ {
                  L x3_XeLh ->
                    case x3_XeLh `cast` ... of _ { ValD_ x0_a1pmr x4_a1pms x5_a1pmt ->
                    ValD x0_a1pmr x4_a1pms x5_a1pmt
                    };
                  R x3_XfwR ->
                    case x3_XfwR `cast` ...
                    of _ { DataD_ x0_a1pmf x4_a1pmg x5_a1pmh x6_a1pmi x7_a1pmj ->
                    DataD x0_a1pmf x4_a1pmg x5_a1pmh x6_a1pmi x7_a1pmj
                    }
                }
            };
          R x1_ae6J ->
            case x1_ae6J of _ {
              L x2_XeLd ->
                case x2_XeLd of _ {
                  L x3_Xfwe ->
                    case x3_Xfwe `cast` ...
                    of _ { NewtypeD_ x0_a1pm0 x4_a1pm1 x5_a1pm2 x6_a1pm3 x7_a1pm4 ->
                    NewtypeD x0_a1pm0 x4_a1pm1 x5_a1pm2 x6_a1pm3 x7_a1pm4
                    };
                  R x3_XeLi ->
                    case x3_XeLi `cast` ...
                    of _ { TySynD_ x0_a1plN x4_a1plO x5_a1plP ->
                    TySynD x0_a1plN x4_a1plO x5_a1plP
                    }
                };
              R x2_XeLe ->
                case x2_XeLe of _ {
                  L x3_XeLh ->
                    case x3_XeLh `cast` ...
                    of _ { ClassD_ x0_a1plC x4_a1plD x5_a1plE x6_a1plF x7_a1plG ->
                    ClassD x0_a1plC x4_a1plD x5_a1plE x6_a1plF x7_a1plG
                    };
                  R x3_Xfwf ->
                    case x3_Xfwf `cast` ...
                    of _ { InstanceD_ x0_a1plo x4_a1plp x5_a1plq ->
                    InstanceD x0_a1plo x4_a1plp x5_a1plq
                    }
                }
            }
        };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I ->
            case x1_ae6I of _ {
              L x2_XeLd ->
                case x2_XeLd of _ {
                  L x3_Xfvg ->
                    case x3_Xfvg `cast` ... of _ { SigD_ x0_a1plf x4_a1plg ->
                    SigD x0_a1plf x4_a1plg
                    };
                  R x3_XeLi ->
                    case x3_XeLi `cast` ... of _ { ForeignD_ x0_a1pla ->
                    ForeignD x0_a1pla
                    }
                };
              R x2_XeLe ->
                case x2_XeLe of _ {
                  L x3_XeLh ->
                    case x3_XeLh `cast` ... of _ { InfixD_ x0_a1pl6 x4_a1pl7 ->
                    InfixD x0_a1pl6 x4_a1pl7
                    };
                  R x3_Xfvh ->
                    case x3_Xfvh `cast` ... of _ { PragmaD_ x0_a1pl1 ->
                    PragmaD x0_a1pl1
                    }
                }
            };
          R x1_Xfx5 ->
            case x1_Xfx5 of _ {
              L x2_ae6I ->
                case x2_ae6I of _ {
                  L x3_Xfup ->
                    case x3_Xfup `cast` ...
                    of _ { FamilyD_ x0_a1pkV x4_a1pkW x5_a1pkX x6_a1pkY ->
                    FamilyD x0_a1pkV x4_a1pkW x5_a1pkX x6_a1pkY
                    };
                  R x3_XeLi ->
                    case x3_XeLi `cast` ...
                    of _ { DataInstD_ x0_a1pkI x4_a1pkJ x5_a1pkK x6_a1pkL x7_a1pkM ->
                    DataInstD x0_a1pkI x4_a1pkJ x5_a1pkK x6_a1pkL x7_a1pkM
                    }
                };
              R x2_XeLe ->
                case x2_XeLe of _ {
                  L x3_ae6I ->
                    case x3_ae6I `cast` ...
                    of _
                    { NewtypeInstD_ x0_a1pkt x4_a1pku x5_a1pkv x6_a1pkw x7_a1pkx ->
                    NewtypeInstD x0_a1pkt x4_a1pku x5_a1pkv x6_a1pkw x7_a1pkx
                    };
                  R x3_Xfuq ->
                    case x3_Xfuq `cast` ...
                    of _ { TySynInstD_ x0_a1pkg x4_a1pkh x5_a1pki ->
                    TySynInstD x0_a1pkg x4_a1pkh x5_a1pki
                    }
                }
            }
        }
    }

$fDT0Dec_$dReband0
$fDT0Dec_$dReband0 = $fDT0Dec1 `cast` ...

$fDT0Dec
$fDT0Dec = D:DT0 ($fDT0Dec1 `cast` ...) $fDT0Dec_$cdisband0

$fDC0TySynInstD_
$fDC0TySynInstD_ =
  D:DC0
    $fGeneric0TySynInstD_
    ($fDT0Dec `cast` ...)
    $fDC0TySynInstD__$crejoin0

$fDC0NewtypeInstD_
$fDC0NewtypeInstD_ =
  D:DC0
    $fGeneric0NewtypeInstD_
    ($fDT0Dec `cast` ...)
    $fDC0NewtypeInstD__$crejoin0

$fDC0DataInstD_
$fDC0DataInstD_ =
  D:DC0
    $fGeneric0DataInstD_
    ($fDT0Dec `cast` ...)
    $fDC0DataInstD__$crejoin0

$fDC0FamilyD_
$fDC0FamilyD_ =
  D:DC0
    $fGeneric0FamilyD_ ($fDT0Dec `cast` ...) $fDC0FamilyD__$crejoin0

$fDC0PragmaD_
$fDC0PragmaD_ =
  D:DC0
    $fGeneric0PragmaD_ ($fDT0Dec `cast` ...) $fDC0PragmaD__$crejoin0

$fDC0InfixD_
$fDC0InfixD_ =
  D:DC0
    $fGeneric0InfixD_ ($fDT0Dec `cast` ...) $fDC0InfixD__$crejoin0

$fDC0ForeignD_
$fDC0ForeignD_ =
  D:DC0
    $fGeneric0ForeignD_ ($fDT0Dec `cast` ...) $fDC0ForeignD__$crejoin0

$fDC0SigD_
$fDC0SigD_ =
  D:DC0 $fGeneric0SigD_ ($fDT0Dec `cast` ...) $fDC0SigD__$crejoin0

$fDC0InstanceD_
$fDC0InstanceD_ =
  D:DC0
    $fGeneric0InstanceD_
    ($fDT0Dec `cast` ...)
    $fDC0InstanceD__$crejoin0

$fDC0ClassD_
$fDC0ClassD_ =
  D:DC0
    $fGeneric0ClassD_ ($fDT0Dec `cast` ...) $fDC0ClassD__$crejoin0

$fDC0TySynD_
$fDC0TySynD_ =
  D:DC0
    $fGeneric0TySynD_ ($fDT0Dec `cast` ...) $fDC0TySynD__$crejoin0

$fDC0NewtypeD_
$fDC0NewtypeD_ =
  D:DC0
    $fGeneric0NewtypeD_ ($fDT0Dec `cast` ...) $fDC0NewtypeD__$crejoin0

$fDC0DataD_
$fDC0DataD_ =
  D:DC0 $fGeneric0DataD_ ($fDT0Dec `cast` ...) $fDC0DataD__$crejoin0

$fDC0ValD_
$fDC0ValD_ =
  D:DC0 $fGeneric0ValD_ ($fDT0Dec `cast` ...) $fDC0ValD__$crejoin0

$fDC0FunD_
$fDC0FunD_ =
  D:DC0 $fGeneric0FunD_ ($fDT0Dec `cast` ...) $fDC0FunD__$crejoin0

$fDC0VarE__$crejoin0
$fDC0VarE__$crejoin0 =
  \ ds_d1vF5 ->
    case ds_d1vF5 of _ { VarE_ x0_a1pjm -> (VarE x0_a1pjm) `cast` ... }

$fGeneric0VarE__$cobj0
$fGeneric0VarE__$cobj0 =
  \ @ p1_t63h @ p0_t63i ds_d1vEN -> VarE_ (ds_d1vEN `cast` ...)

$fGeneric0VarE__$crep0
$fGeneric0VarE__$crep0 =
  \ @ p1_t637 @ p0_t638 ds_d1vEx ->
    case ds_d1vEx of _ { VarE_ x0_a1pjk -> x0_a1pjk `cast` ... }

$fGeneric0VarE_
$fGeneric0VarE_ =
  D:Generic0 $fGeneric0VarE__$crep0 $fGeneric0VarE__$cobj0

$fDC0ConE__$crejoin0
$fDC0ConE__$crejoin0 =
  \ ds_d1vEu ->
    case ds_d1vEu of _ { ConE_ x0_a1pjj -> (ConE x0_a1pjj) `cast` ... }

$fGeneric0ConE__$cobj0
$fGeneric0ConE__$cobj0 =
  \ @ p1_t62X @ p0_t62Y ds_d1vEc -> ConE_ (ds_d1vEc `cast` ...)

$fGeneric0ConE__$crep0
$fGeneric0ConE__$crep0 =
  \ @ p1_t62N @ p0_t62O ds_d1vDW ->
    case ds_d1vDW of _ { ConE_ x0_a1pjh -> x0_a1pjh `cast` ... }

$fGeneric0ConE_
$fGeneric0ConE_ =
  D:Generic0 $fGeneric0ConE__$crep0 $fGeneric0ConE__$cobj0

$fDC0LitE__$crejoin0
$fDC0LitE__$crejoin0 =
  \ ds_d1vDT ->
    case ds_d1vDT of _ { LitE_ x0_a1pjg -> (LitE x0_a1pjg) `cast` ... }

$fGeneric0LitE__$cobj0
$fGeneric0LitE__$cobj0 =
  \ @ p1_t62D @ p0_t62E ds_d1vDB -> LitE_ (ds_d1vDB `cast` ...)

$fGeneric0LitE__$crep0
$fGeneric0LitE__$crep0 =
  \ @ p1_t62t @ p0_t62u ds_d1vDl ->
    case ds_d1vDl of _ { LitE_ x0_a1pje -> x0_a1pje `cast` ... }

$fGeneric0LitE_
$fGeneric0LitE_ =
  D:Generic0 $fGeneric0LitE__$crep0 $fGeneric0LitE__$cobj0

$fDC0AppE__$crejoin0
$fDC0AppE__$crejoin0 =
  \ ds_d1vDi ->
    case ds_d1vDi of _ { AppE_ x0_a1pjc x1_a1pjd ->
    (AppE x0_a1pjc x1_a1pjd) `cast` ...
    }

$fGeneric0AppE__$cobj0
$fGeneric0AppE__$cobj0 =
  \ @ p1_t62c @ p0_t62d ds_d1vCQ ->
    case ds_d1vCQ `cast` ... of _ { :*: x0_a1pja x1_a1pjb ->
    AppE_ (x0_a1pja `cast` ...) (x1_a1pjb `cast` ...)
    }

$fGeneric0AppE__$crep0
$fGeneric0AppE__$crep0 =
  \ @ p1_t61T @ p0_t61U ds_d1vCs ->
    case ds_d1vCs of _ { AppE_ x0_a1pj8 x1_a1pj9 ->
    (:*: (x0_a1pj8 `cast` ...) (x1_a1pj9 `cast` ...)) `cast` ...
    }

$fGeneric0AppE_
$fGeneric0AppE_ =
  D:Generic0 $fGeneric0AppE__$crep0 $fGeneric0AppE__$cobj0

$fDC0InfixE__$crejoin0
$fDC0InfixE__$crejoin0 =
  \ ds_d1vCp ->
    case ds_d1vCp of _ { InfixE_ x0_a1pj5 x1_a1pj6 x2_a1pj7 ->
    (InfixE x0_a1pj5 x1_a1pj6 x2_a1pj7) `cast` ...
    }

$fGeneric0InfixE__$cobj0
$fGeneric0InfixE__$cobj0 =
  \ @ p1_abpS @ p0_abpT w_s1CoC ->
    case w_s1CoC `cast` ... of _ { :*: x0_a1pj0 ds_d1vBP ->
    case ds_d1vBP of _ { :*: x1_a1pj1 x2_a1pj2 ->
    InfixE_
      (case x0_a1pj0 `cast` ... of _ {
         Nothing -> Nothing;
         Just a5_aeZr -> Just (a5_aeZr `cast` ...)
       })
      (x1_a1pj1 `cast` ...)
      (case x2_a1pj2 `cast` ... of _ {
         Nothing -> Nothing;
         Just a5_aeZr -> Just (a5_aeZr `cast` ...)
       })
    }
    }

$fGeneric0InfixE__$crep0
$fGeneric0InfixE__$crep0 =
  \ @ p1_XbTR @ p0_XbTT w_s1CoG ->
    case w_s1CoG of _ { InfixE_ ww_X1CSN ww1_X1CSP ww2_X1CSR ->
    (:*:
       (case ww_X1CSN of _ {
          Nothing -> (Nothing) `cast` ...;
          Just a5_aeZr -> (Just (a5_aeZr `cast` ...)) `cast` ...
        })
       (:*:
          (ww1_X1CSP `cast` ...)
          (case ww2_X1CSR of _ {
             Nothing -> (Nothing) `cast` ...;
             Just a5_aeZr -> (Just (a5_aeZr `cast` ...)) `cast` ...
           })))
    `cast` ...
    }

$fGeneric0InfixE_
$fGeneric0InfixE_ =
  D:Generic0 $fGeneric0InfixE__$crep0 $fGeneric0InfixE__$cobj0

$fDC0UInfixE__$crejoin0
$fDC0UInfixE__$crejoin0 =
  \ ds_d1vBa ->
    case ds_d1vBa of _ { UInfixE_ x0_a1piU x1_a1piV x2_a1piW ->
    (UInfixE x0_a1piU x1_a1piV x2_a1piW) `cast` ...
    }

$fGeneric0UInfixE__$cobj0
$fGeneric0UInfixE__$cobj0 =
  \ @ p1_t5ZO @ p0_t5ZP ds_d1vAB ->
    case ds_d1vAB `cast` ... of _ { :*: x0_a1piR ds1_d1vAE ->
    case ds1_d1vAE of _ { :*: x1_a1piS x2_a1piT ->
    UInfixE_
      (x0_a1piR `cast` ...) (x1_a1piS `cast` ...) (x2_a1piT `cast` ...)
    }
    }

$fGeneric0UInfixE__$crep0
$fGeneric0UInfixE__$crep0 =
  \ @ p1_t5Zn @ p0_t5Zo ds_d1vA8 ->
    case ds_d1vA8 of _ { UInfixE_ x0_a1piO x1_a1piP x2_a1piQ ->
    (:*:
       (x0_a1piO `cast` ...)
       (:*: (x1_a1piP `cast` ...) (x2_a1piQ `cast` ...)))
    `cast` ...
    }

$fGeneric0UInfixE_
$fGeneric0UInfixE_ =
  D:Generic0 $fGeneric0UInfixE__$crep0 $fGeneric0UInfixE__$cobj0

$fDC0ParensE__$crejoin0
$fDC0ParensE__$crejoin0 =
  \ ds_d1vA5 ->
    case ds_d1vA5 of _ { ParensE_ x0_a1piN ->
    (ParensE x0_a1piN) `cast` ...
    }

$fGeneric0ParensE__$cobj0
$fGeneric0ParensE__$cobj0 =
  \ @ p1_t5Zc @ p0_t5Zd ds_d1vzK -> ParensE_ (ds_d1vzK `cast` ...)

$fGeneric0ParensE__$crep0
$fGeneric0ParensE__$crep0 =
  \ @ p1_t5Z1 @ p0_t5Z2 ds_d1vzr ->
    case ds_d1vzr of _ { ParensE_ x0_a1piL -> x0_a1piL `cast` ... }

$fGeneric0ParensE_
$fGeneric0ParensE_ =
  D:Generic0 $fGeneric0ParensE__$crep0 $fGeneric0ParensE__$cobj0

$fDC0LamE__$crejoin0
$fDC0LamE__$crejoin0 =
  \ ds_d1vzo ->
    case ds_d1vzo of _ { LamE_ x0_a1piJ x1_a1piK ->
    (LamE x0_a1piJ x1_a1piK) `cast` ...
    }

$fGeneric0LamE__$cobj0
$fGeneric0LamE__$cobj0 =
  \ @ p1_t5Yw @ p0_t5Yx ds_d1vyU ->
    case ds_d1vyU `cast` ... of _ { :*: x0_a1piG x1_a1piH ->
    LamE_
      (map ((unRec3) `cast` ...) (x0_a1piG `cast` ...))
      (x1_a1piH `cast` ...)
    }

$fGeneric0LamE_1
$fGeneric0LamE_1 = $fGeneric0Clause_1

$fGeneric0LamE__$crep0
$fGeneric0LamE__$crep0 =
  \ @ p1_t5XZ @ p0_t5Y0 ds_d1vyt ->
    case ds_d1vyt of _ { LamE_ x0_a1piE x1_a1piF ->
    (:*:
       ((map ($fGeneric0Clause_1 `cast` ...) x0_a1piE) `cast` ...)
       (x1_a1piF `cast` ...))
    `cast` ...
    }

$fGeneric0LamE_
$fGeneric0LamE_ =
  D:Generic0 $fGeneric0LamE__$crep0 $fGeneric0LamE__$cobj0

$fDC0LamCaseE__$crejoin0
$fDC0LamCaseE__$crejoin0 =
  \ ds_d1vyq ->
    case ds_d1vyq of _ { LamCaseE_ x0_a1piD ->
    (LamCaseE x0_a1piD) `cast` ...
    }

$fGeneric0LamCaseE__$cobj0
$fGeneric0LamCaseE__$cobj0 =
  \ @ p1_t5XA @ p0_t5XB ds_d1vy3 ->
    LamCaseE_ (map ((unRec3) `cast` ...) (ds_d1vy3 `cast` ...))

$fGeneric0CaseE_2
$fGeneric0CaseE_2 = \ tpl_X2ae -> tpl_X2ae

$fGeneric0LamCaseE__$crep0
$fGeneric0LamCaseE__$crep0 =
  \ @ p1_t5Xb @ p0_t5Xc ds_d1vxH ->
    case ds_d1vxH of _ { LamCaseE_ x0_a1piA ->
    (map ($fGeneric0CaseE_2 `cast` ...) x0_a1piA) `cast` ...
    }

$fGeneric0LamCaseE_
$fGeneric0LamCaseE_ =
  D:Generic0 $fGeneric0LamCaseE__$crep0 $fGeneric0LamCaseE__$cobj0

$fDC0TupE__$crejoin0
$fDC0TupE__$crejoin0 =
  \ ds_d1vxE ->
    case ds_d1vxE of _ { TupE_ x0_a1piz -> (TupE x0_a1piz) `cast` ... }

$fGeneric0TupE__$cobj0
$fGeneric0TupE__$cobj0 =
  \ @ p1_t5WM @ p0_t5WN ds_d1vxh ->
    TupE_ (map ((unRec3) `cast` ...) (ds_d1vxh `cast` ...))

$fGeneric0ListE_2
$fGeneric0ListE_2 = \ tpl_X2ar -> tpl_X2ar

$fGeneric0TupE__$crep0
$fGeneric0TupE__$crep0 =
  \ @ p1_t5Wn @ p0_t5Wo ds_d1vwV ->
    case ds_d1vwV of _ { TupE_ x0_a1piw ->
    (map ($fGeneric0ListE_2 `cast` ...) x0_a1piw) `cast` ...
    }

$fGeneric0TupE_
$fGeneric0TupE_ =
  D:Generic0 $fGeneric0TupE__$crep0 $fGeneric0TupE__$cobj0

$fDC0UnboxedTupE__$crejoin0
$fDC0UnboxedTupE__$crejoin0 =
  \ ds_d1vwS ->
    case ds_d1vwS of _ { UnboxedTupE_ x0_a1piv ->
    (UnboxedTupE x0_a1piv) `cast` ...
    }

$fGeneric0UnboxedTupE__$cobj0
$fGeneric0UnboxedTupE__$cobj0 =
  \ @ p1_t5VY @ p0_t5VZ ds_d1vwv ->
    UnboxedTupE_ (map ((unRec3) `cast` ...) (ds_d1vwv `cast` ...))

$fGeneric0UnboxedTupE_1
$fGeneric0UnboxedTupE_1 = $fGeneric0ListE_2

$fGeneric0UnboxedTupE__$crep0
$fGeneric0UnboxedTupE__$crep0 =
  \ @ p1_t5Vz @ p0_t5VA ds_d1vw9 ->
    case ds_d1vw9 of _ { UnboxedTupE_ x0_a1pis ->
    (map ($fGeneric0ListE_2 `cast` ...) x0_a1pis) `cast` ...
    }

$fGeneric0UnboxedTupE_
$fGeneric0UnboxedTupE_ =
  D:Generic0
    $fGeneric0UnboxedTupE__$crep0 $fGeneric0UnboxedTupE__$cobj0

$fDC0CondE__$crejoin0
$fDC0CondE__$crejoin0 =
  \ ds_d1vw6 ->
    case ds_d1vw6 of _ { CondE_ x0_a1pip x1_a1piq x2_a1pir ->
    (CondE x0_a1pip x1_a1piq x2_a1pir) `cast` ...
    }

$fGeneric0CondE__$cobj0
$fGeneric0CondE__$cobj0 =
  \ @ p1_t5Vc @ p0_t5Vd ds_d1vvx ->
    case ds_d1vvx `cast` ... of _ { :*: x0_a1pim ds1_d1vvA ->
    case ds1_d1vvA of _ { :*: x1_a1pin x2_a1pio ->
    CondE_
      (x0_a1pim `cast` ...) (x1_a1pin `cast` ...) (x2_a1pio `cast` ...)
    }
    }

$fGeneric0CondE__$crep0
$fGeneric0CondE__$crep0 =
  \ @ p1_t5UL @ p0_t5UM ds_d1vv4 ->
    case ds_d1vv4 of _ { CondE_ x0_a1pij x1_a1pik x2_a1pil ->
    (:*:
       (x0_a1pij `cast` ...)
       (:*: (x1_a1pik `cast` ...) (x2_a1pil `cast` ...)))
    `cast` ...
    }

$fGeneric0CondE_
$fGeneric0CondE_ =
  D:Generic0 $fGeneric0CondE__$crep0 $fGeneric0CondE__$cobj0

$fDC0MultiIfE__$crejoin0
$fDC0MultiIfE__$crejoin0 =
  \ ds_d1vv1 ->
    case ds_d1vv1 of _ { MultiIfE_ x0_a1pii ->
    (MultiIfE x0_a1pii) `cast` ...
    }

$fGeneric0MultiIfE__x
$fGeneric0MultiIfE__x = $fGeneric0GuardedB__x

$fGeneric0MultiIfE__$cobj0
$fGeneric0MultiIfE__$cobj0 =
  \ @ p1_t5Ty @ p0_t5Tz ds_d1vuy ->
    MultiIfE_ (map ($fGeneric0MultiIfE__x) (ds_d1vuy `cast` ...))

$fGeneric0MultiIfE_1
$fGeneric0MultiIfE_1 = $fGeneric0GuardedB_1

$fGeneric0MultiIfE__$crep0
$fGeneric0MultiIfE__$crep0 =
  \ @ p1_t5Sq @ p0_t5Sr ds_d1vu5 ->
    case ds_d1vu5 of _ { MultiIfE_ x0_a1pid ->
    (map (($fGeneric0MultiIfE_1) `cast` ...) x0_a1pid) `cast` ...
    }

$fGeneric0MultiIfE_
$fGeneric0MultiIfE_ =
  D:Generic0 $fGeneric0MultiIfE__$crep0 $fGeneric0MultiIfE__$cobj0

$fDC0LetE__$crejoin0
$fDC0LetE__$crejoin0 =
  \ ds_d1vu1 ->
    case ds_d1vu1 of _ { LetE_ x0_a1pib x1_a1pic ->
    (LetE x0_a1pib x1_a1pic) `cast` ...
    }

$fGeneric0LetE__$cobj0
$fGeneric0LetE__$cobj0 =
  \ @ p1_t5RV @ p0_t5RW ds_d1vtx ->
    case ds_d1vtx `cast` ... of _ { :*: x0_a1pi8 x1_a1pi9 ->
    LetE_
      (map ((unRec3) `cast` ...) (x0_a1pi8 `cast` ...))
      (x1_a1pi9 `cast` ...)
    }

$fGeneric0LetE_1
$fGeneric0LetE_1 = $fGeneric0ClassD_2

$fGeneric0LetE__$crep0
$fGeneric0LetE__$crep0 =
  \ @ p1_t5Ro @ p0_t5Rp ds_d1vt6 ->
    case ds_d1vt6 of _ { LetE_ x0_a1pi6 x1_a1pi7 ->
    (:*:
       ((map ($fGeneric0ClassD_2 `cast` ...) x0_a1pi6) `cast` ...)
       (x1_a1pi7 `cast` ...))
    `cast` ...
    }

$fGeneric0LetE_
$fGeneric0LetE_ =
  D:Generic0 $fGeneric0LetE__$crep0 $fGeneric0LetE__$cobj0

$fDC0CaseE__$crejoin0
$fDC0CaseE__$crejoin0 =
  \ ds_d1vt3 ->
    case ds_d1vt3 of _ { CaseE_ x0_a1pi4 x1_a1pi5 ->
    (CaseE x0_a1pi4 x1_a1pi5) `cast` ...
    }

$fGeneric0CaseE__$cobj0
$fGeneric0CaseE__$cobj0 =
  \ @ p1_t5QT @ p0_t5QU ds_d1vsz ->
    case ds_d1vsz `cast` ... of _ { :*: x0_a1pi1 x1_a1pi2 ->
    CaseE_
      (x0_a1pi1 `cast` ...)
      (map ((unRec3) `cast` ...) (x1_a1pi2 `cast` ...))
    }

$fGeneric0CaseE_1
$fGeneric0CaseE_1 = $fGeneric0CaseE_2

$fGeneric0CaseE__$crep0
$fGeneric0CaseE__$crep0 =
  \ @ p1_t5Qm @ p0_t5Qn ds_d1vs8 ->
    case ds_d1vs8 of _ { CaseE_ x0_a1phZ x1_a1pi0 ->
    (:*:
       (x0_a1phZ `cast` ...)
       ((map ($fGeneric0CaseE_2 `cast` ...) x1_a1pi0) `cast` ...))
    `cast` ...
    }

$fGeneric0CaseE_
$fGeneric0CaseE_ =
  D:Generic0 $fGeneric0CaseE__$crep0 $fGeneric0CaseE__$cobj0

$fDC0DoE__$crejoin0
$fDC0DoE__$crejoin0 =
  \ ds_d1vs5 ->
    case ds_d1vs5 of _ { DoE_ x0_a1phY -> (DoE x0_a1phY) `cast` ... }

$fGeneric0DoE__$cobj0
$fGeneric0DoE__$cobj0 =
  \ @ p1_t5PX @ p0_t5PY ds_d1vrI ->
    DoE_ (map ((unRec3) `cast` ...) (ds_d1vrI `cast` ...))

$fGeneric0CompE_2
$fGeneric0CompE_2 = \ tpl_X2bH -> tpl_X2bH

$fGeneric0DoE__$crep0
$fGeneric0DoE__$crep0 =
  \ @ p1_t5Py @ p0_t5Pz ds_d1vrm ->
    case ds_d1vrm of _ { DoE_ x0_a1phV ->
    (map ($fGeneric0CompE_2 `cast` ...) x0_a1phV) `cast` ...
    }

$fGeneric0DoE_
$fGeneric0DoE_ =
  D:Generic0 $fGeneric0DoE__$crep0 $fGeneric0DoE__$cobj0

$fDC0CompE__$crejoin0
$fDC0CompE__$crejoin0 =
  \ ds_d1vrj ->
    case ds_d1vrj of _ { CompE_ x0_a1phU ->
    (CompE x0_a1phU) `cast` ...
    }

$fGeneric0CompE__$cobj0
$fGeneric0CompE__$cobj0 =
  \ @ p1_t5P9 @ p0_t5Pa ds_d1vqW ->
    CompE_ (map ((unRec3) `cast` ...) (ds_d1vqW `cast` ...))

$fGeneric0CompE_1
$fGeneric0CompE_1 = $fGeneric0CompE_2

$fGeneric0CompE__$crep0
$fGeneric0CompE__$crep0 =
  \ @ p1_t5OK @ p0_t5OL ds_d1vqA ->
    case ds_d1vqA of _ { CompE_ x0_a1phR ->
    (map ($fGeneric0CompE_2 `cast` ...) x0_a1phR) `cast` ...
    }

$fGeneric0CompE_
$fGeneric0CompE_ =
  D:Generic0 $fGeneric0CompE__$crep0 $fGeneric0CompE__$cobj0

$fDC0ArithSeqE__$crejoin0
$fDC0ArithSeqE__$crejoin0 =
  \ ds_d1vqx ->
    case ds_d1vqx of _ { ArithSeqE_ x0_a1phQ ->
    (ArithSeqE x0_a1phQ) `cast` ...
    }

$fGeneric0ArithSeqE__$cobj0
$fGeneric0ArithSeqE__$cobj0 =
  \ @ p1_t5Oz @ p0_t5OA ds_d1vqc -> ArithSeqE_ (ds_d1vqc `cast` ...)

$fGeneric0ArithSeqE__$crep0
$fGeneric0ArithSeqE__$crep0 =
  \ @ p1_t5Oo @ p0_t5Op ds_d1vpT ->
    case ds_d1vpT of _ { ArithSeqE_ x0_a1phO -> x0_a1phO `cast` ... }

$fGeneric0ArithSeqE_
$fGeneric0ArithSeqE_ =
  D:Generic0 $fGeneric0ArithSeqE__$crep0 $fGeneric0ArithSeqE__$cobj0

$fDC0ListE__$crejoin0
$fDC0ListE__$crejoin0 =
  \ ds_d1vpQ ->
    case ds_d1vpQ of _ { ListE_ x0_a1phN ->
    (ListE x0_a1phN) `cast` ...
    }

$fGeneric0ListE__$cobj0
$fGeneric0ListE__$cobj0 =
  \ @ p1_t5NZ @ p0_t5O0 ds_d1vpt ->
    ListE_ (map ((unRec3) `cast` ...) (ds_d1vpt `cast` ...))

$fGeneric0ListE_1
$fGeneric0ListE_1 = $fGeneric0ListE_2

$fGeneric0ListE__$crep0
$fGeneric0ListE__$crep0 =
  \ @ p1_t5NA @ p0_t5NB ds_d1vp7 ->
    case ds_d1vp7 of _ { ListE_ x0_a1phK ->
    (map ($fGeneric0ListE_2 `cast` ...) x0_a1phK) `cast` ...
    }

$fGeneric0ListE_
$fGeneric0ListE_ =
  D:Generic0 $fGeneric0ListE__$crep0 $fGeneric0ListE__$cobj0

$fDC0SigE__$crejoin0
$fDC0SigE__$crejoin0 =
  \ ds_d1vp4 ->
    case ds_d1vp4 of _ { SigE_ x0_a1phI x1_a1phJ ->
    (SigE x0_a1phI x1_a1phJ) `cast` ...
    }

$fGeneric0SigE__$cobj0
$fGeneric0SigE__$cobj0 =
  \ @ p1_t5Nk @ p0_t5Nl ds_d1voF ->
    case ds_d1voF `cast` ... of _ { :*: x0_a1phG x1_a1phH ->
    SigE_ (x0_a1phG `cast` ...) (x1_a1phH `cast` ...)
    }

$fGeneric0SigE__$crep0
$fGeneric0SigE__$crep0 =
  \ @ p1_t5N2 @ p0_t5N3 ds_d1vok ->
    case ds_d1vok of _ { SigE_ x0_a1phE x1_a1phF ->
    (:*: (x0_a1phE `cast` ...) (x1_a1phF `cast` ...)) `cast` ...
    }

$fGeneric0SigE_
$fGeneric0SigE_ =
  D:Generic0 $fGeneric0SigE__$crep0 $fGeneric0SigE__$cobj0

$fDC0RecConE__$crejoin0
$fDC0RecConE__$crejoin0 =
  \ ds_d1voh ->
    case ds_d1voh of _ { RecConE_ x0_a1phC x1_a1phD ->
    (RecConE x0_a1phC x1_a1phD) `cast` ...
    }

$fGeneric0RecConE__x
$fGeneric0RecConE__x =
  \ @ p1_t5M6 @ p0_t5M7 x_X2uT ->
    case x_X2uT `cast` ... of _ { (x1_a1zt8, y_a1zt9) ->
    (x1_a1zt8, y_a1zt9 `cast` ...)
    }

$fGeneric0RecConE__$cobj0
$fGeneric0RecConE__$cobj0 =
  \ @ p1_t5M6 @ p0_t5M7 ds_d1vnO ->
    case ds_d1vnO `cast` ... of _ { :*: x0_a1phy x1_a1phz ->
    RecConE_
      (x0_a1phy `cast` ...)
      (map ($fGeneric0RecConE__x) (x1_a1phz `cast` ...))
    }

$fGeneric0RecConE__x1
$fGeneric0RecConE__x1 =
  \ @ p1_t5Lc @ p0_t5Ld x_X2v4 ->
    case x_X2v4 of _ { (x1_a1zt8, y_a1zt9) ->
    (x1_a1zt8, y_a1zt9 `cast` ...) `cast` ...
    }

$fGeneric0RecConE__$crep0
$fGeneric0RecConE__$crep0 =
  \ @ p1_t5Lc @ p0_t5Ld ds_d1vnn ->
    case ds_d1vnn of _ { RecConE_ x0_a1phv x1_a1phw ->
    (:*:
       (x0_a1phv `cast` ...)
       ((map ($fGeneric0RecConE__x1) x1_a1phw) `cast` ...))
    `cast` ...
    }

$fGeneric0RecConE_
$fGeneric0RecConE_ =
  D:Generic0 $fGeneric0RecConE__$crep0 $fGeneric0RecConE__$cobj0

$fDC0RecUpdE__$crejoin0
$fDC0RecUpdE__$crejoin0 =
  \ ds_d1vnj ->
    case ds_d1vnj of _ { RecUpdE_ x0_a1pht x1_a1phu ->
    (RecUpdE x0_a1pht x1_a1phu) `cast` ...
    }

$fGeneric0RecUpdE__x
$fGeneric0RecUpdE__x = $fGeneric0RecConE__x

$fGeneric0RecUpdE__$cobj0
$fGeneric0RecUpdE__$cobj0 =
  \ @ p1_t5Kf @ p0_t5Kg ds_d1vmN ->
    case ds_d1vmN `cast` ... of _ { :*: x0_a1php x1_a1phq ->
    RecUpdE_
      (x0_a1php `cast` ...)
      (map ($fGeneric0RecUpdE__x) (x1_a1phq `cast` ...))
    }

$fGeneric0RecUpdE__x1
$fGeneric0RecUpdE__x1 = $fGeneric0RecConE__x1

$fGeneric0RecUpdE__$crep0
$fGeneric0RecUpdE__$crep0 =
  \ @ p1_t5Jk @ p0_t5Jl ds_d1vmj ->
    case ds_d1vmj of _ { RecUpdE_ x0_a1phm x1_a1phn ->
    (:*:
       (x0_a1phm `cast` ...)
       ((map ($fGeneric0RecUpdE__x1) x1_a1phn) `cast` ...))
    `cast` ...
    }

$fGeneric0RecUpdE_
$fGeneric0RecUpdE_ =
  D:Generic0 $fGeneric0RecUpdE__$crep0 $fGeneric0RecUpdE__$cobj0

$fDT0Exp_$cdisband0
$fDT0Exp_$cdisband0 =
  \ @ p1_t5wW @ p0_t5wX ds_d1veA ->
    case ds_d1veA of _ {
      VarE x0_a1pgN ->
        (L (L (L (L ((VarE_ x0_a1pgN) `cast` ...))))) `cast` ...;
      ConE x0_a1pgO ->
        (L (L (L (R ((ConE_ x0_a1pgO) `cast` ...))))) `cast` ...;
      LitE x0_a1pgP ->
        (L (L (R (L ((LitE_ x0_a1pgP) `cast` ...))))) `cast` ...;
      AppE x0_a1pgQ x1_a1pgR ->
        (L (L (R (R (L ((AppE_ x0_a1pgQ x1_a1pgR) `cast` ...))))))
        `cast` ...;
      InfixE x0_a1pgS x1_a1pgT x2_a1pgU ->
        (L (L (R (R (R ((InfixE_ x0_a1pgS x1_a1pgT x2_a1pgU)
                        `cast` ...))))))
        `cast` ...;
      UInfixE x0_a1pgV x1_a1pgW x2_a1pgX ->
        (L (R (L (L ((UInfixE_ x0_a1pgV x1_a1pgW x2_a1pgX) `cast` ...)))))
        `cast` ...;
      ParensE x0_a1pgY ->
        (L (R (L (R (L ((ParensE_ x0_a1pgY) `cast` ...)))))) `cast` ...;
      LamE x0_a1pgZ x1_a1ph0 ->
        (L (R (L (R (R ((LamE_ x0_a1pgZ x1_a1ph0) `cast` ...))))))
        `cast` ...;
      LamCaseE x0_a1ph1 ->
        (L (R (R (L ((LamCaseE_ x0_a1ph1) `cast` ...))))) `cast` ...;
      TupE x0_a1ph2 ->
        (L (R (R (R (L ((TupE_ x0_a1ph2) `cast` ...)))))) `cast` ...;
      UnboxedTupE x0_a1ph3 ->
        (L (R (R (R (R ((UnboxedTupE_ x0_a1ph3) `cast` ...))))))
        `cast` ...;
      CondE x0_a1ph4 x1_a1ph5 x2_a1ph6 ->
        (R (L (L (L ((CondE_ x0_a1ph4 x1_a1ph5 x2_a1ph6) `cast` ...)))))
        `cast` ...;
      MultiIfE x0_a1ph7 ->
        (R (L (L (R ((MultiIfE_ x0_a1ph7) `cast` ...))))) `cast` ...;
      LetE x0_a1ph8 x1_a1ph9 ->
        (R (L (R (L ((LetE_ x0_a1ph8 x1_a1ph9) `cast` ...))))) `cast` ...;
      CaseE x0_a1pha x1_a1phb ->
        (R (L (R (R (L ((CaseE_ x0_a1pha x1_a1phb) `cast` ...))))))
        `cast` ...;
      DoE x0_a1phc ->
        (R (L (R (R (R ((DoE_ x0_a1phc) `cast` ...)))))) `cast` ...;
      CompE x0_a1phd ->
        (R (R (L (L ((CompE_ x0_a1phd) `cast` ...))))) `cast` ...;
      ArithSeqE x0_a1phe ->
        (R (R (L (R (L ((ArithSeqE_ x0_a1phe) `cast` ...)))))) `cast` ...;
      ListE x0_a1phf ->
        (R (R (L (R (R ((ListE_ x0_a1phf) `cast` ...)))))) `cast` ...;
      SigE x0_a1phg x1_a1phh ->
        (R (R (R (L ((SigE_ x0_a1phg x1_a1phh) `cast` ...))))) `cast` ...;
      RecConE x0_a1phi x1_a1phj ->
        (R (R (R (R (L ((RecConE_ x0_a1phi x1_a1phj) `cast` ...))))))
        `cast` ...;
      RecUpdE x0_a1phk x1_a1phl ->
        (R (R (R (R (R ((RecUpdE_ x0_a1phk x1_a1phl) `cast` ...))))))
        `cast` ...
    }

$fDT0Exp1
$fDT0Exp1 =
  \ @ p1_X1Ka @ p0_X1Kc ds_XfMd ->
    case ds_XfMd of _ {
      L x_ae6I ->
        case x_ae6I of _ {
          L x1_XeN8 ->
            case x1_XeN8 of _ {
              L x2_XeNc ->
                case x2_XeNc of _ {
                  L x3_XfGT ->
                    case x3_XfGT `cast` ... of _ { VarE_ x0_a1pjm -> VarE x0_a1pjm };
                  R x3_ae6J ->
                    case x3_ae6J `cast` ... of _ { ConE_ x0_a1pjj -> ConE x0_a1pjj }
                };
              R x2_ae6J ->
                case x2_ae6J of _ {
                  L x3_XeNg ->
                    case x3_XeNg `cast` ... of _ { LitE_ x0_a1pjg -> LitE x0_a1pjg };
                  R x3_XeNh ->
                    case x3_XeNh of _ {
                      L x4_XeNk ->
                        case x4_XeNk `cast` ... of _ { AppE_ x0_a1pjc x5_a1pjd ->
                        AppE x0_a1pjc x5_a1pjd
                        };
                      R x4_Xhg7 ->
                        case x4_Xhg7 `cast` ...
                        of _ { InfixE_ x0_a1pj5 x5_a1pj6 x6_a1pj7 ->
                        InfixE x0_a1pj5 x5_a1pj6 x6_a1pj7
                        }
                    }
                }
            };
          R x1_ae6J ->
            case x1_ae6J of _ {
              L x2_XeNc ->
                case x2_XeNc of _ {
                  L x3_XeNg ->
                    case x3_XeNg `cast` ...
                    of _ { UInfixE_ x0_a1piU x4_a1piV x5_a1piW ->
                    UInfixE x0_a1piU x4_a1piV x5_a1piW
                    };
                  R x3_XeNh ->
                    case x3_XeNh of _ {
                      L x4_XeNk ->
                        case x4_XeNk `cast` ... of _ { ParensE_ x0_a1piN ->
                        ParensE x0_a1piN
                        };
                      R x4_XfFH ->
                        case x4_XfFH `cast` ... of _ { LamE_ x0_a1piJ x5_a1piK ->
                        LamE x0_a1piJ x5_a1piK
                        }
                    }
                };
              R x2_XfH1 ->
                case x2_XfH1 of _ {
                  L x3_XeNg ->
                    case x3_XeNg `cast` ... of _ { LamCaseE_ x0_a1piD ->
                    LamCaseE x0_a1piD
                    };
                  R x3_XeNh ->
                    case x3_XeNh of _ {
                      L x4_XeNk ->
                        case x4_XeNk `cast` ... of _ { TupE_ x0_a1piz -> TupE x0_a1piz };
                      R x4_XfF5 ->
                        case x4_XfF5 `cast` ... of _ { UnboxedTupE_ x0_a1piv ->
                        UnboxedTupE x0_a1piv
                        }
                    }
                }
            }
        };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I ->
            case x1_ae6I of _ {
              L x2_XeNc ->
                case x2_XeNc of _ {
                  L x3_XfEl ->
                    case x3_XfEl `cast` ... of _ { CondE_ x0_a1pip x4_a1piq x5_a1pir ->
                    CondE x0_a1pip x4_a1piq x5_a1pir
                    };
                  R x3_XeNh ->
                    case x3_XeNh `cast` ... of _ { MultiIfE_ x0_a1pii ->
                    MultiIfE x0_a1pii
                    }
                };
              R x2_XeNd ->
                case x2_XeNd of _ {
                  L x3_XeNg ->
                    case x3_XeNg `cast` ... of _ { LetE_ x0_a1pib x4_a1pic ->
                    LetE x0_a1pib x4_a1pic
                    };
                  R x3_XeNh ->
                    case x3_XeNh of _ {
                      L x4_XeNk ->
                        case x4_XeNk `cast` ... of _ { CaseE_ x0_a1pi4 x5_a1pi5 ->
                        CaseE x0_a1pi4 x5_a1pi5
                        };
                      R x4_XfDS ->
                        case x4_XfDS `cast` ... of _ { DoE_ x0_a1phY -> DoE x0_a1phY }
                    }
                }
            };
          R x1_XeN9 ->
            case x1_XeN9 of _ {
              L x2_ae6I ->
                case x2_ae6I of _ {
                  L x3_XeNg ->
                    case x3_XeNg `cast` ... of _ { CompE_ x0_a1phU -> CompE x0_a1phU };
                  R x3_XeNh ->
                    case x3_XeNh of _ {
                      L x4_XeNk ->
                        case x4_XeNk `cast` ... of _ { ArithSeqE_ x0_a1phQ ->
                        ArithSeqE x0_a1phQ
                        };
                      R x4_XfD9 ->
                        case x4_XfD9 `cast` ... of _ { ListE_ x0_a1phN -> ListE x0_a1phN }
                    }
                };
              R x2_XfEt ->
                case x2_XfEt of _ {
                  L x3_ae6I ->
                    case x3_ae6I `cast` ... of _ { SigE_ x0_a1phI x4_a1phJ ->
                    SigE x0_a1phI x4_a1phJ
                    };
                  R x3_XeNh ->
                    case x3_XeNh of _ {
                      L x4_ae6I ->
                        case x4_ae6I `cast` ... of _ { RecConE_ x0_a1phC x5_a1phD ->
                        RecConE x0_a1phC x5_a1phD
                        };
                      R x4_XfCx ->
                        case x4_XfCx `cast` ... of _ { RecUpdE_ x0_a1pht x5_a1phu ->
                        RecUpdE x0_a1pht x5_a1phu
                        }
                    }
                }
            }
        }
    }

$fDT0Exp_$dReband0
$fDT0Exp_$dReband0 = $fDT0Exp1 `cast` ...

$fDT0Exp
$fDT0Exp = D:DT0 ($fDT0Exp1 `cast` ...) $fDT0Exp_$cdisband0

$fDC0RecUpdE_
$fDC0RecUpdE_ =
  D:DC0
    $fGeneric0RecUpdE_ ($fDT0Exp `cast` ...) $fDC0RecUpdE__$crejoin0

$fDC0RecConE_
$fDC0RecConE_ =
  D:DC0
    $fGeneric0RecConE_ ($fDT0Exp `cast` ...) $fDC0RecConE__$crejoin0

$fDC0SigE_
$fDC0SigE_ =
  D:DC0 $fGeneric0SigE_ ($fDT0Exp `cast` ...) $fDC0SigE__$crejoin0

$fDC0ListE_
$fDC0ListE_ =
  D:DC0 $fGeneric0ListE_ ($fDT0Exp `cast` ...) $fDC0ListE__$crejoin0

$fDC0ArithSeqE_
$fDC0ArithSeqE_ =
  D:DC0
    $fGeneric0ArithSeqE_
    ($fDT0Exp `cast` ...)
    $fDC0ArithSeqE__$crejoin0

$fDC0CompE_
$fDC0CompE_ =
  D:DC0 $fGeneric0CompE_ ($fDT0Exp `cast` ...) $fDC0CompE__$crejoin0

$fDC0DoE_
$fDC0DoE_ =
  D:DC0 $fGeneric0DoE_ ($fDT0Exp `cast` ...) $fDC0DoE__$crejoin0

$fDC0CaseE_
$fDC0CaseE_ =
  D:DC0 $fGeneric0CaseE_ ($fDT0Exp `cast` ...) $fDC0CaseE__$crejoin0

$fDC0LetE_
$fDC0LetE_ =
  D:DC0 $fGeneric0LetE_ ($fDT0Exp `cast` ...) $fDC0LetE__$crejoin0

$fDC0MultiIfE_
$fDC0MultiIfE_ =
  D:DC0
    $fGeneric0MultiIfE_ ($fDT0Exp `cast` ...) $fDC0MultiIfE__$crejoin0

$fDC0CondE_
$fDC0CondE_ =
  D:DC0 $fGeneric0CondE_ ($fDT0Exp `cast` ...) $fDC0CondE__$crejoin0

$fDC0UnboxedTupE_
$fDC0UnboxedTupE_ =
  D:DC0
    $fGeneric0UnboxedTupE_
    ($fDT0Exp `cast` ...)
    $fDC0UnboxedTupE__$crejoin0

$fDC0TupE_
$fDC0TupE_ =
  D:DC0 $fGeneric0TupE_ ($fDT0Exp `cast` ...) $fDC0TupE__$crejoin0

$fDC0LamCaseE_
$fDC0LamCaseE_ =
  D:DC0
    $fGeneric0LamCaseE_ ($fDT0Exp `cast` ...) $fDC0LamCaseE__$crejoin0

$fDC0LamE_
$fDC0LamE_ =
  D:DC0 $fGeneric0LamE_ ($fDT0Exp `cast` ...) $fDC0LamE__$crejoin0

$fDC0ParensE_
$fDC0ParensE_ =
  D:DC0
    $fGeneric0ParensE_ ($fDT0Exp `cast` ...) $fDC0ParensE__$crejoin0

$fDC0UInfixE_
$fDC0UInfixE_ =
  D:DC0
    $fGeneric0UInfixE_ ($fDT0Exp `cast` ...) $fDC0UInfixE__$crejoin0

$fDC0InfixE_
$fDC0InfixE_ =
  D:DC0
    $fGeneric0InfixE_ ($fDT0Exp `cast` ...) $fDC0InfixE__$crejoin0

$fDC0AppE_
$fDC0AppE_ =
  D:DC0 $fGeneric0AppE_ ($fDT0Exp `cast` ...) $fDC0AppE__$crejoin0

$fDC0LitE_
$fDC0LitE_ =
  D:DC0 $fGeneric0LitE_ ($fDT0Exp `cast` ...) $fDC0LitE__$crejoin0

$fDC0ConE_
$fDC0ConE_ =
  D:DC0 $fGeneric0ConE_ ($fDT0Exp `cast` ...) $fDC0ConE__$crejoin0

$fDC0VarE_
$fDC0VarE_ =
  D:DC0 $fGeneric0VarE_ ($fDT0Exp `cast` ...) $fDC0VarE__$crejoin0

$fDC0NormalG__$crejoin0
$fDC0NormalG__$crejoin0 =
  \ ds_d1vec ->
    case ds_d1vec of _ { NormalG_ x0_a1pgM ->
    (NormalG x0_a1pgM) `cast` ...
    }

$fGeneric0NormalG__$cobj0
$fGeneric0NormalG__$cobj0 =
  \ @ p1_t5wL @ p0_t5wM ds_d1vdR -> NormalG_ (ds_d1vdR `cast` ...)

$fGeneric0NormalG__$crep0
$fGeneric0NormalG__$crep0 =
  \ @ p1_t5wA @ p0_t5wB ds_d1vdy ->
    case ds_d1vdy of _ { NormalG_ x0_a1pgK -> x0_a1pgK `cast` ... }

$fGeneric0NormalG_
$fGeneric0NormalG_ =
  D:Generic0 $fGeneric0NormalG__$crep0 $fGeneric0NormalG__$cobj0

$fDC0PatG__$crejoin0
$fDC0PatG__$crejoin0 =
  \ ds_d1vdv ->
    case ds_d1vdv of _ { PatG_ x0_a1pgJ -> (PatG x0_a1pgJ) `cast` ... }

$fGeneric0PatG__$cobj0
$fGeneric0PatG__$cobj0 =
  \ @ p1_t5wb @ p0_t5wc ds_d1vd8 ->
    PatG_ (map ((unRec3) `cast` ...) (ds_d1vd8 `cast` ...))

$fGeneric0PatG_1
$fGeneric0PatG_1 = $fGeneric0CompE_2

$fGeneric0PatG__$crep0
$fGeneric0PatG__$crep0 =
  \ @ p1_t5vM @ p0_t5vN ds_d1vcM ->
    case ds_d1vcM of _ { PatG_ x0_a1pgG ->
    (map ($fGeneric0CompE_2 `cast` ...) x0_a1pgG) `cast` ...
    }

$fGeneric0PatG_
$fGeneric0PatG_ =
  D:Generic0 $fGeneric0PatG__$crep0 $fGeneric0PatG__$cobj0

$fDT0Guard_$cdisband0
$fDT0Guard_$cdisband0 =
  \ @ p1_t5vq @ p0_t5vr ds_d1vco ->
    case ds_d1vco of _ {
      NormalG x0_a1pgE ->
        (L ((NormalG_ x0_a1pgE) `cast` ...)) `cast` ...;
      PatG x0_a1pgF -> (R ((PatG_ x0_a1pgF) `cast` ...)) `cast` ...
    }

$fDT0Guard1
$fDT0Guard1 =
  \ @ p1_X1KR @ p0_X1KT ds_XfMU ->
    case ds_XfMU of _ {
      L x_ae6I ->
        case x_ae6I `cast` ... of _ { NormalG_ x0_a1pgM ->
        NormalG x0_a1pgM
        };
      R x_ae6J ->
        case x_ae6J `cast` ... of _ { PatG_ x0_a1pgJ -> PatG x0_a1pgJ }
    }

$fDT0Guard_$dReband0
$fDT0Guard_$dReband0 = $fDT0Guard1 `cast` ...

$fDT0Guard
$fDT0Guard = D:DT0 ($fDT0Guard1 `cast` ...) $fDT0Guard_$cdisband0

$fDC0PatG_
$fDC0PatG_ =
  D:DC0 $fGeneric0PatG_ ($fDT0Guard `cast` ...) $fDC0PatG__$crejoin0

$fDC0NormalG_
$fDC0NormalG_ =
  D:DC0
    $fGeneric0NormalG_ ($fDT0Guard `cast` ...) $fDC0NormalG__$crejoin0

$fDC0Match__$crejoin0
$fDC0Match__$crejoin0 =
  \ ds_d1vck ->
    case ds_d1vck of _ { Match_ x0_a1pgB x1_a1pgC x2_a1pgD ->
    (Match x0_a1pgB x1_a1pgC x2_a1pgD) `cast` ...
    }

$fGeneric0Match__$cobj0
$fGeneric0Match__$cobj0 =
  \ @ p1_t5uP @ p0_t5uQ ds_d1vbJ ->
    case ds_d1vbJ `cast` ... of _ { :*: x0_a1pgx ds1_d1vbM ->
    case ds1_d1vbM of _ { :*: x1_a1pgy x2_a1pgz ->
    Match_
      (x0_a1pgx `cast` ...)
      (x1_a1pgy `cast` ...)
      (map ((unRec3) `cast` ...) (x2_a1pgz `cast` ...))
    }
    }

$fGeneric0Match_1
$fGeneric0Match_1 = $fGeneric0ClassD_2

$fGeneric0Match__$crep0
$fGeneric0Match__$crep0 =
  \ @ p1_t5ua @ p0_t5ub ds_d1vbd ->
    case ds_d1vbd of _ { Match_ x0_a1pgu x1_a1pgv x2_a1pgw ->
    (:*:
       (x0_a1pgu `cast` ...)
       (:*:
          (x1_a1pgv `cast` ...)
          ((map ($fGeneric0ClassD_2 `cast` ...) x2_a1pgw) `cast` ...)))
    `cast` ...
    }

$fGeneric0Match_
$fGeneric0Match_ =
  D:Generic0 $fGeneric0Match__$crep0 $fGeneric0Match__$cobj0

$fDT0Match_$cdisband0
$fDT0Match_$cdisband0 =
  \ @ p1_t5u5 @ p0_t5u6 ds_d1vb3 ->
    case ds_d1vb3 of _ { Match x0_a1pgr x1_a1pgs x2_a1pgt ->
    (Match_ x0_a1pgr x1_a1pgs x2_a1pgt) `cast` ...
    }

$fDT0Match1
$fDT0Match1 =
  \ @ p1_X1Lq @ p0_X1Ls ds_XfNk ->
    case ds_XfNk `cast` ... of _ { Match_ x0_a1pgB x1_a1pgC x2_a1pgD ->
    Match x0_a1pgB x1_a1pgC x2_a1pgD
    }

$fDT0Match_$dReband0
$fDT0Match_$dReband0 = $fDT0Match1 `cast` ...

$fDT0Match
$fDT0Match = D:DT0 ($fDT0Match1 `cast` ...) $fDT0Match_$cdisband0

$fDC0Match_
$fDC0Match_ =
  D:DC0
    $fGeneric0Match_ ($fDT0Match `cast` ...) $fDC0Match__$crejoin0

$fDC0LitP__$crejoin0
$fDC0LitP__$crejoin0 =
  \ ds_d1vb0 ->
    case ds_d1vb0 of _ { LitP_ x0_a1pgq -> (LitP x0_a1pgq) `cast` ... }

$fGeneric0LitP__$cobj0
$fGeneric0LitP__$cobj0 =
  \ @ p1_t5tV @ p0_t5tW ds_d1vaI -> LitP_ (ds_d1vaI `cast` ...)

$fGeneric0LitP__$crep0
$fGeneric0LitP__$crep0 =
  \ @ p1_t5tL @ p0_t5tM ds_d1vas ->
    case ds_d1vas of _ { LitP_ x0_a1pgo -> x0_a1pgo `cast` ... }

$fGeneric0LitP_
$fGeneric0LitP_ =
  D:Generic0 $fGeneric0LitP__$crep0 $fGeneric0LitP__$cobj0

$fDC0VarP__$crejoin0
$fDC0VarP__$crejoin0 =
  \ ds_d1vap ->
    case ds_d1vap of _ { VarP_ x0_a1pgn -> (VarP x0_a1pgn) `cast` ... }

$fGeneric0VarP__$cobj0
$fGeneric0VarP__$cobj0 =
  \ @ p1_t5tB @ p0_t5tC ds_d1va7 -> VarP_ (ds_d1va7 `cast` ...)

$fGeneric0VarP__$crep0
$fGeneric0VarP__$crep0 =
  \ @ p1_t5tr @ p0_t5ts ds_d1v9R ->
    case ds_d1v9R of _ { VarP_ x0_a1pgl -> x0_a1pgl `cast` ... }

$fGeneric0VarP_
$fGeneric0VarP_ =
  D:Generic0 $fGeneric0VarP__$crep0 $fGeneric0VarP__$cobj0

$fDC0TupP__$crejoin0
$fDC0TupP__$crejoin0 =
  \ ds_d1v9O ->
    case ds_d1v9O of _ { TupP_ x0_a1pgk -> (TupP x0_a1pgk) `cast` ... }

$fGeneric0TupP__$cobj0
$fGeneric0TupP__$cobj0 =
  \ @ p1_t5t2 @ p0_t5t3 ds_d1v9r ->
    TupP_ (map ((unRec3) `cast` ...) (ds_d1v9r `cast` ...))

$fGeneric0TupP_1
$fGeneric0TupP_1 = $fGeneric0Clause_1

$fGeneric0TupP__$crep0
$fGeneric0TupP__$crep0 =
  \ @ p1_t5sD @ p0_t5sE ds_d1v95 ->
    case ds_d1v95 of _ { TupP_ x0_a1pgh ->
    (map ($fGeneric0Clause_1 `cast` ...) x0_a1pgh) `cast` ...
    }

$fGeneric0TupP_
$fGeneric0TupP_ =
  D:Generic0 $fGeneric0TupP__$crep0 $fGeneric0TupP__$cobj0

$fDC0UnboxedTupP__$crejoin0
$fDC0UnboxedTupP__$crejoin0 =
  \ ds_d1v92 ->
    case ds_d1v92 of _ { UnboxedTupP_ x0_a1pgg ->
    (UnboxedTupP x0_a1pgg) `cast` ...
    }

$fGeneric0UnboxedTupP__$cobj0
$fGeneric0UnboxedTupP__$cobj0 =
  \ @ p1_t5se @ p0_t5sf ds_d1v8F ->
    UnboxedTupP_ (map ((unRec3) `cast` ...) (ds_d1v8F `cast` ...))

$fGeneric0UnboxedTupP_1
$fGeneric0UnboxedTupP_1 = $fGeneric0Clause_1

$fGeneric0UnboxedTupP__$crep0
$fGeneric0UnboxedTupP__$crep0 =
  \ @ p1_t5rP @ p0_t5rQ ds_d1v8j ->
    case ds_d1v8j of _ { UnboxedTupP_ x0_a1pgd ->
    (map ($fGeneric0Clause_1 `cast` ...) x0_a1pgd) `cast` ...
    }

$fGeneric0UnboxedTupP_
$fGeneric0UnboxedTupP_ =
  D:Generic0
    $fGeneric0UnboxedTupP__$crep0 $fGeneric0UnboxedTupP__$cobj0

$fDC0ConP__$crejoin0
$fDC0ConP__$crejoin0 =
  \ ds_d1v8g ->
    case ds_d1v8g of _ { ConP_ x0_a1pgb x1_a1pgc ->
    (ConP x0_a1pgb x1_a1pgc) `cast` ...
    }

$fGeneric0ConP__$cobj0
$fGeneric0ConP__$cobj0 =
  \ @ p1_t5rl @ p0_t5rm ds_d1v7P ->
    case ds_d1v7P `cast` ... of _ { :*: x0_a1pg8 x1_a1pg9 ->
    ConP_
      (x0_a1pg8 `cast` ...)
      (map ((unRec3) `cast` ...) (x1_a1pg9 `cast` ...))
    }

$fGeneric0ConP_1
$fGeneric0ConP_1 = $fGeneric0Clause_1

$fGeneric0ConP__$crep0
$fGeneric0ConP__$crep0 =
  \ @ p1_t5qP @ p0_t5qQ ds_d1v7r ->
    case ds_d1v7r of _ { ConP_ x0_a1pg6 x1_a1pg7 ->
    (:*:
       (x0_a1pg6 `cast` ...)
       ((map ($fGeneric0Clause_1 `cast` ...) x1_a1pg7) `cast` ...))
    `cast` ...
    }

$fGeneric0ConP_
$fGeneric0ConP_ =
  D:Generic0 $fGeneric0ConP__$crep0 $fGeneric0ConP__$cobj0

$fDC0InfixP__$crejoin0
$fDC0InfixP__$crejoin0 =
  \ ds_d1v7o ->
    case ds_d1v7o of _ { InfixP_ x0_a1pg3 x1_a1pg4 x2_a1pg5 ->
    (InfixP x0_a1pg3 x1_a1pg4 x2_a1pg5) `cast` ...
    }

$fGeneric0InfixP__$cobj0
$fGeneric0InfixP__$cobj0 =
  \ @ p1_t5qt @ p0_t5qu ds_d1v6S ->
    case ds_d1v6S `cast` ... of _ { :*: x0_a1pg0 ds1_d1v6V ->
    case ds1_d1v6V of _ { :*: x1_a1pg1 x2_a1pg2 ->
    InfixP_
      (x0_a1pg0 `cast` ...) (x1_a1pg1 `cast` ...) (x2_a1pg2 `cast` ...)
    }
    }

$fGeneric0InfixP__$crep0
$fGeneric0InfixP__$crep0 =
  \ @ p1_t5q3 @ p0_t5q4 ds_d1v6s ->
    case ds_d1v6s of _ { InfixP_ x0_a1pfX x1_a1pfY x2_a1pfZ ->
    (:*:
       (x0_a1pfX `cast` ...)
       (:*: (x1_a1pfY `cast` ...) (x2_a1pfZ `cast` ...)))
    `cast` ...
    }

$fGeneric0InfixP_
$fGeneric0InfixP_ =
  D:Generic0 $fGeneric0InfixP__$crep0 $fGeneric0InfixP__$cobj0

$fDC0UInfixP__$crejoin0
$fDC0UInfixP__$crejoin0 =
  \ ds_d1v6p ->
    case ds_d1v6p of _ { UInfixP_ x0_a1pfU x1_a1pfV x2_a1pfW ->
    (UInfixP x0_a1pfU x1_a1pfV x2_a1pfW) `cast` ...
    }

$fGeneric0UInfixP__$cobj0
$fGeneric0UInfixP__$cobj0 =
  \ @ p1_t5pH @ p0_t5pI ds_d1v5T ->
    case ds_d1v5T `cast` ... of _ { :*: x0_a1pfR ds1_d1v5W ->
    case ds1_d1v5W of _ { :*: x1_a1pfS x2_a1pfT ->
    UInfixP_
      (x0_a1pfR `cast` ...) (x1_a1pfS `cast` ...) (x2_a1pfT `cast` ...)
    }
    }

$fGeneric0UInfixP__$crep0
$fGeneric0UInfixP__$crep0 =
  \ @ p1_t5ph @ p0_t5pi ds_d1v5t ->
    case ds_d1v5t of _ { UInfixP_ x0_a1pfO x1_a1pfP x2_a1pfQ ->
    (:*:
       (x0_a1pfO `cast` ...)
       (:*: (x1_a1pfP `cast` ...) (x2_a1pfQ `cast` ...)))
    `cast` ...
    }

$fGeneric0UInfixP_
$fGeneric0UInfixP_ =
  D:Generic0 $fGeneric0UInfixP__$crep0 $fGeneric0UInfixP__$cobj0

$fDC0ParensP__$crejoin0
$fDC0ParensP__$crejoin0 =
  \ ds_d1v5q ->
    case ds_d1v5q of _ { ParensP_ x0_a1pfN ->
    (ParensP x0_a1pfN) `cast` ...
    }

$fGeneric0ParensP__$cobj0
$fGeneric0ParensP__$cobj0 =
  \ @ p1_t5p6 @ p0_t5p7 ds_d1v55 -> ParensP_ (ds_d1v55 `cast` ...)

$fGeneric0ParensP__$crep0
$fGeneric0ParensP__$crep0 =
  \ @ p1_t5oV @ p0_t5oW ds_d1v4M ->
    case ds_d1v4M of _ { ParensP_ x0_a1pfL -> x0_a1pfL `cast` ... }

$fGeneric0ParensP_
$fGeneric0ParensP_ =
  D:Generic0 $fGeneric0ParensP__$crep0 $fGeneric0ParensP__$cobj0

$fDC0TildeP__$crejoin0
$fDC0TildeP__$crejoin0 =
  \ ds_d1v4J ->
    case ds_d1v4J of _ { TildeP_ x0_a1pfK ->
    (TildeP x0_a1pfK) `cast` ...
    }

$fGeneric0TildeP__$cobj0
$fGeneric0TildeP__$cobj0 =
  \ @ p1_t5oK @ p0_t5oL ds_d1v4o -> TildeP_ (ds_d1v4o `cast` ...)

$fGeneric0TildeP__$crep0
$fGeneric0TildeP__$crep0 =
  \ @ p1_t5oz @ p0_t5oA ds_d1v45 ->
    case ds_d1v45 of _ { TildeP_ x0_a1pfI -> x0_a1pfI `cast` ... }

$fGeneric0TildeP_
$fGeneric0TildeP_ =
  D:Generic0 $fGeneric0TildeP__$crep0 $fGeneric0TildeP__$cobj0

$fDC0BangP__$crejoin0
$fDC0BangP__$crejoin0 =
  \ ds_d1v42 ->
    case ds_d1v42 of _ { BangP_ x0_a1pfH ->
    (BangP x0_a1pfH) `cast` ...
    }

$fGeneric0BangP__$cobj0
$fGeneric0BangP__$cobj0 =
  \ @ p1_t5oo @ p0_t5op ds_d1v3H -> BangP_ (ds_d1v3H `cast` ...)

$fGeneric0BangP__$crep0
$fGeneric0BangP__$crep0 =
  \ @ p1_t5od @ p0_t5oe ds_d1v3o ->
    case ds_d1v3o of _ { BangP_ x0_a1pfF -> x0_a1pfF `cast` ... }

$fGeneric0BangP_
$fGeneric0BangP_ =
  D:Generic0 $fGeneric0BangP__$crep0 $fGeneric0BangP__$cobj0

$fDC0AsP__$crejoin0
$fDC0AsP__$crejoin0 =
  \ ds_d1v3l ->
    case ds_d1v3l of _ { AsP_ x0_a1pfD x1_a1pfE ->
    (AsP x0_a1pfD x1_a1pfE) `cast` ...
    }

$fGeneric0AsP__$cobj0
$fGeneric0AsP__$cobj0 =
  \ @ p1_t5nX @ p0_t5nY ds_d1v2W ->
    case ds_d1v2W `cast` ... of _ { :*: x0_a1pfB x1_a1pfC ->
    AsP_ (x0_a1pfB `cast` ...) (x1_a1pfC `cast` ...)
    }

$fGeneric0AsP__$crep0
$fGeneric0AsP__$crep0 =
  \ @ p1_t5nF @ p0_t5nG ds_d1v2B ->
    case ds_d1v2B of _ { AsP_ x0_a1pfz x1_a1pfA ->
    (:*: (x0_a1pfz `cast` ...) (x1_a1pfA `cast` ...)) `cast` ...
    }

$fGeneric0AsP_
$fGeneric0AsP_ =
  D:Generic0 $fGeneric0AsP__$crep0 $fGeneric0AsP__$cobj0

$fDC0WildP__$crejoin0
$fDC0WildP__$crejoin0 =
  \ ds_d1v2y -> case ds_d1v2y of _ { WildP_ -> WildP `cast` ... }

$fGeneric0WildP__$cobj0
$fGeneric0WildP__$cobj0 = \ @ p1_t5ny @ p0_t5nz _ -> WildP_

$fGeneric0WildP__$crep0
$fGeneric0WildP__$crep0 =
  \ @ p1_t5np @ p0_t5nq ds_d1v1Y ->
    case ds_d1v1Y of _ { WildP_ -> (U) `cast` ... }

$fGeneric0WildP_
$fGeneric0WildP_ =
  D:Generic0 $fGeneric0WildP__$crep0 $fGeneric0WildP__$cobj0

$fDC0RecP__$crejoin0
$fDC0RecP__$crejoin0 =
  \ ds_d1v1V ->
    case ds_d1v1V of _ { RecP_ x0_a1pfx x1_a1pfy ->
    (RecP x0_a1pfx x1_a1pfy) `cast` ...
    }

$fGeneric0RecP__x
$fGeneric0RecP__x =
  \ @ p1_t5mt @ p0_t5mu x_X2EE ->
    case x_X2EE `cast` ... of _ { (x1_a1zt8, y_a1zt9) ->
    (x1_a1zt8, y_a1zt9 `cast` ...)
    }

$fGeneric0RecP__$cobj0
$fGeneric0RecP__$cobj0 =
  \ @ p1_t5mt @ p0_t5mu ds_d1v1s ->
    case ds_d1v1s `cast` ... of _ { :*: x0_a1pft x1_a1pfu ->
    RecP_
      (x0_a1pft `cast` ...)
      (map ($fGeneric0RecP__x) (x1_a1pfu `cast` ...))
    }

$fGeneric0RecP__x1
$fGeneric0RecP__x1 =
  \ @ p1_t5lz @ p0_t5lA x_X2EP ->
    case x_X2EP of _ { (x1_a1zt8, y_a1zt9) ->
    (x1_a1zt8, y_a1zt9 `cast` ...) `cast` ...
    }

$fGeneric0RecP__$crep0
$fGeneric0RecP__$crep0 =
  \ @ p1_t5lz @ p0_t5lA ds_d1v11 ->
    case ds_d1v11 of _ { RecP_ x0_a1pfq x1_a1pfr ->
    (:*:
       (x0_a1pfq `cast` ...)
       ((map ($fGeneric0RecP__x1) x1_a1pfr) `cast` ...))
    `cast` ...
    }

$fGeneric0RecP_
$fGeneric0RecP_ =
  D:Generic0 $fGeneric0RecP__$crep0 $fGeneric0RecP__$cobj0

$fDC0ListP__$crejoin0
$fDC0ListP__$crejoin0 =
  \ ds_d1v0X ->
    case ds_d1v0X of _ { ListP_ x0_a1pfp ->
    (ListP x0_a1pfp) `cast` ...
    }

$fGeneric0ListP__$cobj0
$fGeneric0ListP__$cobj0 =
  \ @ p1_t5la @ p0_t5lb ds_d1v0A ->
    ListP_ (map ((unRec3) `cast` ...) (ds_d1v0A `cast` ...))

$fGeneric0ListP_1
$fGeneric0ListP_1 = $fGeneric0Clause_1

$fGeneric0ListP__$crep0
$fGeneric0ListP__$crep0 =
  \ @ p1_t5kL @ p0_t5kM ds_d1v0e ->
    case ds_d1v0e of _ { ListP_ x0_a1pfm ->
    (map ($fGeneric0Clause_1 `cast` ...) x0_a1pfm) `cast` ...
    }

$fGeneric0ListP_
$fGeneric0ListP_ =
  D:Generic0 $fGeneric0ListP__$crep0 $fGeneric0ListP__$cobj0

$fDC0SigP__$crejoin0
$fDC0SigP__$crejoin0 =
  \ ds_d1v0b ->
    case ds_d1v0b of _ { SigP_ x0_a1pfk x1_a1pfl ->
    (SigP x0_a1pfk x1_a1pfl) `cast` ...
    }

$fGeneric0SigP__$cobj0
$fGeneric0SigP__$cobj0 =
  \ @ p1_t5kv @ p0_t5kw ds_d1uZM ->
    case ds_d1uZM `cast` ... of _ { :*: x0_a1pfi x1_a1pfj ->
    SigP_ (x0_a1pfi `cast` ...) (x1_a1pfj `cast` ...)
    }

$fGeneric0SigP__$crep0
$fGeneric0SigP__$crep0 =
  \ @ p1_t5kd @ p0_t5ke ds_d1uZr ->
    case ds_d1uZr of _ { SigP_ x0_a1pfg x1_a1pfh ->
    (:*: (x0_a1pfg `cast` ...) (x1_a1pfh `cast` ...)) `cast` ...
    }

$fGeneric0SigP_
$fGeneric0SigP_ =
  D:Generic0 $fGeneric0SigP__$crep0 $fGeneric0SigP__$cobj0

$fDC0ViewP__$crejoin0
$fDC0ViewP__$crejoin0 =
  \ ds_d1uZo ->
    case ds_d1uZo of _ { ViewP_ x0_a1pfe x1_a1pff ->
    (ViewP x0_a1pfe x1_a1pff) `cast` ...
    }

$fGeneric0ViewP__$cobj0
$fGeneric0ViewP__$cobj0 =
  \ @ p1_t5jW @ p0_t5jX ds_d1uYW ->
    case ds_d1uYW `cast` ... of _ { :*: x0_a1pfc x1_a1pfd ->
    ViewP_ (x0_a1pfc `cast` ...) (x1_a1pfd `cast` ...)
    }

$fGeneric0ViewP__$crep0
$fGeneric0ViewP__$crep0 =
  \ @ p1_t5jD @ p0_t5jE ds_d1uYy ->
    case ds_d1uYy of _ { ViewP_ x0_a1pfa x1_a1pfb ->
    (:*: (x0_a1pfa `cast` ...) (x1_a1pfb `cast` ...)) `cast` ...
    }

$fGeneric0ViewP_
$fGeneric0ViewP_ =
  D:Generic0 $fGeneric0ViewP__$crep0 $fGeneric0ViewP__$cobj0

$fDT0Pat4
$fDT0Pat4 = \ @ p1_t5bB @ p0_t5bC -> R (WildP_ `cast` ...)

$fDT0Pat3
$fDT0Pat3 = \ @ p1_t5bB @ p0_t5bC -> R ($fDT0Pat4)

$fDT0Pat2
$fDT0Pat2 = \ @ p1_t5bB @ p0_t5bC -> L ($fDT0Pat3)

$fDT0Pat1
$fDT0Pat1 = \ @ p1_t5bB @ p0_t5bC -> R ($fDT0Pat2)

$fDT0Pat_$cdisband0
$fDT0Pat_$cdisband0 =
  \ @ p1_t5bB @ p0_t5bC ds_d1uTm ->
    case ds_d1uTm of _ {
      LitP x0_a1peM ->
        (L (L (L (L ((LitP_ x0_a1peM) `cast` ...))))) `cast` ...;
      VarP x0_a1peN ->
        (L (L (L (R ((VarP_ x0_a1peN) `cast` ...))))) `cast` ...;
      TupP x0_a1peO ->
        (L (L (R (L ((TupP_ x0_a1peO) `cast` ...))))) `cast` ...;
      UnboxedTupP x0_a1peP ->
        (L (L (R (R ((UnboxedTupP_ x0_a1peP) `cast` ...))))) `cast` ...;
      ConP x0_a1peQ x1_a1peR ->
        (L (R (L (L ((ConP_ x0_a1peQ x1_a1peR) `cast` ...))))) `cast` ...;
      InfixP x0_a1peS x1_a1peT x2_a1peU ->
        (L (R (L (R ((InfixP_ x0_a1peS x1_a1peT x2_a1peU) `cast` ...)))))
        `cast` ...;
      UInfixP x0_a1peV x1_a1peW x2_a1peX ->
        (L (R (R (L ((UInfixP_ x0_a1peV x1_a1peW x2_a1peX) `cast` ...)))))
        `cast` ...;
      ParensP x0_a1peY ->
        (L (R (R (R ((ParensP_ x0_a1peY) `cast` ...))))) `cast` ...;
      TildeP x0_a1peZ ->
        (R (L (L (L ((TildeP_ x0_a1peZ) `cast` ...))))) `cast` ...;
      BangP x0_a1pf0 ->
        (R (L (L (R ((BangP_ x0_a1pf0) `cast` ...))))) `cast` ...;
      AsP x0_a1pf1 x1_a1pf2 ->
        (R (L (R (L ((AsP_ x0_a1pf1 x1_a1pf2) `cast` ...))))) `cast` ...;
      WildP -> ($fDT0Pat1) `cast` ...;
      RecP x0_a1pf3 x1_a1pf4 ->
        (R (R (L (L ((RecP_ x0_a1pf3 x1_a1pf4) `cast` ...))))) `cast` ...;
      ListP x0_a1pf5 ->
        (R (R (L (R ((ListP_ x0_a1pf5) `cast` ...))))) `cast` ...;
      SigP x0_a1pf6 x1_a1pf7 ->
        (R (R (R (L ((SigP_ x0_a1pf6 x1_a1pf7) `cast` ...))))) `cast` ...;
      ViewP x0_a1pf8 x1_a1pf9 ->
        (R (R (R (R ((ViewP_ x0_a1pf8 x1_a1pf9) `cast` ...))))) `cast` ...
    }

$fDT0Pat5
$fDT0Pat5 =
  \ @ p1_X1RP @ p0_X1RR ds_XfTS ->
    case ds_XfTS of _ {
      L x_ae6I ->
        case x_ae6I of _ {
          L x1_XfOM ->
            case x1_XfOM of _ {
              L x2_XePg ->
                case x2_XePg of _ {
                  L x3_XfOy ->
                    case x3_XfOy `cast` ... of _ { LitP_ x0_a1pgq -> LitP x0_a1pgq };
                  R x3_ae6J ->
                    case x3_ae6J `cast` ... of _ { VarP_ x0_a1pgn -> VarP x0_a1pgn }
                };
              R x2_ae6J ->
                case x2_ae6J of _ {
                  L x3_XePk ->
                    case x3_XePk `cast` ... of _ { TupP_ x0_a1pgk -> TupP x0_a1pgk };
                  R x3_XfOz ->
                    case x3_XfOz `cast` ... of _ { UnboxedTupP_ x0_a1pgg ->
                    UnboxedTupP x0_a1pgg
                    }
                }
            };
          R x1_ae6J ->
            case x1_ae6J of _ {
              L x2_XePg ->
                case x2_XePg of _ {
                  L x3_XfNH ->
                    case x3_XfNH `cast` ... of _ { ConP_ x0_a1pgb x4_a1pgc ->
                    ConP x0_a1pgb x4_a1pgc
                    };
                  R x3_XePl ->
                    case x3_XePl `cast` ...
                    of _ { InfixP_ x0_a1pg3 x4_a1pg4 x5_a1pg5 ->
                    InfixP x0_a1pg3 x4_a1pg4 x5_a1pg5
                    }
                };
              R x2_XePh ->
                case x2_XePh of _ {
                  L x3_XePk ->
                    case x3_XePk `cast` ...
                    of _ { UInfixP_ x0_a1pfU x4_a1pfV x5_a1pfW ->
                    UInfixP x0_a1pfU x4_a1pfV x5_a1pfW
                    };
                  R x3_XfNI ->
                    case x3_XfNI `cast` ... of _ { ParensP_ x0_a1pfN ->
                    ParensP x0_a1pfN
                    }
                }
            }
        };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I ->
            case x1_ae6I of _ {
              L x2_XePg ->
                case x2_XePg of _ {
                  L x3_XfMJ ->
                    case x3_XfMJ `cast` ... of _ { TildeP_ x0_a1pfK ->
                    TildeP x0_a1pfK
                    };
                  R x3_XePl ->
                    case x3_XePl `cast` ... of _ { BangP_ x0_a1pfH -> BangP x0_a1pfH }
                };
              R x2_XePh ->
                case x2_XePh of _ {
                  L x3_XePk ->
                    case x3_XePk `cast` ... of _ { AsP_ x0_a1pfD x4_a1pfE ->
                    AsP x0_a1pfD x4_a1pfE
                    };
                  R x3_XhsL -> case x3_XhsL of _ { __DEFAULT -> WildP }
                }
            };
          R x1_XfON ->
            case x1_XfON of _ {
              L x2_ae6I ->
                case x2_ae6I of _ {
                  L x3_Xhr2 ->
                    case x3_Xhr2 `cast` ... of _ { RecP_ x0_a1pfx x4_a1pfy ->
                    RecP x0_a1pfx x4_a1pfy
                    };
                  R x3_XePl ->
                    case x3_XePl `cast` ... of _ { ListP_ x0_a1pfp -> ListP x0_a1pfp }
                };
              R x2_XePh ->
                case x2_XePh of _ {
                  L x3_ae6I ->
                    case x3_ae6I `cast` ... of _ { SigP_ x0_a1pfk x4_a1pfl ->
                    SigP x0_a1pfk x4_a1pfl
                    };
                  R x3_XfLT ->
                    case x3_XfLT `cast` ... of _ { ViewP_ x0_a1pfe x4_a1pff ->
                    ViewP x0_a1pfe x4_a1pff
                    }
                }
            }
        }
    }

$fDT0Pat_$dReband0
$fDT0Pat_$dReband0 = $fDT0Pat5 `cast` ...

$fDT0Pat
$fDT0Pat = D:DT0 ($fDT0Pat5 `cast` ...) $fDT0Pat_$cdisband0

$fDC0ViewP_
$fDC0ViewP_ =
  D:DC0 $fGeneric0ViewP_ ($fDT0Pat `cast` ...) $fDC0ViewP__$crejoin0

$fDC0SigP_
$fDC0SigP_ =
  D:DC0 $fGeneric0SigP_ ($fDT0Pat `cast` ...) $fDC0SigP__$crejoin0

$fDC0ListP_
$fDC0ListP_ =
  D:DC0 $fGeneric0ListP_ ($fDT0Pat `cast` ...) $fDC0ListP__$crejoin0

$fDC0RecP_
$fDC0RecP_ =
  D:DC0 $fGeneric0RecP_ ($fDT0Pat `cast` ...) $fDC0RecP__$crejoin0

$fDC0WildP_
$fDC0WildP_ =
  D:DC0 $fGeneric0WildP_ ($fDT0Pat `cast` ...) $fDC0WildP__$crejoin0

$fDC0AsP_
$fDC0AsP_ =
  D:DC0 $fGeneric0AsP_ ($fDT0Pat `cast` ...) $fDC0AsP__$crejoin0

$fDC0BangP_
$fDC0BangP_ =
  D:DC0 $fGeneric0BangP_ ($fDT0Pat `cast` ...) $fDC0BangP__$crejoin0

$fDC0TildeP_
$fDC0TildeP_ =
  D:DC0
    $fGeneric0TildeP_ ($fDT0Pat `cast` ...) $fDC0TildeP__$crejoin0

$fDC0ParensP_
$fDC0ParensP_ =
  D:DC0
    $fGeneric0ParensP_ ($fDT0Pat `cast` ...) $fDC0ParensP__$crejoin0

$fDC0UInfixP_
$fDC0UInfixP_ =
  D:DC0
    $fGeneric0UInfixP_ ($fDT0Pat `cast` ...) $fDC0UInfixP__$crejoin0

$fDC0InfixP_
$fDC0InfixP_ =
  D:DC0
    $fGeneric0InfixP_ ($fDT0Pat `cast` ...) $fDC0InfixP__$crejoin0

$fDC0ConP_
$fDC0ConP_ =
  D:DC0 $fGeneric0ConP_ ($fDT0Pat `cast` ...) $fDC0ConP__$crejoin0

$fDC0UnboxedTupP_
$fDC0UnboxedTupP_ =
  D:DC0
    $fGeneric0UnboxedTupP_
    ($fDT0Pat `cast` ...)
    $fDC0UnboxedTupP__$crejoin0

$fDC0TupP_
$fDC0TupP_ =
  D:DC0 $fGeneric0TupP_ ($fDT0Pat `cast` ...) $fDC0TupP__$crejoin0

$fDC0VarP_
$fDC0VarP_ =
  D:DC0 $fGeneric0VarP_ ($fDT0Pat `cast` ...) $fDC0VarP__$crejoin0

$fDC0LitP_
$fDC0LitP_ =
  D:DC0 $fGeneric0LitP_ ($fDT0Pat `cast` ...) $fDC0LitP__$crejoin0

$fDC0InlineP__$crejoin0
$fDC0InlineP__$crejoin0 =
  \ ds_d1uT4 ->
    case ds_d1uT4
    of _ { InlineP_ x0_a1peI x1_a1peJ x2_a1peK x3_a1peL ->
    (InlineP x0_a1peI x1_a1peJ x2_a1peK x3_a1peL) `cast` ...
    }

$fGeneric0InlineP__$cobj0
$fGeneric0InlineP__$cobj0 =
  \ @ p1_t5bc @ p0_t5bd ds_d1uSG ->
    case ds_d1uSG `cast` ... of _ { :*: ds1_d1uSJ ds2_d1uSK ->
    case ds1_d1uSJ of _ { :*: x0_a1peE x1_a1peF ->
    case ds2_d1uSK of _ { :*: x2_a1peG x3_a1peH ->
    InlineP_
      (x0_a1peE `cast` ...)
      (x1_a1peF `cast` ...)
      (x2_a1peG `cast` ...)
      (x3_a1peH `cast` ...)
    }
    }
    }

$fGeneric0InlineP__$crep0
$fGeneric0InlineP__$crep0 =
  \ @ p1_t5aH @ p0_t5aI ds_d1uSq ->
    case ds_d1uSq
    of _ { InlineP_ x0_a1peA x1_a1peB x2_a1peC x3_a1peD ->
    (:*:
       (:*: (x0_a1peA `cast` ...) (x1_a1peB `cast` ...))
       (:*: (x2_a1peC `cast` ...) (x3_a1peD `cast` ...)))
    `cast` ...
    }

$fGeneric0InlineP_
$fGeneric0InlineP_ =
  D:Generic0 $fGeneric0InlineP__$crep0 $fGeneric0InlineP__$cobj0

$fDC0SpecialiseP__$crejoin0
$fDC0SpecialiseP__$crejoin0 =
  \ ds_d1uSn ->
    case ds_d1uSn
    of _ { SpecialiseP_ x0_a1pew x1_a1pex x2_a1pey x3_a1pez ->
    (SpecialiseP x0_a1pew x1_a1pex x2_a1pey x3_a1pez) `cast` ...
    }

$fGeneric0SpecialiseP__$cobj0
$fGeneric0SpecialiseP__$cobj0 =
  \ @ p1_t5ai @ p0_t5aj ds_d1uRZ ->
    case ds_d1uRZ `cast` ... of _ { :*: ds1_d1uS2 ds2_d1uS3 ->
    case ds1_d1uS2 of _ { :*: x0_a1pes x1_a1pet ->
    case ds2_d1uS3 of _ { :*: x2_a1peu x3_a1pev ->
    SpecialiseP_
      (x0_a1pes `cast` ...)
      (x1_a1pet `cast` ...)
      (x2_a1peu `cast` ...)
      (x3_a1pev `cast` ...)
    }
    }
    }

$fGeneric0SpecialiseP__$crep0
$fGeneric0SpecialiseP__$crep0 =
  \ @ p1_t59N @ p0_t59O ds_d1uRJ ->
    case ds_d1uRJ
    of _ { SpecialiseP_ x0_a1peo x1_a1pep x2_a1peq x3_a1per ->
    (:*:
       (:*: (x0_a1peo `cast` ...) (x1_a1pep `cast` ...))
       (:*: (x2_a1peq `cast` ...) (x3_a1per `cast` ...)))
    `cast` ...
    }

$fGeneric0SpecialiseP_
$fGeneric0SpecialiseP_ =
  D:Generic0
    $fGeneric0SpecialiseP__$crep0 $fGeneric0SpecialiseP__$cobj0

$fDC0SpecialiseInstP__$crejoin0
$fDC0SpecialiseInstP__$crejoin0 =
  \ ds_d1uRG ->
    case ds_d1uRG of _ { SpecialiseInstP_ x0_a1pen ->
    (SpecialiseInstP x0_a1pen) `cast` ...
    }

$fGeneric0SpecialiseInstP__$cobj0
$fGeneric0SpecialiseInstP__$cobj0 =
  \ @ p1_t59D @ p0_t59E ds_d1uRo ->
    SpecialiseInstP_ (ds_d1uRo `cast` ...)

$fGeneric0SpecialiseInstP__$crep0
$fGeneric0SpecialiseInstP__$crep0 =
  \ @ p1_t59t @ p0_t59u ds_d1uR8 ->
    case ds_d1uR8 of _ { SpecialiseInstP_ x0_a1pel ->
    x0_a1pel `cast` ...
    }

$fGeneric0SpecialiseInstP_
$fGeneric0SpecialiseInstP_ =
  D:Generic0
    $fGeneric0SpecialiseInstP__$crep0 $fGeneric0SpecialiseInstP__$cobj0

$fDC0RuleP__$crejoin0
$fDC0RuleP__$crejoin0 =
  \ ds_d1uR5 ->
    case ds_d1uR5
    of _ { RuleP_ x0_a1peg x1_a1peh x2_a1pei x3_a1pej x4_a1pek ->
    (RuleP x0_a1peg x1_a1peh x2_a1pei x3_a1pej x4_a1pek) `cast` ...
    }

$fGeneric0RuleP__$cobj0
$fGeneric0RuleP__$cobj0 =
  \ @ p1_t58X @ p0_t58Y ds_d1uQt ->
    case ds_d1uQt `cast` ... of _ { :*: ds1_d1uQw ds2_d1uQx ->
    case ds1_d1uQw of _ { :*: x0_a1peb x1_a1pec ->
    case ds2_d1uQx of _ { :*: x2_a1ped ds3_d1uQy ->
    case ds3_d1uQy of _ { :*: x3_a1pee x4_a1pef ->
    RuleP_
      (x0_a1peb `cast` ...)
      (x1_a1pec `cast` ...)
      (x2_a1ped `cast` ...)
      (x3_a1pee `cast` ...)
      (x4_a1pef `cast` ...)
    }
    }
    }
    }

$fGeneric0RuleP__$crep0
$fGeneric0RuleP__$crep0 =
  \ @ p1_t58j @ p0_t58k ds_d1uQ1 ->
    case ds_d1uQ1
    of _ { RuleP_ x0_a1pe6 x1_a1pe7 x2_a1pe8 x3_a1pe9 x4_a1pea ->
    (:*:
       (:*: (x0_a1pe6 `cast` ...) (x1_a1pe7 `cast` ...))
       (:*:
          (x2_a1pe8 `cast` ...)
          (:*: (x3_a1pe9 `cast` ...) (x4_a1pea `cast` ...))))
    `cast` ...
    }

$fGeneric0RuleP_
$fGeneric0RuleP_ =
  D:Generic0 $fGeneric0RuleP__$crep0 $fGeneric0RuleP__$cobj0

$fDT0Pragma_$cdisband0
$fDT0Pragma_$cdisband0 =
  \ @ p1_t57b @ p0_t57c ds_d1uP5 ->
    case ds_d1uP5 of _ {
      InlineP x0_a1pdS x1_a1pdT x2_a1pdU x3_a1pdV ->
        (L (L ((InlineP_ x0_a1pdS x1_a1pdT x2_a1pdU x3_a1pdV) `cast` ...)))
        `cast` ...;
      SpecialiseP x0_a1pdW x1_a1pdX x2_a1pdY x3_a1pdZ ->
        (L (R ((SpecialiseP_ x0_a1pdW x1_a1pdX x2_a1pdY x3_a1pdZ)
               `cast` ...)))
        `cast` ...;
      SpecialiseInstP x0_a1pe0 ->
        (R (L ((SpecialiseInstP_ x0_a1pe0) `cast` ...))) `cast` ...;
      RuleP x0_a1pe1 x1_a1pe2 x2_a1pe3 x3_a1pe4 x4_a1pe5 ->
        (R (R ((RuleP_ x0_a1pe1 x1_a1pe2 x2_a1pe3 x3_a1pe4 x4_a1pe5)
               `cast` ...)))
        `cast` ...
    }

$fDT0Pragma1
$fDT0Pragma1 =
  \ @ p1_X3Ct @ p0_X3Cw ds_XfVe ->
    case ds_XfVe of _ {
      L x_ae6I ->
        case x_ae6I of _ {
          L x1_Xhzy ->
            case x1_Xhzy `cast` ...
            of _ { InlineP_ x0_a1peI x2_a1peJ x3_a1peK x4_a1peL ->
            InlineP x0_a1peI x2_a1peJ x3_a1peK x4_a1peL
            };
          R x1_ae6J ->
            case x1_ae6J `cast` ...
            of _ { SpecialiseP_ x0_a1pew x2_a1pex x3_a1pey x4_a1pez ->
            SpecialiseP x0_a1pew x2_a1pex x3_a1pey x4_a1pez
            }
        };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I ->
            case x1_ae6I `cast` ... of _ { SpecialiseInstP_ x0_a1pen ->
            SpecialiseInstP x0_a1pen
            };
          R x1_Xhzz ->
            case x1_Xhzz `cast` ...
            of _ { RuleP_ x0_a1peg x2_a1peh x3_a1pei x4_a1pej x5_a1pek ->
            RuleP x0_a1peg x2_a1peh x3_a1pei x4_a1pej x5_a1pek
            }
        }
    }

$fDT0Pragma_$dReband0
$fDT0Pragma_$dReband0 = $fDT0Pragma1 `cast` ...

$fDT0Pragma
$fDT0Pragma =
  D:DT0 ($fDT0Pragma1 `cast` ...) $fDT0Pragma_$cdisband0

$fDC0RuleP_
$fDC0RuleP_ =
  D:DC0
    $fGeneric0RuleP_ ($fDT0Pragma `cast` ...) $fDC0RuleP__$crejoin0

$fDC0SpecialiseInstP_
$fDC0SpecialiseInstP_ =
  D:DC0
    $fGeneric0SpecialiseInstP_
    ($fDT0Pragma `cast` ...)
    $fDC0SpecialiseInstP__$crejoin0

$fDC0SpecialiseP_
$fDC0SpecialiseP_ =
  D:DC0
    $fGeneric0SpecialiseP_
    ($fDT0Pragma `cast` ...)
    $fDC0SpecialiseP__$crejoin0

$fDC0InlineP_
$fDC0InlineP_ =
  D:DC0
    $fGeneric0InlineP_ ($fDT0Pragma `cast` ...) $fDC0InlineP__$crejoin0

$fDC0FromR__$crejoin0
$fDC0FromR__$crejoin0 =
  \ ds_d1uOZ ->
    case ds_d1uOZ of _ { FromR_ x0_a1pdR ->
    (FromR x0_a1pdR) `cast` ...
    }

$fGeneric0FromR__$cobj0
$fGeneric0FromR__$cobj0 =
  \ @ p1_t570 @ p0_t571 ds_d1uOE -> FromR_ (ds_d1uOE `cast` ...)

$fGeneric0FromR__$crep0
$fGeneric0FromR__$crep0 =
  \ @ p1_t56P @ p0_t56Q ds_d1uOl ->
    case ds_d1uOl of _ { FromR_ x0_a1pdP -> x0_a1pdP `cast` ... }

$fGeneric0FromR_
$fGeneric0FromR_ =
  D:Generic0 $fGeneric0FromR__$crep0 $fGeneric0FromR__$cobj0

$fDC0FromThenR__$crejoin0
$fDC0FromThenR__$crejoin0 =
  \ ds_d1uOi ->
    case ds_d1uOi of _ { FromThenR_ x0_a1pdN x1_a1pdO ->
    (FromThenR x0_a1pdN x1_a1pdO) `cast` ...
    }

$fGeneric0FromThenR__$cobj0
$fGeneric0FromThenR__$cobj0 =
  \ @ p1_t56y @ p0_t56z ds_d1uNQ ->
    case ds_d1uNQ `cast` ... of _ { :*: x0_a1pdL x1_a1pdM ->
    FromThenR_ (x0_a1pdL `cast` ...) (x1_a1pdM `cast` ...)
    }

$fGeneric0FromThenR__$crep0
$fGeneric0FromThenR__$crep0 =
  \ @ p1_t56f @ p0_t56g ds_d1uNs ->
    case ds_d1uNs of _ { FromThenR_ x0_a1pdJ x1_a1pdK ->
    (:*: (x0_a1pdJ `cast` ...) (x1_a1pdK `cast` ...)) `cast` ...
    }

$fGeneric0FromThenR_
$fGeneric0FromThenR_ =
  D:Generic0 $fGeneric0FromThenR__$crep0 $fGeneric0FromThenR__$cobj0

$fDC0FromToR__$crejoin0
$fDC0FromToR__$crejoin0 =
  \ ds_d1uNp ->
    case ds_d1uNp of _ { FromToR_ x0_a1pdH x1_a1pdI ->
    (FromToR x0_a1pdH x1_a1pdI) `cast` ...
    }

$fGeneric0FromToR__$cobj0
$fGeneric0FromToR__$cobj0 =
  \ @ p1_t55Y @ p0_t55Z ds_d1uMX ->
    case ds_d1uMX `cast` ... of _ { :*: x0_a1pdF x1_a1pdG ->
    FromToR_ (x0_a1pdF `cast` ...) (x1_a1pdG `cast` ...)
    }

$fGeneric0FromToR__$crep0
$fGeneric0FromToR__$crep0 =
  \ @ p1_t55F @ p0_t55G ds_d1uMz ->
    case ds_d1uMz of _ { FromToR_ x0_a1pdD x1_a1pdE ->
    (:*: (x0_a1pdD `cast` ...) (x1_a1pdE `cast` ...)) `cast` ...
    }

$fGeneric0FromToR_
$fGeneric0FromToR_ =
  D:Generic0 $fGeneric0FromToR__$crep0 $fGeneric0FromToR__$cobj0

$fDC0FromThenToR__$crejoin0
$fDC0FromThenToR__$crejoin0 =
  \ ds_d1uMw ->
    case ds_d1uMw of _ { FromThenToR_ x0_a1pdA x1_a1pdB x2_a1pdC ->
    (FromThenToR x0_a1pdA x1_a1pdB x2_a1pdC) `cast` ...
    }

$fGeneric0FromThenToR__$cobj0
$fGeneric0FromThenToR__$cobj0 =
  \ @ p1_t55i @ p0_t55j ds_d1uLX ->
    case ds_d1uLX `cast` ... of _ { :*: x0_a1pdx ds1_d1uM0 ->
    case ds1_d1uM0 of _ { :*: x1_a1pdy x2_a1pdz ->
    FromThenToR_
      (x0_a1pdx `cast` ...) (x1_a1pdy `cast` ...) (x2_a1pdz `cast` ...)
    }
    }

$fGeneric0FromThenToR__$crep0
$fGeneric0FromThenToR__$crep0 =
  \ @ p1_t54R @ p0_t54S ds_d1uLu ->
    case ds_d1uLu of _ { FromThenToR_ x0_a1pdu x1_a1pdv x2_a1pdw ->
    (:*:
       (x0_a1pdu `cast` ...)
       (:*: (x1_a1pdv `cast` ...) (x2_a1pdw `cast` ...)))
    `cast` ...
    }

$fGeneric0FromThenToR_
$fGeneric0FromThenToR_ =
  D:Generic0
    $fGeneric0FromThenToR__$crep0 $fGeneric0FromThenToR__$cobj0

$fDT0Range_$cdisband0
$fDT0Range_$cdisband0 =
  \ @ p1_t53J @ p0_t53K ds_d1uKy ->
    case ds_d1uKy of _ {
      FromR x0_a1pdm ->
        (L (L ((FromR_ x0_a1pdm) `cast` ...))) `cast` ...;
      FromThenR x0_a1pdn x1_a1pdo ->
        (L (R ((FromThenR_ x0_a1pdn x1_a1pdo) `cast` ...))) `cast` ...;
      FromToR x0_a1pdp x1_a1pdq ->
        (R (L ((FromToR_ x0_a1pdp x1_a1pdq) `cast` ...))) `cast` ...;
      FromThenToR x0_a1pdr x1_a1pds x2_a1pdt ->
        (R (R ((FromThenToR_ x0_a1pdr x1_a1pds x2_a1pdt) `cast` ...)))
        `cast` ...
    }

$fDT0Range1
$fDT0Range1 =
  \ @ p1_X3Fb @ p0_X3Fe ds_XfWA ->
    case ds_XfWA of _ {
      L x_ae6I ->
        case x_ae6I of _ {
          L x1_XfRu ->
            case x1_XfRu `cast` ... of _ { FromR_ x0_a1pdR -> FromR x0_a1pdR };
          R x1_ae6J ->
            case x1_ae6J `cast` ... of _ { FromThenR_ x0_a1pdN x2_a1pdO ->
            FromThenR x0_a1pdN x2_a1pdO
            }
        };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I ->
            case x1_ae6I `cast` ... of _ { FromToR_ x0_a1pdH x2_a1pdI ->
            FromToR x0_a1pdH x2_a1pdI
            };
          R x1_XfRv ->
            case x1_XfRv `cast` ...
            of _ { FromThenToR_ x0_a1pdA x2_a1pdB x3_a1pdC ->
            FromThenToR x0_a1pdA x2_a1pdB x3_a1pdC
            }
        }
    }

$fDT0Range_$dReband0
$fDT0Range_$dReband0 = $fDT0Range1 `cast` ...

$fDT0Range
$fDT0Range = D:DT0 ($fDT0Range1 `cast` ...) $fDT0Range_$cdisband0

$fDC0FromThenToR_
$fDC0FromThenToR_ =
  D:DC0
    $fGeneric0FromThenToR_
    ($fDT0Range `cast` ...)
    $fDC0FromThenToR__$crejoin0

$fDC0FromToR_
$fDC0FromToR_ =
  D:DC0
    $fGeneric0FromToR_ ($fDT0Range `cast` ...) $fDC0FromToR__$crejoin0

$fDC0FromThenR_
$fDC0FromThenR_ =
  D:DC0
    $fGeneric0FromThenR_
    ($fDT0Range `cast` ...)
    $fDC0FromThenR__$crejoin0

$fDC0FromR_
$fDC0FromR_ =
  D:DC0
    $fGeneric0FromR_ ($fDT0Range `cast` ...) $fDC0FromR__$crejoin0

$fDC0BindS__$crejoin0
$fDC0BindS__$crejoin0 =
  \ ds_d1uKs ->
    case ds_d1uKs of _ { BindS_ x0_a1pdk x1_a1pdl ->
    (BindS x0_a1pdk x1_a1pdl) `cast` ...
    }

$fGeneric0BindS__$cobj0
$fGeneric0BindS__$cobj0 =
  \ @ p1_t53s @ p0_t53t ds_d1uK0 ->
    case ds_d1uK0 `cast` ... of _ { :*: x0_a1pdi x1_a1pdj ->
    BindS_ (x0_a1pdi `cast` ...) (x1_a1pdj `cast` ...)
    }

$fGeneric0BindS__$crep0
$fGeneric0BindS__$crep0 =
  \ @ p1_t539 @ p0_t53a ds_d1uJC ->
    case ds_d1uJC of _ { BindS_ x0_a1pdg x1_a1pdh ->
    (:*: (x0_a1pdg `cast` ...) (x1_a1pdh `cast` ...)) `cast` ...
    }

$fGeneric0BindS_
$fGeneric0BindS_ =
  D:Generic0 $fGeneric0BindS__$crep0 $fGeneric0BindS__$cobj0

$fDC0LetS__$crejoin0
$fDC0LetS__$crejoin0 =
  \ ds_d1uJz ->
    case ds_d1uJz of _ { LetS_ x0_a1pdf -> (LetS x0_a1pdf) `cast` ... }

$fGeneric0LetS__$cobj0
$fGeneric0LetS__$cobj0 =
  \ @ p1_t52K @ p0_t52L ds_d1uJc ->
    LetS_ (map ((unRec3) `cast` ...) (ds_d1uJc `cast` ...))

$fGeneric0LetS_1
$fGeneric0LetS_1 = $fGeneric0ClassD_2

$fGeneric0LetS__$crep0
$fGeneric0LetS__$crep0 =
  \ @ p1_t52l @ p0_t52m ds_d1uIQ ->
    case ds_d1uIQ of _ { LetS_ x0_a1pdc ->
    (map ($fGeneric0ClassD_2 `cast` ...) x0_a1pdc) `cast` ...
    }

$fGeneric0LetS_
$fGeneric0LetS_ =
  D:Generic0 $fGeneric0LetS__$crep0 $fGeneric0LetS__$cobj0

$fDC0NoBindS__$crejoin0
$fDC0NoBindS__$crejoin0 =
  \ ds_d1uIN ->
    case ds_d1uIN of _ { NoBindS_ x0_a1pdb ->
    (NoBindS x0_a1pdb) `cast` ...
    }

$fGeneric0NoBindS__$cobj0
$fGeneric0NoBindS__$cobj0 =
  \ @ p1_t52a @ p0_t52b ds_d1uIs -> NoBindS_ (ds_d1uIs `cast` ...)

$fGeneric0NoBindS__$crep0
$fGeneric0NoBindS__$crep0 =
  \ @ p1_t51Z @ p0_t520 ds_d1uI9 ->
    case ds_d1uI9 of _ { NoBindS_ x0_a1pd9 -> x0_a1pd9 `cast` ... }

$fGeneric0NoBindS_
$fGeneric0NoBindS_ =
  D:Generic0 $fGeneric0NoBindS__$crep0 $fGeneric0NoBindS__$cobj0

$fDC0ParS__$crejoin0
$fDC0ParS__$crejoin0 =
  \ ds_d1uI6 ->
    case ds_d1uI6 of _ { ParS_ x0_a1pd8 -> (ParS x0_a1pd8) `cast` ... }

$fGeneric0ParS__x
$fGeneric0ParS__x =
  \ @ p1_t518 @ p0_t519 x_X2Nf ->
    map ((unRec3) `cast` ...) (x_X2Nf `cast` ...)

$fGeneric0ParS__$cobj0
$fGeneric0ParS__$cobj0 =
  \ @ p1_t518 @ p0_t519 ds_d1uHH ->
    ParS_ (map ($fGeneric0ParS__x) (ds_d1uHH `cast` ...))

$fGeneric0ParS__g
$fGeneric0ParS__g =
  \ @ p1_t50l @ p0_t50m eta_X1e8E ->
    map ($fGeneric0CompE_2 `cast` ...) eta_X1e8E

$fGeneric0ParS__$crep0
$fGeneric0ParS__$crep0 =
  \ @ p1_t50l @ p0_t50m ds_d1uHi ->
    case ds_d1uHi of _ { ParS_ x0_a1pd3 ->
    (map (($fGeneric0ParS__g) `cast` ...) x0_a1pd3) `cast` ...
    }

$fGeneric0ParS_
$fGeneric0ParS_ =
  D:Generic0 $fGeneric0ParS__$crep0 $fGeneric0ParS__$cobj0

$fDT0Stmt_$cdisband0
$fDT0Stmt_$cdisband0 =
  \ @ p1_t4Zd @ p0_t4Ze ds_d1uGl ->
    case ds_d1uGl of _ {
      BindS x0_a1pcY x1_a1pcZ ->
        (L (L ((BindS_ x0_a1pcY x1_a1pcZ) `cast` ...))) `cast` ...;
      LetS x0_a1pd0 -> (L (R ((LetS_ x0_a1pd0) `cast` ...))) `cast` ...;
      NoBindS x0_a1pd1 ->
        (R (L ((NoBindS_ x0_a1pd1) `cast` ...))) `cast` ...;
      ParS x0_a1pd2 -> (R (R ((ParS_ x0_a1pd2) `cast` ...))) `cast` ...
    }

$fDT0Stmt1
$fDT0Stmt1 =
  \ @ p1_X3In @ p0_X3Iq ds_XfYb ->
    case ds_XfYb of _ {
      L x_ae6I ->
        case x_ae6I of _ {
          L x1_XfT5 ->
            case x1_XfT5 `cast` ... of _ { BindS_ x0_a1pdk x2_a1pdl ->
            BindS x0_a1pdk x2_a1pdl
            };
          R x1_ae6J ->
            case x1_ae6J `cast` ... of _ { LetS_ x0_a1pdf -> LetS x0_a1pdf }
        };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I ->
            case x1_ae6I `cast` ... of _ { NoBindS_ x0_a1pdb ->
            NoBindS x0_a1pdb
            };
          R x1_XfT6 ->
            case x1_XfT6 `cast` ... of _ { ParS_ x0_a1pd8 -> ParS x0_a1pd8 }
        }
    }

$fDT0Stmt_$dReband0
$fDT0Stmt_$dReband0 = $fDT0Stmt1 `cast` ...

$fDT0Stmt
$fDT0Stmt = D:DT0 ($fDT0Stmt1 `cast` ...) $fDT0Stmt_$cdisband0

$fDC0ParS_
$fDC0ParS_ =
  D:DC0 $fGeneric0ParS_ ($fDT0Stmt `cast` ...) $fDC0ParS__$crejoin0

$fDC0NoBindS_
$fDC0NoBindS_ =
  D:DC0
    $fGeneric0NoBindS_ ($fDT0Stmt `cast` ...) $fDC0NoBindS__$crejoin0

$fDC0LetS_
$fDC0LetS_ =
  D:DC0 $fGeneric0LetS_ ($fDT0Stmt `cast` ...) $fDC0LetS__$crejoin0

$fDC0BindS_
$fDC0BindS_ =
  D:DC0 $fGeneric0BindS_ ($fDT0Stmt `cast` ...) $fDC0BindS__$crejoin0

$fDC0IsStrict__$crejoin0
$fDC0IsStrict__$crejoin0 =
  \ ds_d1uGf ->
    case ds_d1uGf of _ { IsStrict_ -> IsStrict `cast` ... }

$fGeneric0IsStrict__$cobj0
$fGeneric0IsStrict__$cobj0 = \ @ p1_t2Qo @ p0_t2Qp _ -> IsStrict_

$fGeneric0IsStrict__$crep0
$fGeneric0IsStrict__$crep0 =
  \ @ p1_t2Qf @ p0_t2Qg ds_d1uFF ->
    case ds_d1uFF of _ { IsStrict_ -> (U) `cast` ... }

$fGeneric0IsStrict_
$fGeneric0IsStrict_ =
  D:Generic0 $fGeneric0IsStrict__$crep0 $fGeneric0IsStrict__$cobj0

$fDC0NotStrict__$crejoin0
$fDC0NotStrict__$crejoin0 =
  \ ds_d1uFC ->
    case ds_d1uFC of _ { NotStrict_ -> NotStrict `cast` ... }

$fGeneric0NotStrict__$cobj0
$fGeneric0NotStrict__$cobj0 = \ @ p1_t2Q8 @ p0_t2Q9 _ -> NotStrict_

$fGeneric0NotStrict__$crep0
$fGeneric0NotStrict__$crep0 =
  \ @ p1_t2PZ @ p0_t2Q0 ds_d1uF2 ->
    case ds_d1uF2 of _ { NotStrict_ -> (U) `cast` ... }

$fGeneric0NotStrict_
$fGeneric0NotStrict_ =
  D:Generic0 $fGeneric0NotStrict__$crep0 $fGeneric0NotStrict__$cobj0

$fDC0Unpacked__$crejoin0
$fDC0Unpacked__$crejoin0 =
  \ ds_d1uEZ ->
    case ds_d1uEZ of _ { Unpacked_ -> Unpacked `cast` ... }

$fGeneric0Unpacked__$cobj0
$fGeneric0Unpacked__$cobj0 = \ @ p1_t2PS @ p0_t2PT _ -> Unpacked_

$fGeneric0Unpacked__$crep0
$fGeneric0Unpacked__$crep0 =
  \ @ p1_t2PJ @ p0_t2PK ds_d1uEp ->
    case ds_d1uEp of _ { Unpacked_ -> (U) `cast` ... }

$fGeneric0Unpacked_
$fGeneric0Unpacked_ =
  D:Generic0 $fGeneric0Unpacked__$crep0 $fGeneric0Unpacked__$cobj0

$fDT0Strict5
$fDT0Strict5 = \ @ p1_t2OZ @ p0_t2P0 -> L (IsStrict_ `cast` ...)

$fDT0Strict4
$fDT0Strict4 = \ @ p1_t2OZ @ p0_t2P0 -> L (NotStrict_ `cast` ...)

$fDT0Strict3
$fDT0Strict3 = \ @ p1_t2OZ @ p0_t2P0 -> R ($fDT0Strict4)

$fDT0Strict2
$fDT0Strict2 = \ @ p1_t2OZ @ p0_t2P0 -> R (Unpacked_ `cast` ...)

$fDT0Strict1
$fDT0Strict1 = \ @ p1_t2OZ @ p0_t2P0 -> R ($fDT0Strict2)

$fDT0Strict_$cdisband0
$fDT0Strict_$cdisband0 =
  \ @ p1_t2OZ @ p0_t2P0 ds_d1uDK ->
    case ds_d1uDK of _ {
      IsStrict -> ($fDT0Strict5) `cast` ...;
      NotStrict -> ($fDT0Strict3) `cast` ...;
      Unpacked -> ($fDT0Strict1) `cast` ...
    }

$fDT0Strict6
$fDT0Strict6 =
  \ @ p1_X1X7 @ p0_X1X9 ds_XfZa ->
    case ds_XfZa of _ {
      L x_ae6I -> case x_ae6I of _ { __DEFAULT -> IsStrict };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I -> case x1_ae6I of _ { __DEFAULT -> NotStrict };
          R x1_XfU5 -> case x1_XfU5 of _ { __DEFAULT -> Unpacked }
        }
    }

$fDT0Strict_$dReband0
$fDT0Strict_$dReband0 = $fDT0Strict6 `cast` ...

$fDT0Strict
$fDT0Strict =
  D:DT0 ($fDT0Strict6 `cast` ...) $fDT0Strict_$cdisband0

$fDC0Unpacked_
$fDC0Unpacked_ =
  D:DC0
    $fGeneric0Unpacked_
    ($fDT0Strict `cast` ...)
    $fDC0Unpacked__$crejoin0

$fDC0NotStrict_
$fDC0NotStrict_ =
  D:DC0
    $fGeneric0NotStrict_
    ($fDT0Strict `cast` ...)
    $fDC0NotStrict__$crejoin0

$fDC0IsStrict_
$fDC0IsStrict_ =
  D:DC0
    $fGeneric0IsStrict_
    ($fDT0Strict `cast` ...)
    $fDC0IsStrict__$crejoin0

$wa88
$wa88 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $wa53

$fMinCtors*Strict1
$fMinCtors*Strict1 = \ _ -> $wa88

$fMinCtors*Strict_$cminCtors
$fMinCtors*Strict_$cminCtors = $fMinCtors*Strict1 `cast` ...

$fMinCtors*Strict
$fMinCtors*Strict = $fMinCtors*Strict1 `cast` ...

$fDC0NormalC__$crejoin0
$fDC0NormalC__$crejoin0 =
  \ ds_d1uDF ->
    case ds_d1uDF of _ { NormalC_ x0_a1p4v x1_a1p4w ->
    (NormalC x0_a1p4v x1_a1p4w) `cast` ...
    }

$fGeneric0NormalC__$cobj0
$fGeneric0NormalC__$cobj0 =
  \ @ p1_t2JC @ p0_t2JD ds_d1uDl ->
    case ds_d1uDl `cast` ... of _ { :*: x0_a1p4t x1_a1p4u ->
    NormalC_ (x0_a1p4t `cast` ...) (x1_a1p4u `cast` ...)
    }

$fGeneric0NormalC__$crep0
$fGeneric0NormalC__$crep0 =
  \ @ p1_t2Jl @ p0_t2Jm ds_d1uD5 ->
    case ds_d1uD5 of _ { NormalC_ x0_a1p4r x1_a1p4s ->
    (:*: (x0_a1p4r `cast` ...) (x1_a1p4s `cast` ...)) `cast` ...
    }

$fGeneric0NormalC_
$fGeneric0NormalC_ =
  D:Generic0 $fGeneric0NormalC__$crep0 $fGeneric0NormalC__$cobj0

$fDC0RecC__$crejoin0
$fDC0RecC__$crejoin0 =
  \ ds_d1uD2 ->
    case ds_d1uD2 of _ { RecC_ x0_a1p4p x1_a1p4q ->
    (RecC x0_a1p4p x1_a1p4q) `cast` ...
    }

$fGeneric0RecC__$cobj0
$fGeneric0RecC__$cobj0 =
  \ @ p1_t2J6 @ p0_t2J7 ds_d1uCI ->
    case ds_d1uCI `cast` ... of _ { :*: x0_a1p4n x1_a1p4o ->
    RecC_ (x0_a1p4n `cast` ...) (x1_a1p4o `cast` ...)
    }

$fGeneric0RecC__$crep0
$fGeneric0RecC__$crep0 =
  \ @ p1_t2IP @ p0_t2IQ ds_d1uCs ->
    case ds_d1uCs of _ { RecC_ x0_a1p4l x1_a1p4m ->
    (:*: (x0_a1p4l `cast` ...) (x1_a1p4m `cast` ...)) `cast` ...
    }

$fGeneric0RecC_
$fGeneric0RecC_ =
  D:Generic0 $fGeneric0RecC__$crep0 $fGeneric0RecC__$cobj0

$fDC0InfixC__$crejoin0
$fDC0InfixC__$crejoin0 =
  \ ds_d1uCp ->
    case ds_d1uCp of _ { InfixC_ x0_a1p4i x1_a1p4j x2_a1p4k ->
    (InfixC x0_a1p4i x1_a1p4j x2_a1p4k) `cast` ...
    }

$fGeneric0InfixC__$cobj0
$fGeneric0InfixC__$cobj0 =
  \ @ p1_t2Iv @ p0_t2Iw ds_d1uC3 ->
    case ds_d1uC3 `cast` ... of _ { :*: x0_a1p4f ds1_d1uC6 ->
    case ds1_d1uC6 of _ { :*: x1_a1p4g x2_a1p4h ->
    InfixC_
      (x0_a1p4f `cast` ...) (x1_a1p4g `cast` ...) (x2_a1p4h `cast` ...)
    }
    }

$fGeneric0InfixC__$crep0
$fGeneric0InfixC__$crep0 =
  \ @ p1_t2I7 @ p0_t2I8 ds_d1uBN ->
    case ds_d1uBN of _ { InfixC_ x0_a1p4c x1_a1p4d x2_a1p4e ->
    (:*:
       (x0_a1p4c `cast` ...)
       (:*: (x1_a1p4d `cast` ...) (x2_a1p4e `cast` ...)))
    `cast` ...
    }

$fGeneric0InfixC_
$fGeneric0InfixC_ =
  D:Generic0 $fGeneric0InfixC__$crep0 $fGeneric0InfixC__$cobj0

$fDC0ForallC__$crejoin0
$fDC0ForallC__$crejoin0 =
  \ ds_d1uBK ->
    case ds_d1uBK of _ { ForallC_ x0_a1p49 x1_a1p4a x2_a1p4b ->
    (ForallC x0_a1p49 x1_a1p4a x2_a1p4b) `cast` ...
    }

$fGeneric0ForallC__$cobj0
$fGeneric0ForallC__$cobj0 =
  \ @ p1_t2HM @ p0_t2HN ds_d1uBh ->
    case ds_d1uBh `cast` ... of _ { :*: x0_a1p46 ds1_d1uBk ->
    case ds1_d1uBk of _ { :*: x1_a1p47 x2_a1p48 ->
    ForallC_
      (x0_a1p46 `cast` ...) (x1_a1p47 `cast` ...) (x2_a1p48 `cast` ...)
    }
    }

$fGeneric0ForallC__$crep0
$fGeneric0ForallC__$crep0 =
  \ @ p1_t2Hn @ p0_t2Ho ds_d1uAU ->
    case ds_d1uAU of _ { ForallC_ x0_a1p43 x1_a1p44 x2_a1p45 ->
    (:*:
       (x0_a1p43 `cast` ...)
       (:*: (x1_a1p44 `cast` ...) (x2_a1p45 `cast` ...)))
    `cast` ...
    }

$fGeneric0ForallC_
$fGeneric0ForallC_ =
  D:Generic0 $fGeneric0ForallC__$crep0 $fGeneric0ForallC__$cobj0

$fDT0Con_$cdisband0
$fDT0Con_$cdisband0 =
  \ @ p1_t2Gf @ p0_t2Gg ds_d1uzY ->
    case ds_d1uzY of _ {
      NormalC x0_a1p3T x1_a1p3U ->
        (L (L ((NormalC_ x0_a1p3T x1_a1p3U) `cast` ...))) `cast` ...;
      RecC x0_a1p3V x1_a1p3W ->
        (L (R ((RecC_ x0_a1p3V x1_a1p3W) `cast` ...))) `cast` ...;
      InfixC x0_a1p3X x1_a1p3Y x2_a1p3Z ->
        (R (L ((InfixC_ x0_a1p3X x1_a1p3Y x2_a1p3Z) `cast` ...)))
        `cast` ...;
      ForallC x0_a1p40 x1_a1p41 x2_a1p42 ->
        (R (R ((ForallC_ x0_a1p40 x1_a1p41 x2_a1p42) `cast` ...)))
        `cast` ...
    }

$fDT0Con1
$fDT0Con1 =
  \ @ p1_X3Nj @ p0_X3Nm ds_Xg0E ->
    case ds_Xg0E of _ {
      L x_ae6I ->
        case x_ae6I of _ {
          L x1_XfVy ->
            case x1_XfVy `cast` ... of _ { NormalC_ x0_a1p4v x2_a1p4w ->
            NormalC x0_a1p4v x2_a1p4w
            };
          R x1_ae6J ->
            case x1_ae6J `cast` ... of _ { RecC_ x0_a1p4p x2_a1p4q ->
            RecC x0_a1p4p x2_a1p4q
            }
        };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I ->
            case x1_ae6I `cast` ...
            of _ { InfixC_ x0_a1p4i x2_a1p4j x3_a1p4k ->
            InfixC x0_a1p4i x2_a1p4j x3_a1p4k
            };
          R x1_XfVz ->
            case x1_XfVz `cast` ...
            of _ { ForallC_ x0_a1p49 x2_a1p4a x3_a1p4b ->
            ForallC x0_a1p49 x2_a1p4a x3_a1p4b
            }
        }
    }

$fDT0Con_$dReband0
$fDT0Con_$dReband0 = $fDT0Con1 `cast` ...

$fDT0Con
$fDT0Con = D:DT0 ($fDT0Con1 `cast` ...) $fDT0Con_$cdisband0

$fDC0ForallC_
$fDC0ForallC_ =
  D:DC0
    $fGeneric0ForallC_ ($fDT0Con `cast` ...) $fDC0ForallC__$crejoin0

$fDC0InfixC_
$fDC0InfixC_ =
  D:DC0
    $fGeneric0InfixC_ ($fDT0Con `cast` ...) $fDC0InfixC__$crejoin0

$fDC0RecC_
$fDC0RecC_ =
  D:DC0 $fGeneric0RecC_ ($fDT0Con `cast` ...) $fDC0RecC__$crejoin0

$fDC0NormalC_
$fDC0NormalC_ =
  D:DC0
    $fGeneric0NormalC_ ($fDT0Con `cast` ...) $fDC0NormalC__$crejoin0

$fDC0CCall__$crejoin0
$fDC0CCall__$crejoin0 =
  \ ds_d1uzS -> case ds_d1uzS of _ { CCall_ -> CCall `cast` ... }

$fGeneric0CCall__$cobj0
$fGeneric0CCall__$cobj0 = \ @ p1_t2zl @ p0_t2zm _ -> CCall_

$fGeneric0CCall__$crep0
$fGeneric0CCall__$crep0 =
  \ @ p1_t2zc @ p0_t2zd ds_d1uzi ->
    case ds_d1uzi of _ { CCall_ -> (U) `cast` ... }

$fGeneric0CCall_
$fGeneric0CCall_ =
  D:Generic0 $fGeneric0CCall__$crep0 $fGeneric0CCall__$cobj0

$fDC0StdCall__$crejoin0
$fDC0StdCall__$crejoin0 =
  \ ds_d1uzf -> case ds_d1uzf of _ { StdCall_ -> StdCall `cast` ... }

$fGeneric0StdCall__$cobj0
$fGeneric0StdCall__$cobj0 = \ @ p1_t2z5 @ p0_t2z6 _ -> StdCall_

$fGeneric0StdCall__$crep0
$fGeneric0StdCall__$crep0 =
  \ @ p1_t2yW @ p0_t2yX ds_d1uyF ->
    case ds_d1uyF of _ { StdCall_ -> (U) `cast` ... }

$fGeneric0StdCall_
$fGeneric0StdCall_ =
  D:Generic0 $fGeneric0StdCall__$crep0 $fGeneric0StdCall__$cobj0

$fDT0Callconv2
$fDT0Callconv2 = \ @ p1_t2yA @ p0_t2yB -> L (CCall_ `cast` ...)

$fDT0Callconv1
$fDT0Callconv1 = \ @ p1_t2yA @ p0_t2yB -> R (StdCall_ `cast` ...)

$fDT0Callconv_$cdisband0
$fDT0Callconv_$cdisband0 =
  \ @ p1_t2yA @ p0_t2yB ds_d1uyh ->
    case ds_d1uyh of _ {
      CCall -> ($fDT0Callconv2) `cast` ...;
      StdCall -> ($fDT0Callconv1) `cast` ...
    }

$fDT0Callconv3
$fDT0Callconv3 =
  \ @ p1_X1Zd @ p0_X1Zf ds_Xg1g ->
    case ds_Xg1g of _ {
      L x_ae6I -> case x_ae6I of _ { __DEFAULT -> CCall };
      R x_ae6J -> case x_ae6J of _ { __DEFAULT -> StdCall }
    }

$fDT0Callconv_$dReband0
$fDT0Callconv_$dReband0 = $fDT0Callconv3 `cast` ...

$fDT0Callconv
$fDT0Callconv =
  D:DT0 ($fDT0Callconv3 `cast` ...) $fDT0Callconv_$cdisband0

$fDC0StdCall_
$fDC0StdCall_ =
  D:DC0
    $fGeneric0StdCall_
    ($fDT0Callconv `cast` ...)
    $fDC0StdCall__$crejoin0

$fDC0CCall_
$fDC0CCall_ =
  D:DC0
    $fGeneric0CCall_ ($fDT0Callconv `cast` ...) $fDC0CCall__$crejoin0

$wa80
$wa80 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body117

$fMinCtors*Callconv1
$fMinCtors*Callconv1 = \ _ -> $wa80

$fMinCtors*Callconv_$cminCtors
$fMinCtors*Callconv_$cminCtors = $fMinCtors*Callconv1 `cast` ...

$fMinCtors*Callconv
$fMinCtors*Callconv = $fMinCtors*Callconv1 `cast` ...

$fDC0FunDep__$crejoin0
$fDC0FunDep__$crejoin0 =
  \ ds_d1uyd ->
    case ds_d1uyd of _ { FunDep_ x0_a1p1m x1_a1p1n ->
    (FunDep x0_a1p1m x1_a1p1n) `cast` ...
    }

$fGeneric0FunDep__$cobj0
$fGeneric0FunDep__$cobj0 =
  \ @ p1_t2vg @ p0_t2vh ds_d1uxT ->
    case ds_d1uxT `cast` ... of _ { :*: x0_a1p1k x1_a1p1l ->
    FunDep_ (x0_a1p1k `cast` ...) (x1_a1p1l `cast` ...)
    }

$fGeneric0FunDep__$crep0
$fGeneric0FunDep__$crep0 =
  \ @ p1_t2uZ @ p0_t2v0 ds_d1uxD ->
    case ds_d1uxD of _ { FunDep_ x0_a1p1i x1_a1p1j ->
    (:*: (x0_a1p1i `cast` ...) (x1_a1p1j `cast` ...)) `cast` ...
    }

$fGeneric0FunDep_
$fGeneric0FunDep_ =
  D:Generic0 $fGeneric0FunDep__$crep0 $fGeneric0FunDep__$cobj0

$fDT0FunDep_$cdisband0
$fDT0FunDep_$cdisband0 =
  \ @ p1_t2uU @ p0_t2uV ds_d1uxt ->
    case ds_d1uxt of _ { FunDep x0_a1p1g x1_a1p1h ->
    (FunDep_ x0_a1p1g x1_a1p1h) `cast` ...
    }

$fDT0FunDep1
$fDT0FunDep1 =
  \ @ p1_X1ZY @ p0_X200 ds_Xg1S ->
    case ds_Xg1S `cast` ... of _ { FunDep_ x0_a1p1m x1_a1p1n ->
    FunDep x0_a1p1m x1_a1p1n
    }

$fDT0FunDep_$dReband0
$fDT0FunDep_$dReband0 = $fDT0FunDep1 `cast` ...

$fDT0FunDep
$fDT0FunDep =
  D:DT0 ($fDT0FunDep1 `cast` ...) $fDT0FunDep_$cdisband0

$fDC0FunDep_
$fDC0FunDep_ =
  D:DC0
    $fGeneric0FunDep_ ($fDT0FunDep `cast` ...) $fDC0FunDep__$crejoin0

$fDC0Unsafe__$crejoin0
$fDC0Unsafe__$crejoin0 =
  \ ds_d1uxq -> case ds_d1uxq of _ { Unsafe_ -> Unsafe `cast` ... }

$fGeneric0Unsafe__$cobj0
$fGeneric0Unsafe__$cobj0 = \ @ p1_t2t5 @ p0_t2t6 _ -> Unsafe_

$fGeneric0Unsafe__$crep0
$fGeneric0Unsafe__$crep0 =
  \ @ p1_t2sW @ p0_t2sX ds_d1uwQ ->
    case ds_d1uwQ of _ { Unsafe_ -> (U) `cast` ... }

$fGeneric0Unsafe_
$fGeneric0Unsafe_ =
  D:Generic0 $fGeneric0Unsafe__$crep0 $fGeneric0Unsafe__$cobj0

$fDC0Safe__$crejoin0
$fDC0Safe__$crejoin0 =
  \ ds_d1uwN -> case ds_d1uwN of _ { Safe_ -> Safe `cast` ... }

$fGeneric0Safe__$cobj0
$fGeneric0Safe__$cobj0 = \ @ p1_t2sP @ p0_t2sQ _ -> Safe_

$fGeneric0Safe__$crep0
$fGeneric0Safe__$crep0 =
  \ @ p1_t2sG @ p0_t2sH ds_d1uwd ->
    case ds_d1uwd of _ { Safe_ -> (U) `cast` ... }

$fGeneric0Safe_
$fGeneric0Safe_ =
  D:Generic0 $fGeneric0Safe__$crep0 $fGeneric0Safe__$cobj0

$fDC0Interruptible__$crejoin0
$fDC0Interruptible__$crejoin0 =
  \ ds_d1uwa ->
    case ds_d1uwa of _ { Interruptible_ -> Interruptible `cast` ... }

$fGeneric0Interruptible__$cobj0
$fGeneric0Interruptible__$cobj0 =
  \ @ p1_t2sz @ p0_t2sA _ -> Interruptible_

$fGeneric0Interruptible__$crep0
$fGeneric0Interruptible__$crep0 =
  \ @ p1_t2sq @ p0_t2sr ds_d1uvA ->
    case ds_d1uvA of _ { Interruptible_ -> (U) `cast` ... }

$fGeneric0Interruptible_
$fGeneric0Interruptible_ =
  D:Generic0
    $fGeneric0Interruptible__$crep0 $fGeneric0Interruptible__$cobj0

$fDT0Safety5
$fDT0Safety5 = \ @ p1_t2rG @ p0_t2rH -> L (Unsafe_ `cast` ...)

$fDT0Safety4
$fDT0Safety4 = \ @ p1_t2rG @ p0_t2rH -> L (Safe_ `cast` ...)

$fDT0Safety3
$fDT0Safety3 = \ @ p1_t2rG @ p0_t2rH -> R ($fDT0Safety4)

$fDT0Safety2
$fDT0Safety2 =
  \ @ p1_t2rG @ p0_t2rH -> R (Interruptible_ `cast` ...)

$fDT0Safety1
$fDT0Safety1 = \ @ p1_t2rG @ p0_t2rH -> R ($fDT0Safety2)

$fDT0Safety_$cdisband0
$fDT0Safety_$cdisband0 =
  \ @ p1_t2rG @ p0_t2rH ds_d1uuV ->
    case ds_d1uuV of _ {
      Unsafe -> ($fDT0Safety5) `cast` ...;
      Safe -> ($fDT0Safety3) `cast` ...;
      Interruptible -> ($fDT0Safety1) `cast` ...
    }

$fDT0Safety6
$fDT0Safety6 =
  \ @ p1_X20J @ p0_X20L ds_Xg2M ->
    case ds_Xg2M of _ {
      L x_ae6I -> case x_ae6I of _ { __DEFAULT -> Unsafe };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I -> case x1_ae6I of _ { __DEFAULT -> Safe };
          R x1_XhOF -> case x1_XhOF of _ { __DEFAULT -> Interruptible }
        }
    }

$fDT0Safety_$dReband0
$fDT0Safety_$dReband0 = $fDT0Safety6 `cast` ...

$fDT0Safety
$fDT0Safety =
  D:DT0 ($fDT0Safety6 `cast` ...) $fDT0Safety_$cdisband0

$fDC0Interruptible_
$fDC0Interruptible_ =
  D:DC0
    $fGeneric0Interruptible_
    ($fDT0Safety `cast` ...)
    $fDC0Interruptible__$crejoin0

$fDC0Safe_
$fDC0Safe_ =
  D:DC0 $fGeneric0Safe_ ($fDT0Safety `cast` ...) $fDC0Safe__$crejoin0

$fDC0Unsafe_
$fDC0Unsafe_ =
  D:DC0
    $fGeneric0Unsafe_ ($fDT0Safety `cast` ...) $fDC0Unsafe__$crejoin0

$wa87
$wa87 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $wa70

$fMinCtors*Safety1
$fMinCtors*Safety1 = \ _ -> $wa87

$fMinCtors*Safety_$cminCtors
$fMinCtors*Safety_$cminCtors = $fMinCtors*Safety1 `cast` ...

$fMinCtors*Safety
$fMinCtors*Safety = $fMinCtors*Safety1 `cast` ...

$fDC0ImportF__$crejoin0
$fDC0ImportF__$crejoin0 =
  \ ds_d1uuQ ->
    case ds_d1uuQ
    of _ { ImportF_ x0_a1oXO x1_a1oXP x2_a1oXQ x3_a1oXR x4_a1oXS ->
    (ImportF x0_a1oXO x1_a1oXP x2_a1oXQ x3_a1oXR x4_a1oXS) `cast` ...
    }

$fGeneric0ImportF__$cobj0
$fGeneric0ImportF__$cobj0 =
  \ @ p1_t2me @ p0_t2mf ds_d1uuq ->
    case ds_d1uuq `cast` ... of _ { :*: ds1_d1uut ds2_d1uuu ->
    case ds1_d1uut of _ { :*: x0_a1oXJ x1_a1oXK ->
    case ds2_d1uuu of _ { :*: x2_a1oXL ds3_d1uuv ->
    case ds3_d1uuv of _ { :*: x3_a1oXM x4_a1oXN ->
    ImportF_
      (x0_a1oXJ `cast` ...)
      (x1_a1oXK `cast` ...)
      (x2_a1oXL `cast` ...)
      (x3_a1oXM `cast` ...)
      (x4_a1oXN `cast` ...)
    }
    }
    }
    }

$fGeneric0ImportF__$crep0
$fGeneric0ImportF__$crep0 =
  \ @ p1_t2lC @ p0_t2lD ds_d1uua ->
    case ds_d1uua
    of _ { ImportF_ x0_a1oXE x1_a1oXF x2_a1oXG x3_a1oXH x4_a1oXI ->
    (:*:
       (:*: (x0_a1oXE `cast` ...) (x1_a1oXF `cast` ...))
       (:*:
          (x2_a1oXG `cast` ...)
          (:*: (x3_a1oXH `cast` ...) (x4_a1oXI `cast` ...))))
    `cast` ...
    }

$fGeneric0ImportF_
$fGeneric0ImportF_ =
  D:Generic0 $fGeneric0ImportF__$crep0 $fGeneric0ImportF__$cobj0

$fDC0ExportF__$crejoin0
$fDC0ExportF__$crejoin0 =
  \ ds_d1uu7 ->
    case ds_d1uu7
    of _ { ExportF_ x0_a1oXA x1_a1oXB x2_a1oXC x3_a1oXD ->
    (ExportF x0_a1oXA x1_a1oXB x2_a1oXC x3_a1oXD) `cast` ...
    }

$fGeneric0ExportF__$cobj0
$fGeneric0ExportF__$cobj0 =
  \ @ p1_t2ld @ p0_t2le ds_d1utJ ->
    case ds_d1utJ `cast` ... of _ { :*: ds1_d1utM ds2_d1utN ->
    case ds1_d1utM of _ { :*: x0_a1oXw x1_a1oXx ->
    case ds2_d1utN of _ { :*: x2_a1oXy x3_a1oXz ->
    ExportF_
      (x0_a1oXw `cast` ...)
      (x1_a1oXx `cast` ...)
      (x2_a1oXy `cast` ...)
      (x3_a1oXz `cast` ...)
    }
    }
    }

$fGeneric0ExportF__$crep0
$fGeneric0ExportF__$crep0 =
  \ @ p1_t2kI @ p0_t2kJ ds_d1utt ->
    case ds_d1utt
    of _ { ExportF_ x0_a1oXs x1_a1oXt x2_a1oXu x3_a1oXv ->
    (:*:
       (:*: (x0_a1oXs `cast` ...) (x1_a1oXt `cast` ...))
       (:*: (x2_a1oXu `cast` ...) (x3_a1oXv `cast` ...)))
    `cast` ...
    }

$fGeneric0ExportF_
$fGeneric0ExportF_ =
  D:Generic0 $fGeneric0ExportF__$crep0 $fGeneric0ExportF__$cobj0

$fDT0Foreign_$cdisband0
$fDT0Foreign_$cdisband0 =
  \ @ p1_t2km @ p0_t2kn ds_d1ut5 ->
    case ds_d1ut5 of _ {
      ImportF x0_a1oXj x1_a1oXk x2_a1oXl x3_a1oXm x4_a1oXn ->
        (L ((ImportF_ x0_a1oXj x1_a1oXk x2_a1oXl x3_a1oXm x4_a1oXn)
            `cast` ...))
        `cast` ...;
      ExportF x0_a1oXo x1_a1oXp x2_a1oXq x3_a1oXr ->
        (R ((ExportF_ x0_a1oXo x1_a1oXp x2_a1oXq x3_a1oXr) `cast` ...))
        `cast` ...
    }

$fDT0Foreign1
$fDT0Foreign1 =
  \ @ p1_X21C @ p0_X21E ds_Xg3F ->
    case ds_Xg3F of _ {
      L x_ae6I ->
        case x_ae6I `cast` ...
        of _ { ImportF_ x0_a1oXO x1_a1oXP x2_a1oXQ x3_a1oXR x4_a1oXS ->
        ImportF x0_a1oXO x1_a1oXP x2_a1oXQ x3_a1oXR x4_a1oXS
        };
      R x_ae6J ->
        case x_ae6J `cast` ...
        of _ { ExportF_ x0_a1oXA x1_a1oXB x2_a1oXC x3_a1oXD ->
        ExportF x0_a1oXA x1_a1oXB x2_a1oXC x3_a1oXD
        }
    }

$fDT0Foreign_$dReband0
$fDT0Foreign_$dReband0 = $fDT0Foreign1 `cast` ...

$fDT0Foreign
$fDT0Foreign =
  D:DT0 ($fDT0Foreign1 `cast` ...) $fDT0Foreign_$cdisband0

$fDC0ExportF_
$fDC0ExportF_ =
  D:DC0
    $fGeneric0ExportF_
    ($fDT0Foreign `cast` ...)
    $fDC0ExportF__$crejoin0

$fDC0ImportF_
$fDC0ImportF_ =
  D:DC0
    $fGeneric0ImportF_
    ($fDT0Foreign `cast` ...)
    $fDC0ImportF__$crejoin0

$fDC0InfixL__$crejoin0
$fDC0InfixL__$crejoin0 =
  \ ds_d1ut1 -> case ds_d1ut1 of _ { InfixL_ -> InfixL `cast` ... }

$fGeneric0InfixL__$cobj0
$fGeneric0InfixL__$cobj0 = \ @ p1_t2gs @ p0_t2gt _ -> InfixL_

$fGeneric0InfixL__$crep0
$fGeneric0InfixL__$crep0 =
  \ @ p1_t2gj @ p0_t2gk ds_d1usr ->
    case ds_d1usr of _ { InfixL_ -> (U) `cast` ... }

$fGeneric0InfixL_
$fGeneric0InfixL_ =
  D:Generic0 $fGeneric0InfixL__$crep0 $fGeneric0InfixL__$cobj0

$fDC0InfixR__$crejoin0
$fDC0InfixR__$crejoin0 =
  \ ds_d1uso -> case ds_d1uso of _ { InfixR_ -> InfixR `cast` ... }

$fGeneric0InfixR__$cobj0
$fGeneric0InfixR__$cobj0 = \ @ p1_t2gc @ p0_t2gd _ -> InfixR_

$fGeneric0InfixR__$crep0
$fGeneric0InfixR__$crep0 =
  \ @ p1_t2g3 @ p0_t2g4 ds_d1urO ->
    case ds_d1urO of _ { InfixR_ -> (U) `cast` ... }

$fGeneric0InfixR_
$fGeneric0InfixR_ =
  D:Generic0 $fGeneric0InfixR__$crep0 $fGeneric0InfixR__$cobj0

$fDC0InfixN__$crejoin0
$fDC0InfixN__$crejoin0 =
  \ ds_d1urL -> case ds_d1urL of _ { InfixN_ -> InfixN `cast` ... }

$fGeneric0InfixN__$cobj0
$fGeneric0InfixN__$cobj0 = \ @ p1_t2fW @ p0_t2fX _ -> InfixN_

$fGeneric0InfixN__$crep0
$fGeneric0InfixN__$crep0 =
  \ @ p1_t2fN @ p0_t2fO ds_d1urb ->
    case ds_d1urb of _ { InfixN_ -> (U) `cast` ... }

$fGeneric0InfixN_
$fGeneric0InfixN_ =
  D:Generic0 $fGeneric0InfixN__$crep0 $fGeneric0InfixN__$cobj0

$fDT0FixityDirection5
$fDT0FixityDirection5 =
  \ @ p1_t2f3 @ p0_t2f4 -> L (InfixL_ `cast` ...)

$fDT0FixityDirection4
$fDT0FixityDirection4 =
  \ @ p1_t2f3 @ p0_t2f4 -> L (InfixR_ `cast` ...)

$fDT0FixityDirection3
$fDT0FixityDirection3 =
  \ @ p1_t2f3 @ p0_t2f4 -> R ($fDT0FixityDirection4)

$fDT0FixityDirection2
$fDT0FixityDirection2 =
  \ @ p1_t2f3 @ p0_t2f4 -> R (InfixN_ `cast` ...)

$fDT0FixityDirection1
$fDT0FixityDirection1 =
  \ @ p1_t2f3 @ p0_t2f4 -> R ($fDT0FixityDirection2)

$fDT0FixityDirection_$cdisband0
$fDT0FixityDirection_$cdisband0 =
  \ @ p1_t2f3 @ p0_t2f4 ds_d1uqw ->
    case ds_d1uqw of _ {
      InfixL -> ($fDT0FixityDirection5) `cast` ...;
      InfixR -> ($fDT0FixityDirection3) `cast` ...;
      InfixN -> ($fDT0FixityDirection1) `cast` ...
    }

$fDT0FixityDirection6
$fDT0FixityDirection6 =
  \ @ p1_X22B @ p0_X22D ds_Xg4E ->
    case ds_Xg4E of _ {
      L x_ae6I -> case x_ae6I of _ { __DEFAULT -> InfixL };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I -> case x1_ae6I of _ { __DEFAULT -> InfixR };
          R x1_XfZz -> case x1_XfZz of _ { __DEFAULT -> InfixN }
        }
    }

$fDT0FixityDirection_$dReband0
$fDT0FixityDirection_$dReband0 = $fDT0FixityDirection6 `cast` ...

$fDT0FixityDirection
$fDT0FixityDirection =
  D:DT0
    ($fDT0FixityDirection6 `cast` ...) $fDT0FixityDirection_$cdisband0

$fDC0InfixN_
$fDC0InfixN_ =
  D:DC0
    $fGeneric0InfixN_
    ($fDT0FixityDirection `cast` ...)
    $fDC0InfixN__$crejoin0

$fDC0InfixR_
$fDC0InfixR_ =
  D:DC0
    $fGeneric0InfixR_
    ($fDT0FixityDirection `cast` ...)
    $fDC0InfixR__$crejoin0

$fDC0InfixL_
$fDC0InfixL_ =
  D:DC0
    $fGeneric0InfixL_
    ($fDT0FixityDirection `cast` ...)
    $fDC0InfixL__$crejoin0

$wa82
$wa82 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $wa65

$fMinCtors*FixityDirection1
$fMinCtors*FixityDirection1 = \ _ -> $wa82

$fMinCtors*FixityDirection_$cminCtors
$fMinCtors*FixityDirection_$cminCtors =
  $fMinCtors*FixityDirection1 `cast` ...

$fMinCtors*FixityDirection
$fMinCtors*FixityDirection = $fMinCtors*FixityDirection1 `cast` ...

$fMinCtors*Body931
$fMinCtors*Body931 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $wa65

$fMinCtors*Body930
$fMinCtors*Body930 =
  addMinima1
    ($fMinCtors(->)S3 `cast` ...) ($fMinCtors*Body931 `cast` ...)

$wa64
$wa64 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body930 `cast` ...)

$fMinCtors*Fixity2
$fMinCtors*Fixity2 = \ _ -> $wa64

$fDC0Fixity__$crejoin0
$fDC0Fixity__$crejoin0 =
  \ ds_d1uqr ->
    case ds_d1uqr of _ { Fixity_ x0_a1oUl x1_a1oUm ->
    (Fixity x0_a1oUl x1_a1oUm) `cast` ...
    }

$fGeneric0Fixity__$cobj0
$fGeneric0Fixity__$cobj0 =
  \ @ p1_t2aa @ p0_t2ab ds_d1uq7 ->
    case ds_d1uq7 `cast` ... of _ { :*: x0_a1oUj x1_a1oUk ->
    Fixity_ (x0_a1oUj `cast` ...) (x1_a1oUk `cast` ...)
    }

$fGeneric0Fixity__$crep0
$fGeneric0Fixity__$crep0 =
  \ @ p1_t29T @ p0_t29U ds_d1upR ->
    case ds_d1upR of _ { Fixity_ x0_a1oUh x1_a1oUi ->
    (:*: (x0_a1oUh `cast` ...) (x1_a1oUi `cast` ...)) `cast` ...
    }

$fGeneric0Fixity_
$fGeneric0Fixity_ =
  D:Generic0 $fGeneric0Fixity__$crep0 $fGeneric0Fixity__$cobj0

$fDT0Fixity_$cdisband0
$fDT0Fixity_$cdisband0 =
  \ @ p1_t29O @ p0_t29P ds_d1upH ->
    case ds_d1upH of _ { Fixity x0_a1oUf x1_a1oUg ->
    (Fixity_ x0_a1oUf x1_a1oUg) `cast` ...
    }

$fDT0Fixity1
$fDT0Fixity1 =
  \ @ p1_X23w @ p0_X23y ds_Xg5q ->
    case ds_Xg5q `cast` ... of _ { Fixity_ x0_a1oUl x1_a1oUm ->
    Fixity x0_a1oUl x1_a1oUm
    }

$fDT0Fixity_$dReband0
$fDT0Fixity_$dReband0 = $fDT0Fixity1 `cast` ...

$fDT0Fixity
$fDT0Fixity =
  D:DT0 ($fDT0Fixity1 `cast` ...) $fDT0Fixity_$cdisband0

$fDC0Fixity_
$fDC0Fixity_ =
  D:DC0
    $fGeneric0Fixity_ ($fDT0Fixity `cast` ...) $fDC0Fixity__$crejoin0

$fMinCtors*Fixity1
$fMinCtors*Fixity1 = \ _ -> $wa64

$fMinCtors*Fixity_$cminCtors
$fMinCtors*Fixity_$cminCtors = $fMinCtors*Fixity1 `cast` ...

$fMinCtors*Fixity
$fMinCtors*Fixity = $fMinCtors*Fixity1 `cast` ...

$fDC0TypeFam__$crejoin0
$fDC0TypeFam__$crejoin0 =
  \ ds_d1upE -> case ds_d1upE of _ { TypeFam_ -> TypeFam `cast` ... }

$fGeneric0TypeFam__$cobj0
$fGeneric0TypeFam__$cobj0 = \ @ p1_t27Z @ p0_t280 _ -> TypeFam_

$fGeneric0TypeFam__$crep0
$fGeneric0TypeFam__$crep0 =
  \ @ p1_t27Q @ p0_t27R ds_d1up4 ->
    case ds_d1up4 of _ { TypeFam_ -> (U) `cast` ... }

$fGeneric0TypeFam_
$fGeneric0TypeFam_ =
  D:Generic0 $fGeneric0TypeFam__$crep0 $fGeneric0TypeFam__$cobj0

$fDC0DataFam__$crejoin0
$fDC0DataFam__$crejoin0 =
  \ ds_d1up1 -> case ds_d1up1 of _ { DataFam_ -> DataFam `cast` ... }

$fGeneric0DataFam__$cobj0
$fGeneric0DataFam__$cobj0 = \ @ p1_t27J @ p0_t27K _ -> DataFam_

$fGeneric0DataFam__$crep0
$fGeneric0DataFam__$crep0 =
  \ @ p1_t27A @ p0_t27B ds_d1uor ->
    case ds_d1uor of _ { DataFam_ -> (U) `cast` ... }

$fGeneric0DataFam_
$fGeneric0DataFam_ =
  D:Generic0 $fGeneric0DataFam__$crep0 $fGeneric0DataFam__$cobj0

$fDT0FamFlavour2
$fDT0FamFlavour2 = \ @ p1_t27e @ p0_t27f -> L (TypeFam_ `cast` ...)

$fDT0FamFlavour1
$fDT0FamFlavour1 = \ @ p1_t27e @ p0_t27f -> R (DataFam_ `cast` ...)

$fDT0FamFlavour_$cdisband0
$fDT0FamFlavour_$cdisband0 =
  \ @ p1_t27e @ p0_t27f ds_d1uo3 ->
    case ds_d1uo3 of _ {
      TypeFam -> ($fDT0FamFlavour2) `cast` ...;
      DataFam -> ($fDT0FamFlavour1) `cast` ...
    }

$fDT0FamFlavour3
$fDT0FamFlavour3 =
  \ @ p1_X24c @ p0_X24e ds_Xg6f ->
    case ds_Xg6f of _ {
      L x_ae6I -> case x_ae6I of _ { __DEFAULT -> TypeFam };
      R x_ae6J -> case x_ae6J of _ { __DEFAULT -> DataFam }
    }

$fDT0FamFlavour_$dReband0
$fDT0FamFlavour_$dReband0 = $fDT0FamFlavour3 `cast` ...

$fDT0FamFlavour
$fDT0FamFlavour =
  D:DT0 ($fDT0FamFlavour3 `cast` ...) $fDT0FamFlavour_$cdisband0

$fDC0DataFam_
$fDC0DataFam_ =
  D:DC0
    $fGeneric0DataFam_
    ($fDT0FamFlavour `cast` ...)
    $fDC0DataFam__$crejoin0

$fDC0TypeFam_
$fDC0TypeFam_ =
  D:DC0
    $fGeneric0TypeFam_
    ($fDT0FamFlavour `cast` ...)
    $fDC0TypeFam__$crejoin0

$wa81
$wa81 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body117

$fMinCtors*FamFlavour1
$fMinCtors*FamFlavour1 = \ _ -> $wa81

$fMinCtors*FamFlavour_$cminCtors
$fMinCtors*FamFlavour_$cminCtors =
  $fMinCtors*FamFlavour1 `cast` ...

$fMinCtors*FamFlavour
$fMinCtors*FamFlavour = $fMinCtors*FamFlavour1 `cast` ...

$fDC0CharL__$crejoin0
$fDC0CharL__$crejoin0 =
  \ ds_d1unZ ->
    case ds_d1unZ of _ { CharL_ x0_a1oO5 ->
    (CharL x0_a1oO5) `cast` ...
    }

$fGeneric0CharL__$cobj0
$fGeneric0CharL__$cobj0 =
  \ @ p1_t23N @ p0_t23O ds_d1unH -> CharL_ (ds_d1unH `cast` ...)

$fGeneric0CharL__$crep0
$fGeneric0CharL__$crep0 =
  \ @ p1_t23D @ p0_t23E ds_d1unr ->
    case ds_d1unr of _ { CharL_ x0_a1oO3 -> x0_a1oO3 `cast` ... }

$fGeneric0CharL_
$fGeneric0CharL_ =
  D:Generic0 $fGeneric0CharL__$crep0 $fGeneric0CharL__$cobj0

$fDC0StringL__$crejoin0
$fDC0StringL__$crejoin0 =
  \ ds_d1uno ->
    case ds_d1uno of _ { StringL_ x0_a1oO2 ->
    (StringL x0_a1oO2) `cast` ...
    }

$fGeneric0StringL__$cobj0
$fGeneric0StringL__$cobj0 =
  \ @ p1_t23t @ p0_t23u ds_d1un6 -> StringL_ (ds_d1un6 `cast` ...)

$fGeneric0StringL__$crep0
$fGeneric0StringL__$crep0 =
  \ @ p1_t23j @ p0_t23k ds_d1umQ ->
    case ds_d1umQ of _ { StringL_ x0_a1oO0 -> x0_a1oO0 `cast` ... }

$fGeneric0StringL_
$fGeneric0StringL_ =
  D:Generic0 $fGeneric0StringL__$crep0 $fGeneric0StringL__$cobj0

$fDC0IntegerL__$crejoin0
$fDC0IntegerL__$crejoin0 =
  \ ds_d1umN ->
    case ds_d1umN of _ { IntegerL_ x0_a1oNZ ->
    (IntegerL x0_a1oNZ) `cast` ...
    }

$fGeneric0IntegerL__$cobj0
$fGeneric0IntegerL__$cobj0 =
  \ @ p1_t239 @ p0_t23a ds_d1umv -> IntegerL_ (ds_d1umv `cast` ...)

$fGeneric0IntegerL__$crep0
$fGeneric0IntegerL__$crep0 =
  \ @ p1_t22Z @ p0_t230 ds_d1umf ->
    case ds_d1umf of _ { IntegerL_ x0_a1oNX -> x0_a1oNX `cast` ... }

$fGeneric0IntegerL_
$fGeneric0IntegerL_ =
  D:Generic0 $fGeneric0IntegerL__$crep0 $fGeneric0IntegerL__$cobj0

$fDC0RationalL__$crejoin0
$fDC0RationalL__$crejoin0 =
  \ ds_d1umc ->
    case ds_d1umc of _ { RationalL_ x0_a1oNW ->
    (RationalL x0_a1oNW) `cast` ...
    }

$fGeneric0RationalL__$cobj0
$fGeneric0RationalL__$cobj0 =
  \ @ p1_t22P @ p0_t22Q ds_d1ulU -> RationalL_ (ds_d1ulU `cast` ...)

$fGeneric0RationalL__$crep0
$fGeneric0RationalL__$crep0 =
  \ @ p1_t22F @ p0_t22G ds_d1ulE ->
    case ds_d1ulE of _ { RationalL_ x0_a1oNU -> x0_a1oNU `cast` ... }

$fGeneric0RationalL_
$fGeneric0RationalL_ =
  D:Generic0 $fGeneric0RationalL__$crep0 $fGeneric0RationalL__$cobj0

$fDC0IntPrimL__$crejoin0
$fDC0IntPrimL__$crejoin0 =
  \ ds_d1ulB ->
    case ds_d1ulB of _ { IntPrimL_ x0_a1oNT ->
    (IntPrimL x0_a1oNT) `cast` ...
    }

$fGeneric0IntPrimL__$cobj0
$fGeneric0IntPrimL__$cobj0 =
  \ @ p1_t22v @ p0_t22w ds_d1ulj -> IntPrimL_ (ds_d1ulj `cast` ...)

$fGeneric0IntPrimL__$crep0
$fGeneric0IntPrimL__$crep0 =
  \ @ p1_t22l @ p0_t22m ds_d1ul3 ->
    case ds_d1ul3 of _ { IntPrimL_ x0_a1oNR -> x0_a1oNR `cast` ... }

$fGeneric0IntPrimL_
$fGeneric0IntPrimL_ =
  D:Generic0 $fGeneric0IntPrimL__$crep0 $fGeneric0IntPrimL__$cobj0

$fDC0WordPrimL__$crejoin0
$fDC0WordPrimL__$crejoin0 =
  \ ds_d1ul0 ->
    case ds_d1ul0 of _ { WordPrimL_ x0_a1oNQ ->
    (WordPrimL x0_a1oNQ) `cast` ...
    }

$fGeneric0WordPrimL__$cobj0
$fGeneric0WordPrimL__$cobj0 =
  \ @ p1_t22b @ p0_t22c ds_d1ukI -> WordPrimL_ (ds_d1ukI `cast` ...)

$fGeneric0WordPrimL__$crep0
$fGeneric0WordPrimL__$crep0 =
  \ @ p1_t221 @ p0_t222 ds_d1uks ->
    case ds_d1uks of _ { WordPrimL_ x0_a1oNO -> x0_a1oNO `cast` ... }

$fGeneric0WordPrimL_
$fGeneric0WordPrimL_ =
  D:Generic0 $fGeneric0WordPrimL__$crep0 $fGeneric0WordPrimL__$cobj0

$fDC0FloatPrimL__$crejoin0
$fDC0FloatPrimL__$crejoin0 =
  \ ds_d1ukp ->
    case ds_d1ukp of _ { FloatPrimL_ x0_a1oNN ->
    (FloatPrimL x0_a1oNN) `cast` ...
    }

$fGeneric0FloatPrimL__$cobj0
$fGeneric0FloatPrimL__$cobj0 =
  \ @ p1_t21R @ p0_t21S ds_d1uk7 -> FloatPrimL_ (ds_d1uk7 `cast` ...)

$fGeneric0FloatPrimL__$crep0
$fGeneric0FloatPrimL__$crep0 =
  \ @ p1_t21H @ p0_t21I ds_d1ujR ->
    case ds_d1ujR of _ { FloatPrimL_ x0_a1oNL -> x0_a1oNL `cast` ... }

$fGeneric0FloatPrimL_
$fGeneric0FloatPrimL_ =
  D:Generic0
    $fGeneric0FloatPrimL__$crep0 $fGeneric0FloatPrimL__$cobj0

$fDC0DoublePrimL__$crejoin0
$fDC0DoublePrimL__$crejoin0 =
  \ ds_d1ujO ->
    case ds_d1ujO of _ { DoublePrimL_ x0_a1oNK ->
    (DoublePrimL x0_a1oNK) `cast` ...
    }

$fGeneric0DoublePrimL__$cobj0
$fGeneric0DoublePrimL__$cobj0 =
  \ @ p1_t21x @ p0_t21y ds_d1ujw ->
    DoublePrimL_ (ds_d1ujw `cast` ...)

$fGeneric0DoublePrimL__$crep0
$fGeneric0DoublePrimL__$crep0 =
  \ @ p1_t21n @ p0_t21o ds_d1ujg ->
    case ds_d1ujg of _ { DoublePrimL_ x0_a1oNI -> x0_a1oNI `cast` ... }

$fGeneric0DoublePrimL_
$fGeneric0DoublePrimL_ =
  D:Generic0
    $fGeneric0DoublePrimL__$crep0 $fGeneric0DoublePrimL__$cobj0

$fDC0StringPrimL__$crejoin0
$fDC0StringPrimL__$crejoin0 =
  \ ds_d1ujd ->
    case ds_d1ujd of _ { StringPrimL_ x0_a1oNH ->
    (StringPrimL x0_a1oNH) `cast` ...
    }

$fGeneric0StringPrimL__$cobj0
$fGeneric0StringPrimL__$cobj0 =
  \ @ p1_t21d @ p0_t21e ds_d1uiV ->
    StringPrimL_ (ds_d1uiV `cast` ...)

$fGeneric0StringPrimL__$crep0
$fGeneric0StringPrimL__$crep0 =
  \ @ p1_t213 @ p0_t214 ds_d1uiF ->
    case ds_d1uiF of _ { StringPrimL_ x0_a1oNF -> x0_a1oNF `cast` ... }

$fGeneric0StringPrimL_
$fGeneric0StringPrimL_ =
  D:Generic0
    $fGeneric0StringPrimL__$crep0 $fGeneric0StringPrimL__$cobj0

$fDT0Lit_$cdisband0
$fDT0Lit_$cdisband0 =
  \ @ p1_t1Xj @ p0_t1Xk ds_d1ug4 ->
    case ds_d1ug4 of _ {
      CharL x0_a1oNw ->
        (L (L (L ((CharL_ x0_a1oNw) `cast` ...)))) `cast` ...;
      StringL x0_a1oNx ->
        (L (L (R ((StringL_ x0_a1oNx) `cast` ...)))) `cast` ...;
      IntegerL x0_a1oNy ->
        (L (R (L ((IntegerL_ x0_a1oNy) `cast` ...)))) `cast` ...;
      RationalL x0_a1oNz ->
        (L (R (R ((RationalL_ x0_a1oNz) `cast` ...)))) `cast` ...;
      IntPrimL x0_a1oNA ->
        (R (L (L ((IntPrimL_ x0_a1oNA) `cast` ...)))) `cast` ...;
      WordPrimL x0_a1oNB ->
        (R (L (R ((WordPrimL_ x0_a1oNB) `cast` ...)))) `cast` ...;
      FloatPrimL x0_a1oNC ->
        (R (R (L ((FloatPrimL_ x0_a1oNC) `cast` ...)))) `cast` ...;
      DoublePrimL x0_a1oND ->
        (R (R (R (L ((DoublePrimL_ x0_a1oND) `cast` ...))))) `cast` ...;
      StringPrimL x0_a1oNE ->
        (R (R (R (R ((StringPrimL_ x0_a1oNE) `cast` ...))))) `cast` ...
    }

$fDT0Lit1
$fDT0Lit1 =
  \ @ p1_X27N @ p0_X27P ds_Xg9Q ->
    case ds_Xg9Q of _ {
      L x_ae6I ->
        case x_ae6I of _ {
          L x1_XeUZ ->
            case x1_XeUZ of _ {
              L x2_Xi2y ->
                case x2_Xi2y `cast` ... of _ { CharL_ x0_a1oO5 -> CharL x0_a1oO5 };
              R x2_ae6J ->
                case x2_ae6J `cast` ... of _ { StringL_ x0_a1oO2 ->
                StringL x0_a1oO2
                }
            };
          R x1_ae6J ->
            case x1_ae6J of _ {
              L x2_XeV3 ->
                case x2_XeV3 `cast` ... of _ { IntegerL_ x0_a1oNZ ->
                IntegerL x0_a1oNZ
                };
              R x2_Xi2z ->
                case x2_Xi2z `cast` ... of _ { RationalL_ x0_a1oNW ->
                RationalL x0_a1oNW
                }
            }
        };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I ->
            case x1_ae6I of _ {
              L x2_Xg3M ->
                case x2_Xg3M `cast` ... of _ { IntPrimL_ x0_a1oNT ->
                IntPrimL x0_a1oNT
                };
              R x2_XeV4 ->
                case x2_XeV4 `cast` ... of _ { WordPrimL_ x0_a1oNQ ->
                WordPrimL x0_a1oNQ
                }
            };
          R x1_XeV0 ->
            case x1_XeV0 of _ {
              L x2_ae6I ->
                case x2_ae6I `cast` ... of _ { FloatPrimL_ x0_a1oNN ->
                FloatPrimL x0_a1oNN
                };
              R x2_XeV4 ->
                case x2_XeV4 of _ {
                  L x3_ae6I ->
                    case x3_ae6I `cast` ... of _ { DoublePrimL_ x0_a1oNK ->
                    DoublePrimL x0_a1oNK
                    };
                  R x3_Xg3j ->
                    case x3_Xg3j `cast` ... of _ { StringPrimL_ x0_a1oNH ->
                    StringPrimL x0_a1oNH
                    }
                }
            }
        }
    }

$fDT0Lit_$dReband0
$fDT0Lit_$dReband0 = $fDT0Lit1 `cast` ...

$fDT0Lit
$fDT0Lit = D:DT0 ($fDT0Lit1 `cast` ...) $fDT0Lit_$cdisband0

$fDC0StringPrimL_
$fDC0StringPrimL_ =
  D:DC0
    $fGeneric0StringPrimL_
    ($fDT0Lit `cast` ...)
    $fDC0StringPrimL__$crejoin0

$fDC0DoublePrimL_
$fDC0DoublePrimL_ =
  D:DC0
    $fGeneric0DoublePrimL_
    ($fDT0Lit `cast` ...)
    $fDC0DoublePrimL__$crejoin0

$fDC0FloatPrimL_
$fDC0FloatPrimL_ =
  D:DC0
    $fGeneric0FloatPrimL_
    ($fDT0Lit `cast` ...)
    $fDC0FloatPrimL__$crejoin0

$fDC0WordPrimL_
$fDC0WordPrimL_ =
  D:DC0
    $fGeneric0WordPrimL_
    ($fDT0Lit `cast` ...)
    $fDC0WordPrimL__$crejoin0

$fDC0IntPrimL_
$fDC0IntPrimL_ =
  D:DC0
    $fGeneric0IntPrimL_ ($fDT0Lit `cast` ...) $fDC0IntPrimL__$crejoin0

$fDC0RationalL_
$fDC0RationalL_ =
  D:DC0
    $fGeneric0RationalL_
    ($fDT0Lit `cast` ...)
    $fDC0RationalL__$crejoin0

$fDC0IntegerL_
$fDC0IntegerL_ =
  D:DC0
    $fGeneric0IntegerL_ ($fDT0Lit `cast` ...) $fDC0IntegerL__$crejoin0

$fDC0StringL_
$fDC0StringL_ =
  D:DC0
    $fGeneric0StringL_ ($fDT0Lit `cast` ...) $fDC0StringL__$crejoin0

$fDC0CharL_
$fDC0CharL_ =
  D:DC0 $fGeneric0CharL_ ($fDT0Lit `cast` ...) $fDC0CharL__$crejoin0

$wa32
$wa32 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $wa34
    $wa33

$fMinCtors*Lit1
$fMinCtors*Lit1 = \ _ -> $wa32

$fMinCtors*Lit_$cminCtors
$fMinCtors*Lit_$cminCtors = $fMinCtors*Lit1 `cast` ...

$fMinCtors*Lit
$fMinCtors*Lit = $fMinCtors*Lit1 `cast` ...

$fMinCtors*Body128
$fMinCtors*Body128 =
  VCons
    @~ <(':) * Stmt ('[] *)> ($fMinCtors(->)(,)3 `cast` ...) ($WVNil)

$fMinCtors*Body537
$fMinCtors*Body537 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body536
$fMinCtors*Body536 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body537

$fMinCtors*Body535
$fMinCtors*Body535 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body536

$fMinCtors*Body534
$fMinCtors*Body534 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body535

$fMinCtors*Body533
$fMinCtors*Body533 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body534

$fMinCtors*Body532
$fMinCtors*Body532 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body533

$fMinCtors*Body531
$fMinCtors*Body531 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body532

$fMinCtors*Body530
$fMinCtors*Body530 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body531

$fMinCtors*Body529
$fMinCtors*Body529 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body530

$fMinCtors*Body528
$fMinCtors*Body528 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body529 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body511
$fMinCtors*Body511 = map (id) $wa32

$wa31
$wa31 = mapKeysMonotonic $fMinCtors*Body528 $fMinCtors*Body511

a1_r1Flq
a1_r1Flq = \ _ _ -> $wa31

$fMinCtors*Body510
$fMinCtors*Body510 = a1_r1Flq `cast` ...

lvl19_r1Flr
lvl19_r1Flr = map ($fEnumInt_$csucc `cast` ...) $wa31

$fMinCtors*Body714
$fMinCtors*Body714 = \ _ _ -> lvl19_r1Flr

$fMinCtors*Body688
$fMinCtors*Body688 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body714 `cast` ...)
    ($fMinCtors*Body689 `cast` ...)

$fMinCtors*Body509
$fMinCtors*Body509 = \ _ _ -> lvl19_r1Flr

$fDC0NoInline__$crejoin0
$fDC0NoInline__$crejoin0 =
  \ ds_d1ufT ->
    case ds_d1ufT of _ { NoInline_ -> NoInline `cast` ... }

$fGeneric0NoInline__$cobj0
$fGeneric0NoInline__$cobj0 = \ @ p1_t1HC @ p0_t1HD _ -> NoInline_

$fGeneric0NoInline__$crep0
$fGeneric0NoInline__$crep0 =
  \ @ p1_t1Ht @ p0_t1Hu ds_d1ufj ->
    case ds_d1ufj of _ { NoInline_ -> (U) `cast` ... }

$fGeneric0NoInline_
$fGeneric0NoInline_ =
  D:Generic0 $fGeneric0NoInline__$crep0 $fGeneric0NoInline__$cobj0

$fDC0Inline__$crejoin0
$fDC0Inline__$crejoin0 =
  \ ds_d1ufg -> case ds_d1ufg of _ { Inline_ -> Inline `cast` ... }

$fGeneric0Inline__$cobj0
$fGeneric0Inline__$cobj0 = \ @ p1_t1Hm @ p0_t1Hn _ -> Inline_

$fGeneric0Inline__$crep0
$fGeneric0Inline__$crep0 =
  \ @ p1_t1Hd @ p0_t1He ds_d1ueG ->
    case ds_d1ueG of _ { Inline_ -> (U) `cast` ... }

$fGeneric0Inline_
$fGeneric0Inline_ =
  D:Generic0 $fGeneric0Inline__$crep0 $fGeneric0Inline__$cobj0

$fDC0Inlinable__$crejoin0
$fDC0Inlinable__$crejoin0 =
  \ ds_d1ueD ->
    case ds_d1ueD of _ { Inlinable_ -> Inlinable `cast` ... }

$fGeneric0Inlinable__$cobj0
$fGeneric0Inlinable__$cobj0 = \ @ p1_t1H6 @ p0_t1H7 _ -> Inlinable_

$fGeneric0Inlinable__$crep0
$fGeneric0Inlinable__$crep0 =
  \ @ p1_t1GX @ p0_t1GY ds_d1ue3 ->
    case ds_d1ue3 of _ { Inlinable_ -> (U) `cast` ... }

$fGeneric0Inlinable_
$fGeneric0Inlinable_ =
  D:Generic0 $fGeneric0Inlinable__$crep0 $fGeneric0Inlinable__$cobj0

$fDT0Inline5
$fDT0Inline5 = \ @ p1_t1Gd @ p0_t1Ge -> L (NoInline_ `cast` ...)

$fDT0Inline4
$fDT0Inline4 = \ @ p1_t1Gd @ p0_t1Ge -> L (Inline_ `cast` ...)

$fDT0Inline3
$fDT0Inline3 = \ @ p1_t1Gd @ p0_t1Ge -> R ($fDT0Inline4)

$fDT0Inline2
$fDT0Inline2 = \ @ p1_t1Gd @ p0_t1Ge -> R (Inlinable_ `cast` ...)

$fDT0Inline1
$fDT0Inline1 = \ @ p1_t1Gd @ p0_t1Ge -> R ($fDT0Inline2)

$fDT0Inline_$cdisband0
$fDT0Inline_$cdisband0 =
  \ @ p1_t1Gd @ p0_t1Ge ds_d1udo ->
    case ds_d1udo of _ {
      NoInline -> ($fDT0Inline5) `cast` ...;
      Inline -> ($fDT0Inline3) `cast` ...;
      Inlinable -> ($fDT0Inline1) `cast` ...
    }

$fDT0Inline6
$fDT0Inline6 =
  \ @ p1_X29o @ p0_X29q ds_Xgbr ->
    case ds_Xgbr of _ {
      L x_ae6I -> case x_ae6I of _ { __DEFAULT -> NoInline };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I -> case x1_ae6I of _ { __DEFAULT -> Inline };
          R x1_Xg6m -> case x1_Xg6m of _ { __DEFAULT -> Inlinable }
        }
    }

$fDT0Inline_$dReband0
$fDT0Inline_$dReband0 = $fDT0Inline6 `cast` ...

$fDT0Inline
$fDT0Inline =
  D:DT0 ($fDT0Inline6 `cast` ...) $fDT0Inline_$cdisband0

$fDC0Inlinable_
$fDC0Inlinable_ =
  D:DC0
    $fGeneric0Inlinable_
    ($fDT0Inline `cast` ...)
    $fDC0Inlinable__$crejoin0

$fDC0Inline_
$fDC0Inline_ =
  D:DC0
    $fGeneric0Inline_ ($fDT0Inline `cast` ...) $fDC0Inline__$crejoin0

$fDC0NoInline_
$fDC0NoInline_ =
  D:DC0
    $fGeneric0NoInline_
    ($fDT0Inline `cast` ...)
    $fDC0NoInline__$crejoin0

$wa83
$wa83 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $wa21

$fMinCtors*Inline1
$fMinCtors*Inline1 = \ _ -> $wa83

$fMinCtors*Inline_$cminCtors
$fMinCtors*Inline_$cminCtors = $fMinCtors*Inline1 `cast` ...

$fMinCtors*Inline
$fMinCtors*Inline = $fMinCtors*Inline1 `cast` ...

$fDC0ConLike__$crejoin0
$fDC0ConLike__$crejoin0 =
  \ ds_d1udj -> case ds_d1udj of _ { ConLike_ -> ConLike `cast` ... }

$fGeneric0ConLike__$cobj0
$fGeneric0ConLike__$cobj0 = \ @ p1_t1Ba @ p0_t1Bb _ -> ConLike_

$fGeneric0ConLike__$crep0
$fGeneric0ConLike__$crep0 =
  \ @ p1_t1B1 @ p0_t1B2 ds_d1ucJ ->
    case ds_d1ucJ of _ { ConLike_ -> (U) `cast` ... }

$fGeneric0ConLike_
$fGeneric0ConLike_ =
  D:Generic0 $fGeneric0ConLike__$crep0 $fGeneric0ConLike__$cobj0

$fDC0FunLike__$crejoin0
$fDC0FunLike__$crejoin0 =
  \ ds_d1ucG -> case ds_d1ucG of _ { FunLike_ -> FunLike `cast` ... }

$fGeneric0FunLike__$cobj0
$fGeneric0FunLike__$cobj0 = \ @ p1_t1AU @ p0_t1AV _ -> FunLike_

$fGeneric0FunLike__$crep0
$fGeneric0FunLike__$crep0 =
  \ @ p1_t1AL @ p0_t1AM ds_d1uc6 ->
    case ds_d1uc6 of _ { FunLike_ -> (U) `cast` ... }

$fGeneric0FunLike_
$fGeneric0FunLike_ =
  D:Generic0 $fGeneric0FunLike__$crep0 $fGeneric0FunLike__$cobj0

$fDT0RuleMatch2
$fDT0RuleMatch2 = \ @ p1_t1Ap @ p0_t1Aq -> L (ConLike_ `cast` ...)

$fDT0RuleMatch1
$fDT0RuleMatch1 = \ @ p1_t1Ap @ p0_t1Aq -> R (FunLike_ `cast` ...)

$fDT0RuleMatch_$cdisband0
$fDT0RuleMatch_$cdisband0 =
  \ @ p1_t1Ap @ p0_t1Aq ds_d1ubI ->
    case ds_d1ubI of _ {
      ConLike -> ($fDT0RuleMatch2) `cast` ...;
      FunLike -> ($fDT0RuleMatch1) `cast` ...
    }

$fDT0RuleMatch3
$fDT0RuleMatch3 =
  \ @ p1_X2aw @ p0_X2ay ds_Xgcz ->
    case ds_Xgcz of _ {
      L x_ae6I -> case x_ae6I of _ { __DEFAULT -> ConLike };
      R x_ae6J -> case x_ae6J of _ { __DEFAULT -> FunLike }
    }

$fDT0RuleMatch_$dReband0
$fDT0RuleMatch_$dReband0 = $fDT0RuleMatch3 `cast` ...

$fDT0RuleMatch
$fDT0RuleMatch =
  D:DT0 ($fDT0RuleMatch3 `cast` ...) $fDT0RuleMatch_$cdisband0

$fDC0FunLike_
$fDC0FunLike_ =
  D:DC0
    $fGeneric0FunLike_
    ($fDT0RuleMatch `cast` ...)
    $fDC0FunLike__$crejoin0

$fDC0ConLike_
$fDC0ConLike_ =
  D:DC0
    $fGeneric0ConLike_
    ($fDT0RuleMatch `cast` ...)
    $fDC0ConLike__$crejoin0

$wa86
$wa86 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body117

$fMinCtors*RuleMatch1
$fMinCtors*RuleMatch1 = \ _ -> $wa86

$fMinCtors*RuleMatch_$cminCtors
$fMinCtors*RuleMatch_$cminCtors = $fMinCtors*RuleMatch1 `cast` ...

$fMinCtors*RuleMatch
$fMinCtors*RuleMatch = $fMinCtors*RuleMatch1 `cast` ...

$fDC0AllPhases__$crejoin0
$fDC0AllPhases__$crejoin0 =
  \ ds_d1ubE ->
    case ds_d1ubE of _ { AllPhases_ -> AllPhases `cast` ... }

$fGeneric0AllPhases__$cobj0
$fGeneric0AllPhases__$cobj0 = \ @ p1_t1x1 @ p0_t1x2 _ -> AllPhases_

$fGeneric0AllPhases__$crep0
$fGeneric0AllPhases__$crep0 =
  \ @ p1_t1wS @ p0_t1wT ds_d1ub4 ->
    case ds_d1ub4 of _ { AllPhases_ -> (U) `cast` ... }

$fGeneric0AllPhases_
$fGeneric0AllPhases_ =
  D:Generic0 $fGeneric0AllPhases__$crep0 $fGeneric0AllPhases__$cobj0

$fDC0FromPhase__$crejoin0
$fDC0FromPhase__$crejoin0 =
  \ ds_d1ub1 ->
    case ds_d1ub1 of _ { FromPhase_ x0_a1oHX ->
    (FromPhase x0_a1oHX) `cast` ...
    }

$fGeneric0FromPhase__$cobj0
$fGeneric0FromPhase__$cobj0 =
  \ @ p1_t1wI @ p0_t1wJ ds_d1uaJ -> FromPhase_ (ds_d1uaJ `cast` ...)

$fGeneric0FromPhase__$crep0
$fGeneric0FromPhase__$crep0 =
  \ @ p1_t1wy @ p0_t1wz ds_d1uat ->
    case ds_d1uat of _ { FromPhase_ x0_a1oHV -> x0_a1oHV `cast` ... }

$fGeneric0FromPhase_
$fGeneric0FromPhase_ =
  D:Generic0 $fGeneric0FromPhase__$crep0 $fGeneric0FromPhase__$cobj0

$fDC0BeforePhase__$crejoin0
$fDC0BeforePhase__$crejoin0 =
  \ ds_d1uaq ->
    case ds_d1uaq of _ { BeforePhase_ x0_a1oHU ->
    (BeforePhase x0_a1oHU) `cast` ...
    }

$fGeneric0BeforePhase__$cobj0
$fGeneric0BeforePhase__$cobj0 =
  \ @ p1_t1wo @ p0_t1wp ds_d1ua8 ->
    BeforePhase_ (ds_d1ua8 `cast` ...)

$fGeneric0BeforePhase__$crep0
$fGeneric0BeforePhase__$crep0 =
  \ @ p1_t1we @ p0_t1wf ds_d1u9S ->
    case ds_d1u9S of _ { BeforePhase_ x0_a1oHS -> x0_a1oHS `cast` ... }

$fGeneric0BeforePhase_
$fGeneric0BeforePhase_ =
  D:Generic0
    $fGeneric0BeforePhase__$crep0 $fGeneric0BeforePhase__$cobj0

$fDT0Phases1
$fDT0Phases1 = \ @ p1_t1vu @ p0_t1vv -> L (AllPhases_ `cast` ...)

$fDT0Phases_$cdisband0
$fDT0Phases_$cdisband0 =
  \ @ p1_t1vu @ p0_t1vv ds_d1u9d ->
    case ds_d1u9d of _ {
      AllPhases -> ($fDT0Phases1) `cast` ...;
      FromPhase x0_a1oHQ ->
        (R (L ((FromPhase_ x0_a1oHQ) `cast` ...))) `cast` ...;
      BeforePhase x0_a1oHR ->
        (R (R ((BeforePhase_ x0_a1oHR) `cast` ...))) `cast` ...
    }

$fDT0Phases2
$fDT0Phases2 =
  \ @ p1_X2bN @ p0_X2bP ds_XgdQ ->
    case ds_XgdQ of _ {
      L x_ae6I -> case x_ae6I of _ { __DEFAULT -> AllPhases };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I ->
            case x1_ae6I `cast` ... of _ { FromPhase_ x0_a1oHX ->
            FromPhase x0_a1oHX
            };
          R x1_XiaN ->
            case x1_XiaN `cast` ... of _ { BeforePhase_ x0_a1oHU ->
            BeforePhase x0_a1oHU
            }
        }
    }

$fDT0Phases_$dReband0
$fDT0Phases_$dReband0 = $fDT0Phases2 `cast` ...

$fDT0Phases
$fDT0Phases =
  D:DT0 ($fDT0Phases2 `cast` ...) $fDT0Phases_$cdisband0

$fDC0BeforePhase_
$fDC0BeforePhase_ =
  D:DC0
    $fGeneric0BeforePhase_
    ($fDT0Phases `cast` ...)
    $fDC0BeforePhase__$crejoin0

$fDC0FromPhase_
$fDC0FromPhase_ =
  D:DC0
    $fGeneric0FromPhase_
    ($fDT0Phases `cast` ...)
    $fDC0FromPhase__$crejoin0

$fDC0AllPhases_
$fDC0AllPhases_ =
  D:DC0
    $fGeneric0AllPhases_
    ($fDT0Phases `cast` ...)
    $fDC0AllPhases__$crejoin0

$wa85
$wa85 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $wa6

$fMinCtors*Phases1
$fMinCtors*Phases1 = \ _ -> $wa85

$fMinCtors*Phases_$cminCtors
$fMinCtors*Phases_$cminCtors = $fMinCtors*Phases1 `cast` ...

$fMinCtors*Phases
$fMinCtors*Phases = $fMinCtors*Phases1 `cast` ...

$fMinCtors*Body127
$fMinCtors*Body127 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body126
$fMinCtors*Body126 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body127

$fMinCtors*Body125
$fMinCtors*Body125 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body126

$fMinCtors*Body124
$fMinCtors*Body124 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body125

$fMinCtors*Body123
$fMinCtors*Body123 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body124

$fMinCtors*Body122
$fMinCtors*Body122 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body123

$fMinCtors*Body121
$fMinCtors*Body121 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body122

$fMinCtors*Body120
$fMinCtors*Body120 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body121

$fMinCtors*Body119
$fMinCtors*Body119 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body120

$fMinCtors*Body118
$fMinCtors*Body118 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body119 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body115
$fMinCtors*Body115 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $wa6

$fMinCtors*Body114
$fMinCtors*Body114 = map (id) $fMinCtors*Body115

$wa5
$wa5 = mapKeysMonotonic $fMinCtors*Body118 $fMinCtors*Body114

$fDC0RuleVar__$crejoin0
$fDC0RuleVar__$crejoin0 =
  \ ds_d1u98 ->
    case ds_d1u98 of _ { RuleVar_ x0_a1oGl ->
    (RuleVar x0_a1oGl) `cast` ...
    }

$fGeneric0RuleVar__$cobj0
$fGeneric0RuleVar__$cobj0 =
  \ @ p1_t1pU @ p0_t1pV ds_d1u8Q -> RuleVar_ (ds_d1u8Q `cast` ...)

$fGeneric0RuleVar__$crep0
$fGeneric0RuleVar__$crep0 =
  \ @ p1_t1pK @ p0_t1pL ds_d1u8A ->
    case ds_d1u8A of _ { RuleVar_ x0_a1oGj -> x0_a1oGj `cast` ... }

$fGeneric0RuleVar_
$fGeneric0RuleVar_ =
  D:Generic0 $fGeneric0RuleVar__$crep0 $fGeneric0RuleVar__$cobj0

$fDC0TypedRuleVar__$crejoin0
$fDC0TypedRuleVar__$crejoin0 =
  \ ds_d1u8x ->
    case ds_d1u8x of _ { TypedRuleVar_ x0_a1oGh x1_a1oGi ->
    (TypedRuleVar x0_a1oGh x1_a1oGi) `cast` ...
    }

$fGeneric0TypedRuleVar__$cobj0
$fGeneric0TypedRuleVar__$cobj0 =
  \ @ p1_t1pv @ p0_t1pw ds_d1u8d ->
    case ds_d1u8d `cast` ... of _ { :*: x0_a1oGf x1_a1oGg ->
    TypedRuleVar_ (x0_a1oGf `cast` ...) (x1_a1oGg `cast` ...)
    }

$fGeneric0TypedRuleVar__$crep0
$fGeneric0TypedRuleVar__$crep0 =
  \ @ p1_t1pe @ p0_t1pf ds_d1u7X ->
    case ds_d1u7X of _ { TypedRuleVar_ x0_a1oGd x1_a1oGe ->
    (:*: (x0_a1oGd `cast` ...) (x1_a1oGe `cast` ...)) `cast` ...
    }

$fGeneric0TypedRuleVar_
$fGeneric0TypedRuleVar_ =
  D:Generic0
    $fGeneric0TypedRuleVar__$crep0 $fGeneric0TypedRuleVar__$cobj0

$fDT0RuleBndr_$cdisband0
$fDT0RuleBndr_$cdisband0 =
  \ @ p1_t1oS @ p0_t1oT ds_d1u7z ->
    case ds_d1u7z of _ {
      RuleVar x0_a1oGa ->
        (L ((RuleVar_ x0_a1oGa) `cast` ...)) `cast` ...;
      TypedRuleVar x0_a1oGb x1_a1oGc ->
        (R ((TypedRuleVar_ x0_a1oGb x1_a1oGc) `cast` ...)) `cast` ...
    }

$fDT0RuleBndr1
$fDT0RuleBndr1 =
  \ @ p1_X2d9 @ p0_X2db ds_Xgfc ->
    case ds_Xgfc of _ {
      L x_ae6I ->
        case x_ae6I `cast` ... of _ { RuleVar_ x0_a1oGl ->
        RuleVar x0_a1oGl
        };
      R x_ae6J ->
        case x_ae6J `cast` ... of _ { TypedRuleVar_ x0_a1oGh x1_a1oGi ->
        TypedRuleVar x0_a1oGh x1_a1oGi
        }
    }

$fDT0RuleBndr_$dReband0
$fDT0RuleBndr_$dReband0 = $fDT0RuleBndr1 `cast` ...

$fDT0RuleBndr
$fDT0RuleBndr =
  D:DT0 ($fDT0RuleBndr1 `cast` ...) $fDT0RuleBndr_$cdisband0

$fDC0TypedRuleVar_
$fDC0TypedRuleVar_ =
  D:DC0
    $fGeneric0TypedRuleVar_
    ($fDT0RuleBndr `cast` ...)
    $fDC0TypedRuleVar__$crejoin0

$fDC0RuleVar_
$fDC0RuleVar_ =
  D:DC0
    $fGeneric0RuleVar_
    ($fDT0RuleBndr `cast` ...)
    $fDC0RuleVar__$crejoin0

$fDC0ClassP__$crejoin0
$fDC0ClassP__$crejoin0 =
  \ ds_d1u7v ->
    case ds_d1u7v of _ { ClassP_ x0_a1ovy x1_a1ovz ->
    (ClassP x0_a1ovy x1_a1ovz) `cast` ...
    }

$fGeneric0ClassP__$cobj0
$fGeneric0ClassP__$cobj0 =
  \ @ p1_t1kH @ p0_t1kI ds_d1u74 ->
    case ds_d1u74 `cast` ... of _ { :*: x0_a1ovv x1_a1ovw ->
    ClassP_
      (x0_a1ovv `cast` ...)
      (map ((unRec3) `cast` ...) (x1_a1ovw `cast` ...))
    }

$fGeneric0ClassP_1
$fGeneric0ClassP_1 = \ tpl_X2ZU -> tpl_X2ZU

$fGeneric0ClassP__$crep0
$fGeneric0ClassP__$crep0 =
  \ @ p1_t1kb @ p0_t1kc ds_d1u6G ->
    case ds_d1u6G of _ { ClassP_ x0_a1ovt x1_a1ovu ->
    (:*:
       (x0_a1ovt `cast` ...)
       ((map ($fGeneric0ClassP_1 `cast` ...) x1_a1ovu) `cast` ...))
    `cast` ...
    }

$fGeneric0ClassP_
$fGeneric0ClassP_ =
  D:Generic0 $fGeneric0ClassP__$crep0 $fGeneric0ClassP__$cobj0

$fDC0EqualP__$crejoin0
$fDC0EqualP__$crejoin0 =
  \ ds_d1u6D ->
    case ds_d1u6D of _ { EqualP_ x0_a1ovr x1_a1ovs ->
    (EqualP x0_a1ovr x1_a1ovs) `cast` ...
    }

$fGeneric0EqualP__$cobj0
$fGeneric0EqualP__$cobj0 =
  \ @ p1_t1jU @ p0_t1jV ds_d1u6b ->
    case ds_d1u6b `cast` ... of _ { :*: x0_a1ovp x1_a1ovq ->
    EqualP_ (x0_a1ovp `cast` ...) (x1_a1ovq `cast` ...)
    }

$fGeneric0EqualP__$crep0
$fGeneric0EqualP__$crep0 =
  \ @ p1_t1jB @ p0_t1jC ds_d1u5N ->
    case ds_d1u5N of _ { EqualP_ x0_a1ovn x1_a1ovo ->
    (:*: (x0_a1ovn `cast` ...) (x1_a1ovo `cast` ...)) `cast` ...
    }

$fGeneric0EqualP_
$fGeneric0EqualP_ =
  D:Generic0 $fGeneric0EqualP__$crep0 $fGeneric0EqualP__$cobj0

$fDT0Pred_$cdisband0
$fDT0Pred_$cdisband0 =
  \ @ p1_t1jf @ p0_t1jg ds_d1u5p ->
    case ds_d1u5p of _ {
      ClassP x0_a1ovj x1_a1ovk ->
        (L ((ClassP_ x0_a1ovj x1_a1ovk) `cast` ...)) `cast` ...;
      EqualP x0_a1ovl x1_a1ovm ->
        (R ((EqualP_ x0_a1ovl x1_a1ovm) `cast` ...)) `cast` ...
    }

$fDT0Pred1
$fDT0Pred1 =
  \ @ p1_X2dQ @ p0_X2dS ds_XgfT ->
    case ds_XgfT of _ {
      L x_ae6I ->
        case x_ae6I `cast` ... of _ { ClassP_ x0_a1ovy x1_a1ovz ->
        ClassP x0_a1ovy x1_a1ovz
        };
      R x_ae6J ->
        case x_ae6J `cast` ... of _ { EqualP_ x0_a1ovr x1_a1ovs ->
        EqualP x0_a1ovr x1_a1ovs
        }
    }

$fDT0Pred_$dReband0
$fDT0Pred_$dReband0 = $fDT0Pred1 `cast` ...

$fDT0Pred
$fDT0Pred = D:DT0 ($fDT0Pred1 `cast` ...) $fDT0Pred_$cdisband0

$fDC0EqualP_
$fDC0EqualP_ =
  D:DC0
    $fGeneric0EqualP_ ($fDT0Pred `cast` ...) $fDC0EqualP__$crejoin0

$fDC0ClassP_
$fDC0ClassP_ =
  D:DC0
    $fGeneric0ClassP_ ($fDT0Pred `cast` ...) $fDC0ClassP__$crejoin0

$fDC0PlainTV__$crejoin0
$fDC0PlainTV__$crejoin0 =
  \ ds_d1u5l ->
    case ds_d1u5l of _ { PlainTV_ x0_a1ovi ->
    (PlainTV x0_a1ovi) `cast` ...
    }

$fGeneric0PlainTV__$cobj0
$fGeneric0PlainTV__$cobj0 =
  \ @ p1_t1j5 @ p0_t1j6 ds_d1u53 -> PlainTV_ (ds_d1u53 `cast` ...)

$fGeneric0PlainTV__$crep0
$fGeneric0PlainTV__$crep0 =
  \ @ p1_t1iV @ p0_t1iW ds_d1u4N ->
    case ds_d1u4N of _ { PlainTV_ x0_a1ovg -> x0_a1ovg `cast` ... }

$fGeneric0PlainTV_
$fGeneric0PlainTV_ =
  D:Generic0 $fGeneric0PlainTV__$crep0 $fGeneric0PlainTV__$cobj0

$fDC0KindedTV__$crejoin0
$fDC0KindedTV__$crejoin0 =
  \ ds_d1u4K ->
    case ds_d1u4K of _ { KindedTV_ x0_a1ove x1_a1ovf ->
    (KindedTV x0_a1ove x1_a1ovf) `cast` ...
    }

$fGeneric0KindedTV__$cobj0
$fGeneric0KindedTV__$cobj0 =
  \ @ p1_t1iF @ p0_t1iG ds_d1u4l ->
    case ds_d1u4l `cast` ... of _ { :*: x0_a1ovc x1_a1ovd ->
    KindedTV_ (x0_a1ovc `cast` ...) (x1_a1ovd `cast` ...)
    }

$fGeneric0KindedTV__$crep0
$fGeneric0KindedTV__$crep0 =
  \ @ p1_t1in @ p0_t1io ds_d1u40 ->
    case ds_d1u40 of _ { KindedTV_ x0_a1ova x1_a1ovb ->
    (:*: (x0_a1ova `cast` ...) (x1_a1ovb `cast` ...)) `cast` ...
    }

$fGeneric0KindedTV_
$fGeneric0KindedTV_ =
  D:Generic0 $fGeneric0KindedTV__$crep0 $fGeneric0KindedTV__$cobj0

$fDT0TyVarBndr_$cdisband0
$fDT0TyVarBndr_$cdisband0 =
  \ @ p1_t1i1 @ p0_t1i2 ds_d1u3C ->
    case ds_d1u3C of _ {
      PlainTV x0_a1ov7 ->
        (L ((PlainTV_ x0_a1ov7) `cast` ...)) `cast` ...;
      KindedTV x0_a1ov8 x1_a1ov9 ->
        (R ((KindedTV_ x0_a1ov8 x1_a1ov9) `cast` ...)) `cast` ...
    }

$fDT0TyVarBndr1
$fDT0TyVarBndr1 =
  \ @ p1_X2es @ p0_X2eu ds_Xggv ->
    case ds_Xggv of _ {
      L x_ae6I ->
        case x_ae6I `cast` ... of _ { PlainTV_ x0_a1ovi ->
        PlainTV x0_a1ovi
        };
      R x_ae6J ->
        case x_ae6J `cast` ... of _ { KindedTV_ x0_a1ove x1_a1ovf ->
        KindedTV x0_a1ove x1_a1ovf
        }
    }

$fDT0TyVarBndr_$dReband0
$fDT0TyVarBndr_$dReband0 = $fDT0TyVarBndr1 `cast` ...

$fDT0TyVarBndr
$fDT0TyVarBndr =
  D:DT0 ($fDT0TyVarBndr1 `cast` ...) $fDT0TyVarBndr_$cdisband0

$fDC0KindedTV_
$fDC0KindedTV_ =
  D:DC0
    $fGeneric0KindedTV_
    ($fDT0TyVarBndr `cast` ...)
    $fDC0KindedTV__$crejoin0

$fDC0PlainTV_
$fDC0PlainTV_ =
  D:DC0
    $fGeneric0PlainTV_
    ($fDT0TyVarBndr `cast` ...)
    $fDC0PlainTV__$crejoin0

$fDC0ForallT__$crejoin0
$fDC0ForallT__$crejoin0 =
  \ ds_d1u3y ->
    case ds_d1u3y of _ { ForallT_ x0_a1ov4 x1_a1ov5 x2_a1ov6 ->
    (ForallT x0_a1ov4 x1_a1ov5 x2_a1ov6) `cast` ...
    }

$fGeneric0ForallT__$cobj0
$fGeneric0ForallT__$cobj0 =
  \ @ p1_abpS @ p0_abpT w_s1Cps ->
    case w_s1Cps `cast` ... of _ { :*: x0_a1ouZ ds_d1u2Y ->
    case ds_d1u2Y of _ { :*: x1_a1ov0 x2_a1ov1 ->
    ForallT_
      (map ((unRec3) `cast` ...) (x0_a1ouZ `cast` ...))
      (map ((unRec3) `cast` ...) (x1_a1ov0 `cast` ...))
      (x2_a1ov1 `cast` ...)
    }
    }

$fGeneric0ForallT_2
$fGeneric0ForallT_2 = \ tpl_X56E -> tpl_X56E

$fGeneric0ForallT_1
$fGeneric0ForallT_1 = \ tpl_X56K -> tpl_X56K

$fGeneric0ForallT__$crep0
$fGeneric0ForallT__$crep0 =
  \ @ p1_Xc5F @ p0_Xc5H w_s1Cpw ->
    case w_s1Cpw of _ { ForallT_ ww_X1D5r ww1_X1D5t ww2_X1D5v ->
    (:*:
       ((map ($fGeneric0ForallT_2 `cast` ...) ww_X1D5r) `cast` ...)
       (:*:
          ((map ($fGeneric0ForallT_1 `cast` ...) ww1_X1D5t) `cast` ...)
          (ww2_X1D5v `cast` ...)))
    `cast` ...
    }

$fGeneric0ForallT_
$fGeneric0ForallT_ =
  D:Generic0 $fGeneric0ForallT__$crep0 $fGeneric0ForallT__$cobj0

$fDC0AppT__$crejoin0
$fDC0AppT__$crejoin0 =
  \ ds_d1u2j ->
    case ds_d1u2j of _ { AppT_ x0_a1ouU x1_a1ouV ->
    (AppT x0_a1ouU x1_a1ouV) `cast` ...
    }

$fGeneric0AppT__$cobj0
$fGeneric0AppT__$cobj0 =
  \ @ p1_t1g2 @ p0_t1g3 ds_d1u1R ->
    case ds_d1u1R `cast` ... of _ { :*: x0_a1ouS x1_a1ouT ->
    AppT_ (x0_a1ouS `cast` ...) (x1_a1ouT `cast` ...)
    }

$fGeneric0AppT__$crep0
$fGeneric0AppT__$crep0 =
  \ @ p1_t1fJ @ p0_t1fK ds_d1u1t ->
    case ds_d1u1t of _ { AppT_ x0_a1ouQ x1_a1ouR ->
    (:*: (x0_a1ouQ `cast` ...) (x1_a1ouR `cast` ...)) `cast` ...
    }

$fGeneric0AppT_
$fGeneric0AppT_ =
  D:Generic0 $fGeneric0AppT__$crep0 $fGeneric0AppT__$cobj0

$fDC0SigT__$crejoin0
$fDC0SigT__$crejoin0 =
  \ ds_d1u1q ->
    case ds_d1u1q of _ { SigT_ x0_a1ouO x1_a1ouP ->
    (SigT x0_a1ouO x1_a1ouP) `cast` ...
    }

$fGeneric0SigT__$cobj0
$fGeneric0SigT__$cobj0 =
  \ @ p1_t1fs @ p0_t1ft ds_d1u0Y ->
    case ds_d1u0Y `cast` ... of _ { :*: x0_a1ouM x1_a1ouN ->
    SigT_ (x0_a1ouM `cast` ...) (x1_a1ouN `cast` ...)
    }

$fGeneric0SigT__$crep0
$fGeneric0SigT__$crep0 =
  \ @ p1_t1f9 @ p0_t1fa ds_d1u0A ->
    case ds_d1u0A of _ { SigT_ x0_a1ouK x1_a1ouL ->
    (:*: (x0_a1ouK `cast` ...) (x1_a1ouL `cast` ...)) `cast` ...
    }

$fGeneric0SigT_
$fGeneric0SigT_ =
  D:Generic0 $fGeneric0SigT__$crep0 $fGeneric0SigT__$cobj0

$fDC0VarT__$crejoin0
$fDC0VarT__$crejoin0 =
  \ ds_d1u0x ->
    case ds_d1u0x of _ { VarT_ x0_a1ouJ -> (VarT x0_a1ouJ) `cast` ... }

$fGeneric0VarT__$cobj0
$fGeneric0VarT__$cobj0 =
  \ @ p1_t1eZ @ p0_t1f0 ds_d1u0f -> VarT_ (ds_d1u0f `cast` ...)

$fGeneric0VarT__$crep0
$fGeneric0VarT__$crep0 =
  \ @ p1_t1eP @ p0_t1eQ ds_d1tZZ ->
    case ds_d1tZZ of _ { VarT_ x0_a1ouH -> x0_a1ouH `cast` ... }

$fGeneric0VarT_
$fGeneric0VarT_ =
  D:Generic0 $fGeneric0VarT__$crep0 $fGeneric0VarT__$cobj0

$fDC0ConT__$crejoin0
$fDC0ConT__$crejoin0 =
  \ ds_d1tZW ->
    case ds_d1tZW of _ { ConT_ x0_a1ouG -> (ConT x0_a1ouG) `cast` ... }

$fGeneric0ConT__$cobj0
$fGeneric0ConT__$cobj0 =
  \ @ p1_t1eF @ p0_t1eG ds_d1tZE -> ConT_ (ds_d1tZE `cast` ...)

$fGeneric0ConT__$crep0
$fGeneric0ConT__$crep0 =
  \ @ p1_t1ev @ p0_t1ew ds_d1tZo ->
    case ds_d1tZo of _ { ConT_ x0_a1ouE -> x0_a1ouE `cast` ... }

$fGeneric0ConT_
$fGeneric0ConT_ =
  D:Generic0 $fGeneric0ConT__$crep0 $fGeneric0ConT__$cobj0

$fDC0PromotedT__$crejoin0
$fDC0PromotedT__$crejoin0 =
  \ ds_d1tZl ->
    case ds_d1tZl of _ { PromotedT_ x0_a1ouD ->
    (PromotedT x0_a1ouD) `cast` ...
    }

$fGeneric0PromotedT__$cobj0
$fGeneric0PromotedT__$cobj0 =
  \ @ p1_t1el @ p0_t1em ds_d1tZ3 -> PromotedT_ (ds_d1tZ3 `cast` ...)

$fGeneric0PromotedT__$crep0
$fGeneric0PromotedT__$crep0 =
  \ @ p1_t1eb @ p0_t1ec ds_d1tYN ->
    case ds_d1tYN of _ { PromotedT_ x0_a1ouB -> x0_a1ouB `cast` ... }

$fGeneric0PromotedT_
$fGeneric0PromotedT_ =
  D:Generic0 $fGeneric0PromotedT__$crep0 $fGeneric0PromotedT__$cobj0

$fDC0TupleT__$crejoin0
$fDC0TupleT__$crejoin0 =
  \ ds_d1tYK ->
    case ds_d1tYK of _ { TupleT_ x0_a1ouA ->
    (TupleT x0_a1ouA) `cast` ...
    }

$fGeneric0TupleT__$cobj0
$fGeneric0TupleT__$cobj0 =
  \ @ p1_t1e1 @ p0_t1e2 ds_d1tYs -> TupleT_ (ds_d1tYs `cast` ...)

$fGeneric0TupleT__$crep0
$fGeneric0TupleT__$crep0 =
  \ @ p1_t1dR @ p0_t1dS ds_d1tYc ->
    case ds_d1tYc of _ { TupleT_ x0_a1ouy -> x0_a1ouy `cast` ... }

$fGeneric0TupleT_
$fGeneric0TupleT_ =
  D:Generic0 $fGeneric0TupleT__$crep0 $fGeneric0TupleT__$cobj0

$fDC0UnboxedTupleT__$crejoin0
$fDC0UnboxedTupleT__$crejoin0 =
  \ ds_d1tY9 ->
    case ds_d1tY9 of _ { UnboxedTupleT_ x0_a1oux ->
    (UnboxedTupleT x0_a1oux) `cast` ...
    }

$fGeneric0UnboxedTupleT__$cobj0
$fGeneric0UnboxedTupleT__$cobj0 =
  \ @ p1_t1dH @ p0_t1dI ds_d1tXR ->
    UnboxedTupleT_ (ds_d1tXR `cast` ...)

$fGeneric0UnboxedTupleT__$crep0
$fGeneric0UnboxedTupleT__$crep0 =
  \ @ p1_t1dx @ p0_t1dy ds_d1tXB ->
    case ds_d1tXB of _ { UnboxedTupleT_ x0_a1ouv ->
    x0_a1ouv `cast` ...
    }

$fGeneric0UnboxedTupleT_
$fGeneric0UnboxedTupleT_ =
  D:Generic0
    $fGeneric0UnboxedTupleT__$crep0 $fGeneric0UnboxedTupleT__$cobj0

$fDC0ArrowT__$crejoin0
$fDC0ArrowT__$crejoin0 =
  \ ds_d1tXy -> case ds_d1tXy of _ { ArrowT_ -> ArrowT `cast` ... }

$fGeneric0ArrowT__$cobj0
$fGeneric0ArrowT__$cobj0 = \ @ p1_t1dq @ p0_t1dr _ -> ArrowT_

$fGeneric0ArrowT__$crep0
$fGeneric0ArrowT__$crep0 =
  \ @ p1_t1dh @ p0_t1di ds_d1tWY ->
    case ds_d1tWY of _ { ArrowT_ -> (U) `cast` ... }

$fGeneric0ArrowT_
$fGeneric0ArrowT_ =
  D:Generic0 $fGeneric0ArrowT__$crep0 $fGeneric0ArrowT__$cobj0

$fDC0ListT__$crejoin0
$fDC0ListT__$crejoin0 =
  \ ds_d1tWV -> case ds_d1tWV of _ { ListT_ -> ListT `cast` ... }

$fGeneric0ListT__$cobj0
$fGeneric0ListT__$cobj0 = \ @ p1_t1da @ p0_t1db _ -> ListT_

$fGeneric0ListT__$crep0
$fGeneric0ListT__$crep0 =
  \ @ p1_t1d1 @ p0_t1d2 ds_d1tWl ->
    case ds_d1tWl of _ { ListT_ -> (U) `cast` ... }

$fGeneric0ListT_
$fGeneric0ListT_ =
  D:Generic0 $fGeneric0ListT__$crep0 $fGeneric0ListT__$cobj0

$fDC0PromotedTupleT__$crejoin0
$fDC0PromotedTupleT__$crejoin0 =
  \ ds_d1tWi ->
    case ds_d1tWi of _ { PromotedTupleT_ x0_a1ouu ->
    (PromotedTupleT x0_a1ouu) `cast` ...
    }

$fGeneric0PromotedTupleT__$cobj0
$fGeneric0PromotedTupleT__$cobj0 =
  \ @ p1_t1cR @ p0_t1cS ds_d1tW0 ->
    PromotedTupleT_ (ds_d1tW0 `cast` ...)

$fGeneric0PromotedTupleT__$crep0
$fGeneric0PromotedTupleT__$crep0 =
  \ @ p1_t1cH @ p0_t1cI ds_d1tVK ->
    case ds_d1tVK of _ { PromotedTupleT_ x0_a1ous ->
    x0_a1ous `cast` ...
    }

$fGeneric0PromotedTupleT_
$fGeneric0PromotedTupleT_ =
  D:Generic0
    $fGeneric0PromotedTupleT__$crep0 $fGeneric0PromotedTupleT__$cobj0

$fDC0PromotedNilT__$crejoin0
$fDC0PromotedNilT__$crejoin0 =
  \ ds_d1tVH ->
    case ds_d1tVH of _ { PromotedNilT_ -> PromotedNilT `cast` ... }

$fGeneric0PromotedNilT__$cobj0
$fGeneric0PromotedNilT__$cobj0 =
  \ @ p1_t1cA @ p0_t1cB _ -> PromotedNilT_

$fGeneric0PromotedNilT__$crep0
$fGeneric0PromotedNilT__$crep0 =
  \ @ p1_t1cr @ p0_t1cs ds_d1tV7 ->
    case ds_d1tV7 of _ { PromotedNilT_ -> (U) `cast` ... }

$fGeneric0PromotedNilT_
$fGeneric0PromotedNilT_ =
  D:Generic0
    $fGeneric0PromotedNilT__$crep0 $fGeneric0PromotedNilT__$cobj0

$fDC0PromotedConsT__$crejoin0
$fDC0PromotedConsT__$crejoin0 =
  \ ds_d1tV4 ->
    case ds_d1tV4 of _ { PromotedConsT_ -> PromotedConsT `cast` ... }

$fGeneric0PromotedConsT__$cobj0
$fGeneric0PromotedConsT__$cobj0 =
  \ @ p1_t1ck @ p0_t1cl _ -> PromotedConsT_

$fGeneric0PromotedConsT__$crep0
$fGeneric0PromotedConsT__$crep0 =
  \ @ p1_t1cb @ p0_t1cc ds_d1tUu ->
    case ds_d1tUu of _ { PromotedConsT_ -> (U) `cast` ... }

$fGeneric0PromotedConsT_
$fGeneric0PromotedConsT_ =
  D:Generic0
    $fGeneric0PromotedConsT__$crep0 $fGeneric0PromotedConsT__$cobj0

$fDC0StarT__$crejoin0
$fDC0StarT__$crejoin0 =
  \ ds_d1tUr -> case ds_d1tUr of _ { StarT_ -> StarT `cast` ... }

$fGeneric0StarT__$cobj0
$fGeneric0StarT__$cobj0 = \ @ p1_t1c4 @ p0_t1c5 _ -> StarT_

$fGeneric0StarT__$crep0
$fGeneric0StarT__$crep0 =
  \ @ p1_t1bV @ p0_t1bW ds_d1tTR ->
    case ds_d1tTR of _ { StarT_ -> (U) `cast` ... }

$fGeneric0StarT_
$fGeneric0StarT_ =
  D:Generic0 $fGeneric0StarT__$crep0 $fGeneric0StarT__$cobj0

$fDC0ConstraintT__$crejoin0
$fDC0ConstraintT__$crejoin0 =
  \ ds_d1tTO ->
    case ds_d1tTO of _ { ConstraintT_ -> ConstraintT `cast` ... }

$fGeneric0ConstraintT__$cobj0
$fGeneric0ConstraintT__$cobj0 =
  \ @ p1_t1bO @ p0_t1bP _ -> ConstraintT_

$fGeneric0ConstraintT__$crep0
$fGeneric0ConstraintT__$crep0 =
  \ @ p1_t1bF @ p0_t1bG ds_d1tTe ->
    case ds_d1tTe of _ { ConstraintT_ -> (U) `cast` ... }

$fGeneric0ConstraintT_
$fGeneric0ConstraintT_ =
  D:Generic0
    $fGeneric0ConstraintT__$crep0 $fGeneric0ConstraintT__$cobj0

$fDC0LitT__$crejoin0
$fDC0LitT__$crejoin0 =
  \ ds_d1tTb ->
    case ds_d1tTb of _ { LitT_ x0_a1our -> (LitT x0_a1our) `cast` ... }

$fGeneric0LitT__$cobj0
$fGeneric0LitT__$cobj0 =
  \ @ p1_t1bv @ p0_t1bw ds_d1tST -> LitT_ (ds_d1tST `cast` ...)

$fGeneric0LitT__$crep0
$fGeneric0LitT__$crep0 =
  \ @ p1_t1bl @ p0_t1bm ds_d1tSD ->
    case ds_d1tSD of _ { LitT_ x0_a1oup -> x0_a1oup `cast` ... }

$fGeneric0LitT_
$fGeneric0LitT_ =
  D:Generic0 $fGeneric0LitT__$crep0 $fGeneric0LitT__$cobj0

$fDT0Type24
$fDT0Type24 = \ @ p1_t13j @ p0_t13k -> L (ArrowT_ `cast` ...)

$fDT0Type23
$fDT0Type23 = \ @ p1_t13j @ p0_t13k -> L ($fDT0Type24)

$fDT0Type22
$fDT0Type22 = \ @ p1_t13j @ p0_t13k -> L ($fDT0Type23)

$fDT0Type21
$fDT0Type21 = \ @ p1_t13j @ p0_t13k -> R ($fDT0Type22)

$fDT0Type20
$fDT0Type20 = \ @ p1_t13j @ p0_t13k -> R (ListT_ `cast` ...)

$fDT0Type19
$fDT0Type19 = \ @ p1_t13j @ p0_t13k -> L ($fDT0Type20)

$fDT0Type18
$fDT0Type18 = \ @ p1_t13j @ p0_t13k -> L ($fDT0Type19)

$fDT0Type17
$fDT0Type17 = \ @ p1_t13j @ p0_t13k -> R ($fDT0Type18)

$fDT0Type16
$fDT0Type16 = \ @ p1_t13j @ p0_t13k -> R (PromotedNilT_ `cast` ...)

$fDT0Type15
$fDT0Type15 = \ @ p1_t13j @ p0_t13k -> R ($fDT0Type16)

$fDT0Type14
$fDT0Type14 = \ @ p1_t13j @ p0_t13k -> L ($fDT0Type15)

$fDT0Type13
$fDT0Type13 = \ @ p1_t13j @ p0_t13k -> R ($fDT0Type14)

$fDT0Type12
$fDT0Type12 =
  \ @ p1_t13j @ p0_t13k -> L (PromotedConsT_ `cast` ...)

$fDT0Type11
$fDT0Type11 = \ @ p1_t13j @ p0_t13k -> L ($fDT0Type12)

$fDT0Type10
$fDT0Type10 = \ @ p1_t13j @ p0_t13k -> R ($fDT0Type11)

$fDT0Type9
$fDT0Type9 = \ @ p1_t13j @ p0_t13k -> R ($fDT0Type10)

$fDT0Type8
$fDT0Type8 = \ @ p1_t13j @ p0_t13k -> R (StarT_ `cast` ...)

$fDT0Type7
$fDT0Type7 = \ @ p1_t13j @ p0_t13k -> L ($fDT0Type8)

$fDT0Type6
$fDT0Type6 = \ @ p1_t13j @ p0_t13k -> R ($fDT0Type7)

$fDT0Type5
$fDT0Type5 = \ @ p1_t13j @ p0_t13k -> R ($fDT0Type6)

$fDT0Type4
$fDT0Type4 = \ @ p1_t13j @ p0_t13k -> L (ConstraintT_ `cast` ...)

$fDT0Type3
$fDT0Type3 = \ @ p1_t13j @ p0_t13k -> R ($fDT0Type4)

$fDT0Type2
$fDT0Type2 = \ @ p1_t13j @ p0_t13k -> R ($fDT0Type3)

$fDT0Type1
$fDT0Type1 = \ @ p1_t13j @ p0_t13k -> R ($fDT0Type2)

$fDT0Type_$cdisband0
$fDT0Type_$cdisband0 =
  \ @ p1_t13j @ p0_t13k ds_d1tNr ->
    case ds_d1tNr of _ {
      ForallT x0_a1oub x1_a1ouc x2_a1oud ->
        (L (L (L (L ((ForallT_ x0_a1oub x1_a1ouc x2_a1oud) `cast` ...)))))
        `cast` ...;
      AppT x0_a1oue x1_a1ouf ->
        (L (L (L (R ((AppT_ x0_a1oue x1_a1ouf) `cast` ...))))) `cast` ...;
      SigT x0_a1oug x1_a1ouh ->
        (L (L (R (L ((SigT_ x0_a1oug x1_a1ouh) `cast` ...))))) `cast` ...;
      VarT x0_a1oui ->
        (L (L (R (R ((VarT_ x0_a1oui) `cast` ...))))) `cast` ...;
      ConT x0_a1ouj ->
        (L (R (L (L ((ConT_ x0_a1ouj) `cast` ...))))) `cast` ...;
      PromotedT x0_a1ouk ->
        (L (R (L (R ((PromotedT_ x0_a1ouk) `cast` ...))))) `cast` ...;
      TupleT x0_a1oul ->
        (L (R (R (L ((TupleT_ x0_a1oul) `cast` ...))))) `cast` ...;
      UnboxedTupleT x0_a1oum ->
        (L (R (R (R ((UnboxedTupleT_ x0_a1oum) `cast` ...))))) `cast` ...;
      ArrowT -> ($fDT0Type21) `cast` ...;
      ListT -> ($fDT0Type17) `cast` ...;
      PromotedTupleT x0_a1oun ->
        (R (L (R (L ((PromotedTupleT_ x0_a1oun) `cast` ...))))) `cast` ...;
      PromotedNilT -> ($fDT0Type13) `cast` ...;
      PromotedConsT -> ($fDT0Type9) `cast` ...;
      StarT -> ($fDT0Type5) `cast` ...;
      ConstraintT -> ($fDT0Type1) `cast` ...;
      LitT x0_a1ouo ->
        (R (R (R (R ((LitT_ x0_a1ouo) `cast` ...))))) `cast` ...
    }

$fDT0Type25
$fDT0Type25 =
  \ @ p1_X2kK @ p0_X2kM ds_XgmN ->
    case ds_XgmN of _ {
      L x_ae6I ->
        case x_ae6I of _ {
          L x1_XghH ->
            case x1_XghH of _ {
              L x2_XeZh ->
                case x2_XeZh of _ {
                  L x3_Xght ->
                    case x3_Xght `cast` ...
                    of _ { ForallT_ x0_a1ov4 x4_a1ov5 x5_a1ov6 ->
                    ForallT x0_a1ov4 x4_a1ov5 x5_a1ov6
                    };
                  R x3_ae6J ->
                    case x3_ae6J `cast` ... of _ { AppT_ x0_a1ouU x4_a1ouV ->
                    AppT x0_a1ouU x4_a1ouV
                    }
                };
              R x2_ae6J ->
                case x2_ae6J of _ {
                  L x3_XeZl ->
                    case x3_XeZl `cast` ... of _ { SigT_ x0_a1ouO x4_a1ouP ->
                    SigT x0_a1ouO x4_a1ouP
                    };
                  R x3_Xghu ->
                    case x3_Xghu `cast` ... of _ { VarT_ x0_a1ouJ -> VarT x0_a1ouJ }
                }
            };
          R x1_ae6J ->
            case x1_ae6J of _ {
              L x2_XeZh ->
                case x2_XeZh of _ {
                  L x3_XggC ->
                    case x3_XggC `cast` ... of _ { ConT_ x0_a1ouG -> ConT x0_a1ouG };
                  R x3_XeZm ->
                    case x3_XeZm `cast` ... of _ { PromotedT_ x0_a1ouD ->
                    PromotedT x0_a1ouD
                    }
                };
              R x2_XeZi ->
                case x2_XeZi of _ {
                  L x3_XeZl ->
                    case x3_XeZl `cast` ... of _ { TupleT_ x0_a1ouA ->
                    TupleT x0_a1ouA
                    };
                  R x3_XggD ->
                    case x3_XggD `cast` ... of _ { UnboxedTupleT_ x0_a1oux ->
                    UnboxedTupleT x0_a1oux
                    }
                }
            }
        };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I ->
            case x1_ae6I of _ {
              L x2_XeZh ->
                case x2_XeZh of _ {
                  L x3_XgfE -> case x3_XgfE of _ { __DEFAULT -> ArrowT };
                  R x3_XeZm -> case x3_XeZm of _ { __DEFAULT -> ListT }
                };
              R x2_XeZi ->
                case x2_XeZi of _ {
                  L x3_XeZl ->
                    case x3_XeZl `cast` ... of _ { PromotedTupleT_ x0_a1ouu ->
                    PromotedTupleT x0_a1ouu
                    };
                  R x3_XgfF -> case x3_XgfF of _ { __DEFAULT -> PromotedNilT }
                }
            };
          R x1_XghI ->
            case x1_XghI of _ {
              L x2_ae6I ->
                case x2_ae6I of _ {
                  L x3_XgeN -> case x3_XgeN of _ { __DEFAULT -> PromotedConsT };
                  R x3_XeZm -> case x3_XeZm of _ { __DEFAULT -> StarT }
                };
              R x2_XeZi ->
                case x2_XeZi of _ {
                  L x3_ae6I -> case x3_ae6I of _ { __DEFAULT -> ConstraintT };
                  R x3_XgeO ->
                    case x3_XgeO `cast` ... of _ { LitT_ x0_a1our -> LitT x0_a1our }
                }
            }
        }
    }

$fDT0Type_$dReband0
$fDT0Type_$dReband0 = $fDT0Type25 `cast` ...

$fDT0Type
$fDT0Type = D:DT0 ($fDT0Type25 `cast` ...) $fDT0Type_$cdisband0

$fDC0LitT_
$fDC0LitT_ =
  D:DC0 $fGeneric0LitT_ ($fDT0Type `cast` ...) $fDC0LitT__$crejoin0

$fDC0ConstraintT_
$fDC0ConstraintT_ =
  D:DC0
    $fGeneric0ConstraintT_
    ($fDT0Type `cast` ...)
    $fDC0ConstraintT__$crejoin0

$fDC0StarT_
$fDC0StarT_ =
  D:DC0 $fGeneric0StarT_ ($fDT0Type `cast` ...) $fDC0StarT__$crejoin0

$fDC0PromotedConsT_
$fDC0PromotedConsT_ =
  D:DC0
    $fGeneric0PromotedConsT_
    ($fDT0Type `cast` ...)
    $fDC0PromotedConsT__$crejoin0

$fDC0PromotedNilT_
$fDC0PromotedNilT_ =
  D:DC0
    $fGeneric0PromotedNilT_
    ($fDT0Type `cast` ...)
    $fDC0PromotedNilT__$crejoin0

$fDC0PromotedTupleT_
$fDC0PromotedTupleT_ =
  D:DC0
    $fGeneric0PromotedTupleT_
    ($fDT0Type `cast` ...)
    $fDC0PromotedTupleT__$crejoin0

$fDC0ListT_
$fDC0ListT_ =
  D:DC0 $fGeneric0ListT_ ($fDT0Type `cast` ...) $fDC0ListT__$crejoin0

$fDC0ArrowT_
$fDC0ArrowT_ =
  D:DC0
    $fGeneric0ArrowT_ ($fDT0Type `cast` ...) $fDC0ArrowT__$crejoin0

$fDC0UnboxedTupleT_
$fDC0UnboxedTupleT_ =
  D:DC0
    $fGeneric0UnboxedTupleT_
    ($fDT0Type `cast` ...)
    $fDC0UnboxedTupleT__$crejoin0

$fDC0TupleT_
$fDC0TupleT_ =
  D:DC0
    $fGeneric0TupleT_ ($fDT0Type `cast` ...) $fDC0TupleT__$crejoin0

$fDC0PromotedT_
$fDC0PromotedT_ =
  D:DC0
    $fGeneric0PromotedT_
    ($fDT0Type `cast` ...)
    $fDC0PromotedT__$crejoin0

$fDC0ConT_
$fDC0ConT_ =
  D:DC0 $fGeneric0ConT_ ($fDT0Type `cast` ...) $fDC0ConT__$crejoin0

$fDC0VarT_
$fDC0VarT_ =
  D:DC0 $fGeneric0VarT_ ($fDT0Type `cast` ...) $fDC0VarT__$crejoin0

$fDC0SigT_
$fDC0SigT_ =
  D:DC0 $fGeneric0SigT_ ($fDT0Type `cast` ...) $fDC0SigT__$crejoin0

$fDC0AppT_
$fDC0AppT_ =
  D:DC0 $fGeneric0AppT_ ($fDT0Type `cast` ...) $fDC0AppT__$crejoin0

$fDC0ForallT_
$fDC0ForallT_ =
  D:DC0
    $fGeneric0ForallT_ ($fDT0Type `cast` ...) $fDC0ForallT__$crejoin0

$fDC0Name__$crejoin0
$fDC0Name__$crejoin0 =
  \ ds_d1tN9 ->
    case ds_d1tN9 of _ { Name_ x0_a1os4 x1_a1os5 ->
    (Name x0_a1os4 x1_a1os5) `cast` ...
    }

$fGeneric0Name__$cobj0
$fGeneric0Name__$cobj0 =
  \ @ p1_tus @ p0_tut ds_d1tMP ->
    case ds_d1tMP `cast` ... of _ { :*: x0_a1os2 x1_a1os3 ->
    Name_ (x0_a1os2 `cast` ...) (x1_a1os3 `cast` ...)
    }

$fGeneric0Name__$crep0
$fGeneric0Name__$crep0 =
  \ @ p1_tub @ p0_tuc ds_d1tMz ->
    case ds_d1tMz of _ { Name_ x0_a1os0 x1_a1os1 ->
    (:*: (x0_a1os0 `cast` ...) (x1_a1os1 `cast` ...)) `cast` ...
    }

$fGeneric0Name_
$fGeneric0Name_ =
  D:Generic0 $fGeneric0Name__$crep0 $fGeneric0Name__$cobj0

$fDT0Name_$cdisband0
$fDT0Name_$cdisband0 =
  \ @ p1_tu6 @ p0_tu7 ds_d1tMp ->
    case ds_d1tMp of _ { Name x0_a1orY x1_a1orZ ->
    (Name_ x0_a1orY x1_a1orZ) `cast` ...
    }

$fDT0Name1
$fDT0Name1 =
  \ @ p1_X2le @ p0_X2lg ds_Xgn8 ->
    case ds_Xgn8 `cast` ... of _ { Name_ x0_a1os4 x1_a1os5 ->
    Name x0_a1os4 x1_a1os5
    }

$fDT0Name_$dReband0
$fDT0Name_$dReband0 = $fDT0Name1 `cast` ...

$fDT0Name
$fDT0Name = D:DT0 ($fDT0Name1 `cast` ...) $fDT0Name_$cdisband0

$fDC0Name_
$fDC0Name_ =
  D:DC0 $fGeneric0Name_ ($fDT0Name `cast` ...) $fDC0Name__$crejoin0

$fDC0OccName__$crejoin0
$fDC0OccName__$crejoin0 =
  \ ds_d1tMm ->
    case ds_d1tMm of _ { OccName_ x0_a1or0 -> x0_a1or0 `cast` ... }

$fGeneric0OccName__$cobj0
$fGeneric0OccName__$cobj0 =
  \ @ p1_tsm @ p0_tsn ds_d1tM4 -> OccName_ (ds_d1tM4 `cast` ...)

$fGeneric0OccName__$crep0
$fGeneric0OccName__$crep0 =
  \ @ p1_tsc @ p0_tsd ds_d1tLO ->
    case ds_d1tLO of _ { OccName_ x0_a1oqY -> x0_a1oqY `cast` ... }

$fGeneric0OccName_
$fGeneric0OccName_ =
  D:Generic0 $fGeneric0OccName__$crep0 $fGeneric0OccName__$cobj0

$fDT0OccName1
$fDT0OccName1 =
  \ @ p1_ts7 @ p0_ts8 ds_d1tLF -> OccName_ (ds_d1tLF `cast` ...)

$fDT0OccName_$cdisband0
$fDT0OccName_$cdisband0 = $fDT0OccName1 `cast` ...

$fDT0OccName2
$fDT0OccName2 =
  \ @ p1_X2lv @ p0_X2lx ds_Xgnp ->
    case ds_Xgnp `cast` ... of _ { OccName_ x0_a1or0 ->
    x0_a1or0 `cast` ...
    }

$fDT0OccName_$dReband0
$fDT0OccName_$dReband0 = $fDT0OccName2 `cast` ...

$fDT0OccName
$fDT0OccName =
  D:DT0 ($fDT0OccName2 `cast` ...) ($fDT0OccName1 `cast` ...)

$fDC0OccName_
$fDC0OccName_ =
  D:DC0
    $fGeneric0OccName_
    ($fDT0OccName `cast` ...)
    $fDC0OccName__$crejoin0

lvl20_r1Fls
lvl20_r1Fls =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body162 `cast` ...)

$fMinCtors*OccName1
$fMinCtors*OccName1 = \ _ -> lvl20_r1Fls

$fMinCtors*OccName_$cminCtors
$fMinCtors*OccName_$cminCtors = $fMinCtors*OccName1 `cast` ...

$fMinCtors*OccName
$fMinCtors*OccName = $fMinCtors*OccName1 `cast` ...

$fDC0NameS__$crejoin0
$fDC0NameS__$crejoin0 =
  \ ds_d1tLC -> case ds_d1tLC of _ { NameS_ -> NameS `cast` ... }

$fGeneric0NameS__$cobj0
$fGeneric0NameS__$cobj0 = \ @ p1_tqi @ p0_tqj _ -> NameS_

$fGeneric0NameS__$crep0
$fGeneric0NameS__$crep0 =
  \ @ p1_tq9 @ p0_tqa ds_d1tL2 ->
    case ds_d1tL2 of _ { NameS_ -> (U) `cast` ... }

$fGeneric0NameS_
$fGeneric0NameS_ =
  D:Generic0 $fGeneric0NameS__$crep0 $fGeneric0NameS__$cobj0

$fDC0NameQ__$crejoin0
$fDC0NameQ__$crejoin0 =
  \ ds_d1tKZ ->
    case ds_d1tKZ of _ { NameQ_ x0_a1oo7 ->
    (NameQ x0_a1oo7) `cast` ...
    }

$fGeneric0NameQ__$cobj0
$fGeneric0NameQ__$cobj0 =
  \ @ p1_tpZ @ p0_tq0 ds_d1tKH -> NameQ_ (ds_d1tKH `cast` ...)

$fGeneric0NameQ__$crep0
$fGeneric0NameQ__$crep0 =
  \ @ p1_tpP @ p0_tpQ ds_d1tKr ->
    case ds_d1tKr of _ { NameQ_ x0_a1oo5 -> x0_a1oo5 `cast` ... }

$fGeneric0NameQ_
$fGeneric0NameQ_ =
  D:Generic0 $fGeneric0NameQ__$crep0 $fGeneric0NameQ__$cobj0

$fDC0NameU__$crejoin0
$fDC0NameU__$crejoin0 =
  \ ds_d1tKo ->
    case ds_d1tKo of _ { NameU_ x0_a1oo4 ->
    (NameU x0_a1oo4) `cast` ...
    }

$fDC0NameL__$crejoin0
$fDC0NameL__$crejoin0 =
  \ ds_d1tKl ->
    case ds_d1tKl of _ { NameL_ x0_a1oo3 ->
    (NameL x0_a1oo3) `cast` ...
    }

$fDC0NameG__$crejoin0
$fDC0NameG__$crejoin0 =
  \ ds_d1tKi ->
    case ds_d1tKi of _ { NameG_ x0_a1oo0 x1_a1oo1 x2_a1oo2 ->
    (NameG x0_a1oo0 x1_a1oo1 x2_a1oo2) `cast` ...
    }

$fGeneric0NameG__$cobj0
$fGeneric0NameG__$cobj0 =
  \ @ p1_tpv @ p0_tpw ds_d1tJW ->
    case ds_d1tJW `cast` ... of _ { :*: x0_a1onX ds1_d1tJZ ->
    case ds1_d1tJZ of _ { :*: x1_a1onY x2_a1onZ ->
    NameG_
      (x0_a1onX `cast` ...) (x1_a1onY `cast` ...) (x2_a1onZ `cast` ...)
    }
    }

$fGeneric0NameG__$crep0
$fGeneric0NameG__$crep0 =
  \ @ p1_tp7 @ p0_tp8 ds_d1tJG ->
    case ds_d1tJG of _ { NameG_ x0_a1onU x1_a1onV x2_a1onW ->
    (:*:
       (x0_a1onU `cast` ...)
       (:*: (x1_a1onV `cast` ...) (x2_a1onW `cast` ...)))
    `cast` ...
    }

$fGeneric0NameG_
$fGeneric0NameG_ =
  D:Generic0 $fGeneric0NameG__$crep0 $fGeneric0NameG__$cobj0

$fDT0NameFlavour2
$fDT0NameFlavour2 = \ @ p1_tnu @ p0_tnv -> L (NameS_ `cast` ...)

$fDT0NameFlavour1
$fDT0NameFlavour1 = \ @ p1_tnu @ p0_tnv -> L ($fDT0NameFlavour2)

$fDT0NameFlavour_$cdisband0
$fDT0NameFlavour_$cdisband0 =
  \ @ p1_tnu @ p0_tnv ds_d1tIq ->
    case ds_d1tIq of _ {
      NameS -> ($fDT0NameFlavour1) `cast` ...;
      NameQ x0_a1onO ->
        (L (R ((NameQ_ x0_a1onO) `cast` ...))) `cast` ...;
      NameU x0_a1onP ->
        (R (L ((NameU_ x0_a1onP) `cast` ...))) `cast` ...;
      NameL x0_a1onQ ->
        (R (R (L ((NameL_ x0_a1onQ) `cast` ...)))) `cast` ...;
      NameG x0_a1onR x1_a1onS x2_a1onT ->
        (R (R (R ((NameG_ x0_a1onR x1_a1onS x2_a1onT) `cast` ...))))
        `cast` ...
    }

$fGeneric0NameU__$cobj0
$fGeneric0NameU__$cobj0 =
  \ @ p1_tnm @ p0_tnn ds_d1tI1 ->
    case ds_d1tI1 `cast` ... of _ { I# x_a1onN -> NameU_ x_a1onN }

$fGeneric0NameU__$crep0
$fGeneric0NameU__$crep0 =
  \ @ p1_tnc @ p0_tnd ds_d1tHL ->
    case ds_d1tHL of _ { NameU_ x_a1onM -> (I# x_a1onM) `cast` ... }

$fGeneric0NameU_
$fGeneric0NameU_ =
  D:Generic0 $fGeneric0NameU__$crep0 $fGeneric0NameU__$cobj0

$fGeneric0NameL__$cobj0
$fGeneric0NameL__$cobj0 =
  \ @ p1_tn4 @ p0_tn5 ds_d1tHq ->
    case ds_d1tHq `cast` ... of _ { I# x_a1onL -> NameL_ x_a1onL }

$fGeneric0NameL__$crep0
$fGeneric0NameL__$crep0 =
  \ @ p1_tmU @ p0_tmV ds_d1tHa ->
    case ds_d1tHa of _ { NameL_ x_a1onK -> (I# x_a1onK) `cast` ... }

$fGeneric0NameL_
$fGeneric0NameL_ =
  D:Generic0 $fGeneric0NameL__$crep0 $fGeneric0NameL__$cobj0

$fDT0NameFlavour3
$fDT0NameFlavour3 =
  \ @ p1_X4Az @ p0_X4AC ds_Xgph ->
    case ds_Xgph of _ {
      L x_ae6I ->
        case x_ae6I of _ {
          L x1_XixE -> case x1_XixE of _ { __DEFAULT -> NameS };
          R x1_ae6J ->
            case x1_ae6J `cast` ... of _ { NameQ_ x0_a1oo7 -> NameQ x0_a1oo7 }
        };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I ->
            case x1_ae6I `cast` ... of _ { NameU_ x0_a1oo4 -> NameU x0_a1oo4 };
          R x1_Xf0o ->
            case x1_Xf0o of _ {
              L x2_ae6I ->
                case x2_ae6I `cast` ... of _ { NameL_ x0_a1oo3 -> NameL x0_a1oo3 };
              R x2_XgjI ->
                case x2_XgjI `cast` ... of _ { NameG_ x0_a1oo0 x3_a1oo1 x4_a1oo2 ->
                NameG x0_a1oo0 x3_a1oo1 x4_a1oo2
                }
            }
        }
    }

$fDT0NameFlavour_$dReband0
$fDT0NameFlavour_$dReband0 = $fDT0NameFlavour3 `cast` ...

$fDT0NameFlavour
$fDT0NameFlavour =
  D:DT0 ($fDT0NameFlavour3 `cast` ...) $fDT0NameFlavour_$cdisband0

$fDC0NameL__$dDT0
$fDC0NameL__$dDT0 = $fDT0NameFlavour `cast` ...

$fDC0NameG_
$fDC0NameG_ =
  D:DC0
    $fGeneric0NameG_
    ($fDT0NameFlavour `cast` ...)
    $fDC0NameG__$crejoin0

$fDC0NameL_
$fDC0NameL_ =
  D:DC0
    $fGeneric0NameL_
    ($fDT0NameFlavour `cast` ...)
    $fDC0NameL__$crejoin0

$fDC0NameU_
$fDC0NameU_ =
  D:DC0
    $fGeneric0NameU_
    ($fDT0NameFlavour `cast` ...)
    $fDC0NameU__$crejoin0

$fDC0NameQ_
$fDC0NameQ_ =
  D:DC0
    $fGeneric0NameQ_
    ($fDT0NameFlavour `cast` ...)
    $fDC0NameQ__$crejoin0

$fDC0NameS_
$fDC0NameS_ =
  D:DC0
    $fGeneric0NameS_
    ($fDT0NameFlavour `cast` ...)
    $fDC0NameS__$crejoin0

$fDC0ModName__$crejoin0
$fDC0ModName__$crejoin0 =
  \ ds_d1tH7 ->
    case ds_d1tH7 of _ { ModName_ x0_a1olE -> x0_a1olE `cast` ... }

$fGeneric0ModName__$cobj0
$fGeneric0ModName__$cobj0 =
  \ @ p1_tf9 @ p0_tfa ds_d1tGP -> ModName_ (ds_d1tGP `cast` ...)

$fGeneric0ModName__$crep0
$fGeneric0ModName__$crep0 =
  \ @ p1_teZ @ p0_tf0 ds_d1tGz ->
    case ds_d1tGz of _ { ModName_ x0_a1olC -> x0_a1olC `cast` ... }

$fGeneric0ModName_
$fGeneric0ModName_ =
  D:Generic0 $fGeneric0ModName__$crep0 $fGeneric0ModName__$cobj0

$fDT0ModName1
$fDT0ModName1 =
  \ @ p1_teU @ p0_teV ds_d1tGq -> ModName_ (ds_d1tGq `cast` ...)

$fDT0ModName_$cdisband0
$fDT0ModName_$cdisband0 = $fDT0ModName1 `cast` ...

$fDT0ModName2
$fDT0ModName2 =
  \ @ p1_X2nJ @ p0_X2nL ds_XgpD ->
    case ds_XgpD `cast` ... of _ { ModName_ x0_a1olE ->
    x0_a1olE `cast` ...
    }

$fDT0ModName_$dReband0
$fDT0ModName_$dReband0 = $fDT0ModName2 `cast` ...

$fDT0ModName
$fDT0ModName =
  D:DT0 ($fDT0ModName2 `cast` ...) ($fDT0ModName1 `cast` ...)

$fDC0ModName_
$fDC0ModName_ =
  D:DC0
    $fGeneric0ModName_
    ($fDT0ModName `cast` ...)
    $fDC0ModName__$crejoin0

lvl21_r1Flt
lvl21_r1Flt =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body162 `cast` ...)

$fMinCtors*ModName1
$fMinCtors*ModName1 = \ _ -> lvl21_r1Flt

$fMinCtors*ModName_$cminCtors
$fMinCtors*ModName_$cminCtors = $fMinCtors*ModName1 `cast` ...

$fMinCtors*ModName
$fMinCtors*ModName = $fMinCtors*ModName1 `cast` ...

$fMinCtors*Body203
$fMinCtors*Body203 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body162 `cast` ...)

$fMinCtors*Body202
$fMinCtors*Body202 =
  map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body203

$wa15
$wa15 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body202

$fDC0PkgName__$crejoin0
$fDC0PkgName__$crejoin0 =
  \ ds_d1tGn ->
    case ds_d1tGn of _ { PkgName_ x0_a1okD -> x0_a1okD `cast` ... }

$fGeneric0PkgName__$cobj0
$fGeneric0PkgName__$cobj0 =
  \ @ p1_td0 @ p0_td1 ds_d1tG5 -> PkgName_ (ds_d1tG5 `cast` ...)

$fGeneric0PkgName__$crep0
$fGeneric0PkgName__$crep0 =
  \ @ p1_tcQ @ p0_tcR ds_d1tFP ->
    case ds_d1tFP of _ { PkgName_ x0_a1okB -> x0_a1okB `cast` ... }

$fGeneric0PkgName_
$fGeneric0PkgName_ =
  D:Generic0 $fGeneric0PkgName__$crep0 $fGeneric0PkgName__$cobj0

$fDT0PkgName1
$fDT0PkgName1 =
  \ @ p1_tcL @ p0_tcM ds_d1tFG -> PkgName_ (ds_d1tFG `cast` ...)

$fDT0PkgName_$cdisband0
$fDT0PkgName_$cdisband0 = $fDT0PkgName1 `cast` ...

$fDT0PkgName2
$fDT0PkgName2 =
  \ @ p1_X2on @ p0_X2op ds_Xgqh ->
    case ds_Xgqh `cast` ... of _ { PkgName_ x0_a1okD ->
    x0_a1okD `cast` ...
    }

$fDT0PkgName_$dReband0
$fDT0PkgName_$dReband0 = $fDT0PkgName2 `cast` ...

$fDT0PkgName
$fDT0PkgName =
  D:DT0 ($fDT0PkgName2 `cast` ...) ($fDT0PkgName1 `cast` ...)

$fDC0PkgName_
$fDC0PkgName_ =
  D:DC0
    $fGeneric0PkgName_
    ($fDT0PkgName `cast` ...)
    $fDC0PkgName__$crejoin0

lvl22_r1Flu
lvl22_r1Flu =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body162 `cast` ...)

$fMinCtors*PkgName1
$fMinCtors*PkgName1 = \ _ -> lvl22_r1Flu

$fMinCtors*PkgName_$cminCtors
$fMinCtors*PkgName_$cminCtors = $fMinCtors*PkgName1 `cast` ...

$fMinCtors*PkgName
$fMinCtors*PkgName = $fMinCtors*PkgName1 `cast` ...

$fDC0VarName__$crejoin0
$fDC0VarName__$crejoin0 =
  \ ds_d1tFD -> case ds_d1tFD of _ { VarName_ -> VarName `cast` ... }

$fGeneric0VarName__$cobj0
$fGeneric0VarName__$cobj0 = \ @ p1_taU @ p0_taV _ -> VarName_

$fGeneric0VarName__$crep0
$fGeneric0VarName__$crep0 =
  \ @ p1_taL @ p0_taM ds_d1tF3 ->
    case ds_d1tF3 of _ { VarName_ -> (U) `cast` ... }

$fGeneric0VarName_
$fGeneric0VarName_ =
  D:Generic0 $fGeneric0VarName__$crep0 $fGeneric0VarName__$cobj0

$fDC0DataName__$crejoin0
$fDC0DataName__$crejoin0 =
  \ ds_d1tF0 ->
    case ds_d1tF0 of _ { DataName_ -> DataName `cast` ... }

$fGeneric0DataName__$cobj0
$fGeneric0DataName__$cobj0 = \ @ p1_taE @ p0_taF _ -> DataName_

$fGeneric0DataName__$crep0
$fGeneric0DataName__$crep0 =
  \ @ p1_tav @ p0_taw ds_d1tEq ->
    case ds_d1tEq of _ { DataName_ -> (U) `cast` ... }

$fGeneric0DataName_
$fGeneric0DataName_ =
  D:Generic0 $fGeneric0DataName__$crep0 $fGeneric0DataName__$cobj0

$fDC0TcClsName__$crejoin0
$fDC0TcClsName__$crejoin0 =
  \ ds_d1tEn ->
    case ds_d1tEn of _ { TcClsName_ -> TcClsName `cast` ... }

$fGeneric0TcClsName__$cobj0
$fGeneric0TcClsName__$cobj0 = \ @ p1_tao @ p0_tap _ -> TcClsName_

$fGeneric0TcClsName__$crep0
$fGeneric0TcClsName__$crep0 =
  \ @ p1_taf @ p0_tag ds_d1tDN ->
    case ds_d1tDN of _ { TcClsName_ -> (U) `cast` ... }

$fGeneric0TcClsName_
$fGeneric0TcClsName_ =
  D:Generic0 $fGeneric0TcClsName__$crep0 $fGeneric0TcClsName__$cobj0

$fDT0NameSpace5
$fDT0NameSpace5 = \ @ p1_t9v @ p0_t9w -> L (VarName_ `cast` ...)

$fDT0NameSpace4
$fDT0NameSpace4 = \ @ p1_t9v @ p0_t9w -> L (DataName_ `cast` ...)

$fDT0NameSpace3
$fDT0NameSpace3 = \ @ p1_t9v @ p0_t9w -> R ($fDT0NameSpace4)

$fDT0NameSpace2
$fDT0NameSpace2 = \ @ p1_t9v @ p0_t9w -> R (TcClsName_ `cast` ...)

$fDT0NameSpace1
$fDT0NameSpace1 = \ @ p1_t9v @ p0_t9w -> R ($fDT0NameSpace2)

$fDT0NameSpace_$cdisband0
$fDT0NameSpace_$cdisband0 =
  \ @ p1_t9v @ p0_t9w ds_d1tD8 ->
    case ds_d1tD8 of _ {
      VarName -> ($fDT0NameSpace5) `cast` ...;
      DataName -> ($fDT0NameSpace3) `cast` ...;
      TcClsName -> ($fDT0NameSpace1) `cast` ...
    }

$fDT0NameSpace6
$fDT0NameSpace6 =
  \ @ p1_X2pp @ p0_X2pr ds_Xgrs ->
    case ds_Xgrs of _ {
      L x_ae6I -> case x_ae6I of _ { __DEFAULT -> VarName };
      R x_ae6J ->
        case x_ae6J of _ {
          L x1_ae6I -> case x1_ae6I of _ { __DEFAULT -> DataName };
          R x1_Xgmn -> case x1_Xgmn of _ { __DEFAULT -> TcClsName }
        }
    }

$fDT0NameSpace_$dReband0
$fDT0NameSpace_$dReband0 = $fDT0NameSpace6 `cast` ...

$fDT0NameSpace
$fDT0NameSpace =
  D:DT0 ($fDT0NameSpace6 `cast` ...) $fDT0NameSpace_$cdisband0

$fDC0TcClsName_
$fDC0TcClsName_ =
  D:DC0
    $fGeneric0TcClsName_
    ($fDT0NameSpace `cast` ...)
    $fDC0TcClsName__$crejoin0

$fDC0DataName_
$fDC0DataName_ =
  D:DC0
    $fGeneric0DataName_
    ($fDT0NameSpace `cast` ...)
    $fDC0DataName__$crejoin0

$fDC0VarName_
$fDC0VarName_ =
  D:DC0
    $fGeneric0VarName_
    ($fDT0NameSpace `cast` ...)
    $fDC0VarName__$crejoin0

$wa84
$wa84 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $wa14

$fMinCtors*NameSpace1
$fMinCtors*NameSpace1 = \ _ -> $wa84

$fMinCtors*NameSpace_$cminCtors
$fMinCtors*NameSpace_$cminCtors = $fMinCtors*NameSpace1 `cast` ...

$fMinCtors*NameSpace
$fMinCtors*NameSpace = $fMinCtors*NameSpace1 `cast` ...

$fMinCtors*Body201
$fMinCtors*Body201 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $wa14

$fMinCtors*Body200
$fMinCtors*Body200 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body162 `cast` ...)

$fMinCtors*Body199
$fMinCtors*Body199 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body162 `cast` ...)

$fMinCtors*Body198
$fMinCtors*Body198 =
  addMinima1
    ($fMinCtors*Body200 `cast` ...) ($fMinCtors*Body199 `cast` ...)

$fMinCtors*Body197
$fMinCtors*Body197 =
  addMinima1 ($fMinCtors*Body201 `cast` ...) $fMinCtors*Body198

$fMinCtors*Body196
$fMinCtors*Body196 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body197 `cast` ...)

$fMinCtors*Body195
$fMinCtors*Body195 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body116
    $fMinCtors*Body196

$wa13
$wa13 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body116
    $fMinCtors*Body195

$wa12
$wa12 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $wa15
    $wa13

$fMinCtors*NameFlavour1
$fMinCtors*NameFlavour1 = \ _ -> $wa12

$fMinCtors*NameFlavour_$cminCtors
$fMinCtors*NameFlavour_$cminCtors =
  $fMinCtors*NameFlavour1 `cast` ...

$fMinCtors*NameFlavour
$fMinCtors*NameFlavour = $fMinCtors*NameFlavour1 `cast` ...

$fMinCtors*Body204
$fMinCtors*Body204 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body162 `cast` ...)

$fMinCtors*Body194
$fMinCtors*Body194 =
  addMinima1 ($fMinCtors*Body204 `cast` ...) ($wa12 `cast` ...)

$wa11
$wa11 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body194 `cast` ...)

$fMinCtors*Body748
$fMinCtors*Body748 = \ _ -> $wa11

$fMinCtors*Body747
$fMinCtors*Body747 = \ _ -> $wa11

$fMinCtors*Name_$cminCtors
$fMinCtors*Name_$cminCtors = $fMinCtors*Body747 `cast` ...

$fMinCtors*Name
$fMinCtors*Name = $fMinCtors*Body747 `cast` ...

$fMinCtors*Body207
$fMinCtors*Body207 =
  VCons
    @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body167

$fMinCtors*Body206
$fMinCtors*Body206 =
  VCons
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body207

$fMinCtors*Body205
$fMinCtors*Body205 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body206 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body193
$fMinCtors*Body193 = map (id) $wa11

$wa10
$wa10 = mapKeysMonotonic $fMinCtors*Body205 $fMinCtors*Body193

a2_r1Flv
a2_r1Flv = \ _ _ -> $wa10

$fMinCtors*Body192
$fMinCtors*Body192 = a2_r1Flv `cast` ...

$fMinCtors*Body276
$fMinCtors*Body276 =
  SIdx
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    $fMinCtors*Body221

$fMinCtors*Body275
$fMinCtors*Body275 =
  VCons
    @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body167

$fMinCtors*Body274
$fMinCtors*Body274 =
  VCons
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body275

$fMinCtors*Body273
$fMinCtors*Body273 =
  $fMinCtors*Even_w $fMinCtors*Body276 $fMinCtors*Body274

$fMinCtors*Body272
$fMinCtors*Body272 =
  ($fMinCtors*Body273 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body271
$fMinCtors*Body271 =
  Bin
    1 $fMinCtors*Body272 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body270
$fMinCtors*Body270 =
  $fMinCtors*Body246
    $fMinCtors(->)T12 ($fMinCtors*Body271 `cast` ...)

$fMinCtors*Body269
$fMinCtors*Body269 =
  $fMinCtors*Body228 ($wa10 `cast` ...) $fMinCtors*Body270

$wa18
$wa18 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body269 `cast` ...)

$fMinCtors*Body268
$fMinCtors*Body268 = \ _ _ -> $wa18

$fMinCtors*Body266
$fMinCtors*Body266 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body268 `cast` ...)
    ($fMinCtors*Body267 `cast` ...)

lvl23_r1Flw
lvl23_r1Flw = map ($fEnumInt_$csucc `cast` ...) $wa10

$fMinCtors*Body264
$fMinCtors*Body264 = \ _ _ -> lvl23_r1Flw

$fMinCtors*Body263
$fMinCtors*Body263 =
  SIdx
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    $fMinCtors*Body221

$fMinCtors*Body262
$fMinCtors*Body262 =
  VCons
    @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body167

$fMinCtors*Body261
$fMinCtors*Body261 =
  VCons
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body262

$fMinCtors*Body260
$fMinCtors*Body260 =
  $fMinCtors*Even_w $fMinCtors*Body263 $fMinCtors*Body261

$fMinCtors*Body259
$fMinCtors*Body259 =
  ($fMinCtors*Body260 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body258
$fMinCtors*Body258 =
  Bin
    1 $fMinCtors*Body259 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body257
$fMinCtors*Body257 =
  $fMinCtors*Body228
    ($wa10 `cast` ...) ($fMinCtors*Body258 `cast` ...)

$wa17
$wa17 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body257 `cast` ...)

$fMinCtors*Body256
$fMinCtors*Body256 = \ _ _ -> $wa17

$fMinCtors*Body255
$fMinCtors*Body255 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body264 `cast` ...)
    ($fMinCtors*Body256 `cast` ...)

$fMinCtors*Body211
$fMinCtors*Body211 = \ _ _ -> lvl23_r1Flw

$fMinCtors*Body210
$fMinCtors*Body210 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body212 `cast` ...)
    ($fMinCtors*Body211 `cast` ...)

$fMinCtors*Body209
$fMinCtors*Body209 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body229 `cast` ...)
    ($fMinCtors*Body210 `cast` ...)

$fMinCtors*Body208
$fMinCtors*Body208 = \ _ _ -> lvl23_r1Flw

$fMinCtors*Body191
$fMinCtors*Body191 = \ _ _ -> lvl23_r1Flw

$fMinCtors*Body190
$fMinCtors*Body190 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body208 `cast` ...)
    ($fMinCtors*Body191 `cast` ...)

$fMinCtors*Body186
$fMinCtors*Body186 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body190 `cast` ...)
    ($fMinCtors*Body187 `cast` ...)

$fMinCtors*Body185
$fMinCtors*Body185 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body209 `cast` ...)
    ($fMinCtors*Body186 `cast` ...)

$fMinCtors*Body773
$fMinCtors*Body773 =
  VCons
    @~ <(':) * Con ('[] *)> ($fMinCtors(->)(,)3 `cast` ...) ($WVNil)

$fMinCtors*Body804
$fMinCtors*Body804 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body773 `cast` ..., np1_a17ow, np0_a17ox)
    }

$wa54
$wa54 = mapKeysMonotonic $fMinCtors*Body804 $fMinCtors*Body193

$fMinCtors*Body354
$fMinCtors*Body354 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body353
$fMinCtors*Body353 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body354

$fMinCtors*Body352
$fMinCtors*Body352 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body353

$fMinCtors*Body351
$fMinCtors*Body351 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body352

$fMinCtors*Body350
$fMinCtors*Body350 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body351

$fMinCtors*Body349
$fMinCtors*Body349 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body350

$fMinCtors*Body348
$fMinCtors*Body348 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body349

$fMinCtors*Body347
$fMinCtors*Body347 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body348

$fMinCtors*Body346
$fMinCtors*Body346 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body347

$fMinCtors*Body345
$fMinCtors*Body345 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body346 `cast` ..., np1_a17ow, np0_a17ox)
    }

$wa22
$wa22 = mapKeysMonotonic $fMinCtors*Body345 $fMinCtors*Body193

a3_r1Flx
a3_r1Flx = \ _ _ -> $wa22

$fMinCtors*Body508
$fMinCtors*Body508 = a3_r1Flx `cast` ...

$fMinCtors*Body1012
$fMinCtors*Body1012 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($WZIdx)

$fMinCtors*Body1011
$fMinCtors*Body1011 =
  $fMinCtors*Even_w $fMinCtors*Body1012 $fMinCtors*Body22

$fMinCtors*Body1010
$fMinCtors*Body1010 =
  ($fMinCtors*Body1011 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body1009
$fMinCtors*Body1009 =
  Bin
    1 $fMinCtors*Body1010 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body1008
$fMinCtors*Body1008 =
  $fMinCtors*Body41
    $fMinCtors(->)T12 ($fMinCtors*Body1009 `cast` ...)

$fMinCtors*Body1007
$fMinCtors*Body1007 =
  $fMinCtors*Body74 ($wa22 `cast` ...) $fMinCtors*Body1008

$wa77
$wa77 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body1007 `cast` ...)

$fMinCtors*Body1006
$fMinCtors*Body1006 = \ _ _ -> $wa77

$fMinCtors*Body941
$fMinCtors*Body941 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body940
$fMinCtors*Body940 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body941

$fMinCtors*Body939
$fMinCtors*Body939 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body940

$fMinCtors*Body938
$fMinCtors*Body938 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body939

$fMinCtors*Body937
$fMinCtors*Body937 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body938

$fMinCtors*Body936
$fMinCtors*Body936 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body937

$fMinCtors*Body935
$fMinCtors*Body935 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body936

$fMinCtors*Body934
$fMinCtors*Body934 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body935

$fMinCtors*Body933
$fMinCtors*Body933 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body934

$fMinCtors*Body932
$fMinCtors*Body932 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body933 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body929
$fMinCtors*Body929 = map (id) $wa64

$fMinCtors*Body928
$fMinCtors*Body928 =
  mapKeysMonotonic $fMinCtors*Body932 $fMinCtors*Body929

$fMinCtors*Body927
$fMinCtors*Body927 =
  $fMinCtors*Body74
    ($fMinCtors*Body928 `cast` ...) ($wa22 `cast` ...)

$wa63
$wa63 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body927 `cast` ...)

$fMinCtors*Body926
$fMinCtors*Body926 = \ _ _ -> $wa63

$fMinCtors*Body914
$fMinCtors*Body914 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body926 `cast` ...)
    ($fMinCtors*Body915 `cast` ...)

lvl24_r1Fly
lvl24_r1Fly = map ($fEnumInt_$csucc `cast` ...) $wa22

$fMinCtors*Body717
$fMinCtors*Body717 = \ _ _ -> lvl24_r1Fly

$fMinCtors*Body716
$fMinCtors*Body716 = \ _ _ -> lvl24_r1Fly

$fMinCtors*Body715
$fMinCtors*Body715 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body717 `cast` ...)
    ($fMinCtors*Body716 `cast` ...)

$fMinCtors*Body687
$fMinCtors*Body687 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body715 `cast` ...)
    ($fMinCtors*Body688 `cast` ...)

$fMinCtors*Body663
$fMinCtors*Body663 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body687 `cast` ...)
    ($fMinCtors*Body664 `cast` ...)

$fMinCtors*Body507
$fMinCtors*Body507 = \ _ _ -> lvl24_r1Fly

$fMinCtors*Body506
$fMinCtors*Body506 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body509 `cast` ...)
    ($fMinCtors*Body507 `cast` ...)

$fMinCtors*Body502
$fMinCtors*Body502 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body506 `cast` ...)
    ($fMinCtors*Body503 `cast` ...)

$fMinCtors*Body501
$fMinCtors*Body501 =
  $fMinCtors*Body74 ($wa22 `cast` ...) $fMinCtors*Body418

$wa30
$wa30 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body501 `cast` ...)

$fMinCtors*Body500
$fMinCtors*Body500 = \ _ _ -> $wa30

$fMinCtors*Body455
$fMinCtors*Body455 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body73

$fMinCtors*Body454
$fMinCtors*Body454 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body455

$fMinCtors*Body453
$fMinCtors*Body453 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body454

$fMinCtors*Body452
$fMinCtors*Body452 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body453

$fMinCtors*Body451
$fMinCtors*Body451 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body452

$fMinCtors*Body450
$fMinCtors*Body450 =
  $fMinCtors*Even_w $fMinCtors*Body451 $fMinCtors*Body22

$fMinCtors*Body449
$fMinCtors*Body449 =
  ($fMinCtors*Body450 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body448
$fMinCtors*Body448 =
  Bin
    1 $fMinCtors*Body449 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body447
$fMinCtors*Body447 =
  $fMinCtors*Body74
    ($wa22 `cast` ...) ($fMinCtors*Body448 `cast` ...)

$fMinCtors*Body446
$fMinCtors*Body446 = \ _ _ -> $fMinCtors*Body447

$fMinCtors*Body497
$fMinCtors*Body497 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body73

$fMinCtors*Body496
$fMinCtors*Body496 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body497

$fMinCtors*Body495
$fMinCtors*Body495 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body496

$fMinCtors*Body494
$fMinCtors*Body494 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body495

$fMinCtors*Body493
$fMinCtors*Body493 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body494

$fMinCtors*Body492
$fMinCtors*Body492 =
  $fMinCtors*Even_w $fMinCtors*Body493 $fMinCtors*Body22

$fMinCtors*Body491
$fMinCtors*Body491 =
  ($fMinCtors*Body492 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body490
$fMinCtors*Body490 =
  Bin
    1 $fMinCtors*Body491 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body489
$fMinCtors*Body489 =
  $fMinCtors*Body74
    ($fMinCtors*Body490 `cast` ...) $fMinCtors*Body447

$fMinCtors*Body488
$fMinCtors*Body488 = \ _ _ -> $fMinCtors*Body489

lvl25_r1Flz
lvl25_r1Flz =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body489 `cast` ...)

$fMinCtors*Body499
$fMinCtors*Body499 = \ _ _ -> lvl25_r1Flz

$fMinCtors*Body498
$fMinCtors*Body498 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body500 `cast` ...)
    ($fMinCtors*Body499 `cast` ...)

$fMinCtors*Body487
$fMinCtors*Body487 = \ _ _ -> lvl25_r1Flz

$fMinCtors*Body477
$fMinCtors*Body477 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body487 `cast` ...)
    ($fMinCtors*Body478 `cast` ...)

$fMinCtors*Body476
$fMinCtors*Body476 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body498 `cast` ...)
    ($fMinCtors*Body477 `cast` ...)

$fMinCtors*Body475
$fMinCtors*Body475 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body502 `cast` ...)
    ($fMinCtors*Body476 `cast` ...)

lvl26_r1FlA
lvl26_r1FlA =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body447 `cast` ...)

$fMinCtors*Body445
$fMinCtors*Body445 = \ _ _ -> lvl26_r1FlA

$fMinCtors*Body442
$fMinCtors*Body442 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body445 `cast` ...)
    ($fMinCtors*Body443 `cast` ...)

$fMinCtors*Body441
$fMinCtors*Body441 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body456 `cast` ...)
    ($fMinCtors*Body442 `cast` ...)

$fMinCtors*Body384
$fMinCtors*Body384 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body383
$fMinCtors*Body383 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body384

$fMinCtors*Body382
$fMinCtors*Body382 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body383

$fMinCtors*Body381
$fMinCtors*Body381 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body382

$fMinCtors*Body380
$fMinCtors*Body380 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body381

$fMinCtors*Body379
$fMinCtors*Body379 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body380

$fMinCtors*Body378
$fMinCtors*Body378 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body379

$fMinCtors*Body377
$fMinCtors*Body377 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body378

$fMinCtors*Body376
$fMinCtors*Body376 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body377

$fMinCtors*Body375
$fMinCtors*Body375 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body376 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body374
$fMinCtors*Body374 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $wa21

$fMinCtors*Body373
$fMinCtors*Body373 = map (id) $fMinCtors*Body374

$fMinCtors*Body372
$fMinCtors*Body372 =
  mapKeysMonotonic $fMinCtors*Body375 $fMinCtors*Body373

$fMinCtors*Body371
$fMinCtors*Body371 =
  $fMinCtors*Body74
    ($wa22 `cast` ...) ($fMinCtors*Body372 `cast` ...)

$fMinCtors*Body370
$fMinCtors*Body370 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body369
$fMinCtors*Body369 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body370

$fMinCtors*Body368
$fMinCtors*Body368 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body369

$fMinCtors*Body367
$fMinCtors*Body367 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body368

$fMinCtors*Body366
$fMinCtors*Body366 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body367

$fMinCtors*Body365
$fMinCtors*Body365 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body366

$fMinCtors*Body364
$fMinCtors*Body364 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body365

$fMinCtors*Body363
$fMinCtors*Body363 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body364

$fMinCtors*Body362
$fMinCtors*Body362 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body363

$fMinCtors*Body361
$fMinCtors*Body361 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body362 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body360
$fMinCtors*Body360 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body117

$fMinCtors*Body359
$fMinCtors*Body359 = map (id) $fMinCtors*Body360

$fMinCtors*Body358
$fMinCtors*Body358 =
  mapKeysMonotonic $fMinCtors*Body361 $fMinCtors*Body359

$fMinCtors*Body357
$fMinCtors*Body357 =
  $fMinCtors*Body74 ($fMinCtors*Body358 `cast` ...) ($wa5 `cast` ...)

$fMinCtors*Body356
$fMinCtors*Body356 =
  $fMinCtors*Body74 $fMinCtors*Body371 $fMinCtors*Body357

$wa23
$wa23 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body356 `cast` ...)

$fMinCtors*Body355
$fMinCtors*Body355 = \ _ _ -> $wa23

$fMinCtors*Body746
$fMinCtors*Body746 =
  $fMinCtors*[]_$cminCtors ($fMinCtors*Body747 `cast` ...)

$fMinCtors*Body745
$fMinCtors*Body745 = $fMinCtors*Body746 (Proxy)

$fMinCtors*Body981
$fMinCtors*Body981 =
  addMinima1 $fMinCtors*Body745 $fMinCtors*Body745

$wa73
$wa73 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body981 `cast` ...)

$fMinCtors*Body980
$fMinCtors*Body980 = \ _ -> $wa73

$fMinCtors*FunDep_$cminCtors
$fMinCtors*FunDep_$cminCtors = $fMinCtors*Body980 `cast` ...

$fMinCtors*FunDep
$fMinCtors*FunDep = $fMinCtors*Body980 `cast` ...

$fMinCtors*Body979
$fMinCtors*Body979 =
  $fMinCtors*[]_$cminCtors ($fMinCtors*Body980 `cast` ...)

$fMinCtors*Body758
$fMinCtors*Body758 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body757
$fMinCtors*Body757 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body758

$fMinCtors*Body756
$fMinCtors*Body756 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body757

$fMinCtors*Body755
$fMinCtors*Body755 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body756

$fMinCtors*Body754
$fMinCtors*Body754 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body755

$fMinCtors*Body753
$fMinCtors*Body753 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body754

$fMinCtors*Body752
$fMinCtors*Body752 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body753

$fMinCtors*Body751
$fMinCtors*Body751 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body752

$fMinCtors*Body750
$fMinCtors*Body750 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body751

$fMinCtors*Body749
$fMinCtors*Body749 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body750 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body744
$fMinCtors*Body744 = map (id) ($fMinCtors*Body745 `cast` ...)

$wa48
$wa48 = mapKeysMonotonic $fMinCtors*Body749 $fMinCtors*Body744

$fMinCtors*Body440
$fMinCtors*Body440 =
  addMinima1 ($wa11 `cast` ...) ($fMinCtors(->)(,)2 `cast` ...)

$fMinCtors*Body577
$fMinCtors*Body577 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body440 `cast` ...)

$fMinCtors*Body576
$fMinCtors*Body576 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body575
$fMinCtors*Body575 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body576

$fMinCtors*Body574
$fMinCtors*Body574 =
  $fMinCtors*Even_w $fMinCtors*Body575 $fMinCtors*Body22

$fMinCtors*Body573
$fMinCtors*Body573 =
  ($fMinCtors*Body574 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body572
$fMinCtors*Body572 =
  Bin
    1 $fMinCtors*Body573 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body571
$fMinCtors*Body571 =
  $fMinCtors*Body41
    ($fMinCtors*Body577 `cast` ...) ($fMinCtors*Body572 `cast` ...)

$fMinCtors*Body570
$fMinCtors*Body570 =
  $fMinCtors*Body41 $fMinCtors(->)T12 $fMinCtors*Body571

$fMinCtors*Body584
$fMinCtors*Body584 =
  $fMinCtors*Body74 ($wa22 `cast` ...) $fMinCtors*Body570

$wa37
$wa37 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body584 `cast` ...)

$fMinCtors*Body583
$fMinCtors*Body583 = \ _ _ -> $wa37

$fMinCtors*Body582
$fMinCtors*Body582 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body581
$fMinCtors*Body581 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body582

$fMinCtors*Body580
$fMinCtors*Body580 =
  $fMinCtors*Even_w $fMinCtors*Body581 $fMinCtors*Body22

$fMinCtors*Body579
$fMinCtors*Body579 =
  ($fMinCtors*Body580 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body578
$fMinCtors*Body578 =
  Bin
    1 $fMinCtors*Body579 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body569
$fMinCtors*Body569 =
  $fMinCtors*Body74
    ($fMinCtors*Body578 `cast` ...) $fMinCtors*Body570

$wa36
$wa36 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body569 `cast` ...)

$fMinCtors*Body568
$fMinCtors*Body568 = \ _ _ -> $wa36

$fMinCtors*Body567
$fMinCtors*Body567 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body583 `cast` ...)
    ($fMinCtors*Body568 `cast` ...)

$fMinCtors*Body439
$fMinCtors*Body439 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body440 `cast` ...)

$fMinCtors*Body438
$fMinCtors*Body438 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body73

$fMinCtors*Body437
$fMinCtors*Body437 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body438

$fMinCtors*Body436
$fMinCtors*Body436 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body437

$fMinCtors*Body435
$fMinCtors*Body435 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body436

$fMinCtors*Body434
$fMinCtors*Body434 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body435

$fMinCtors*Body433
$fMinCtors*Body433 =
  $fMinCtors*Even_w $fMinCtors*Body434 $fMinCtors*Body22

$fMinCtors*Body432
$fMinCtors*Body432 =
  ($fMinCtors*Body433 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body431
$fMinCtors*Body431 =
  Bin
    1 $fMinCtors*Body432 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body430
$fMinCtors*Body430 =
  $fMinCtors*Body41
    ($fMinCtors*Body439 `cast` ...) ($fMinCtors*Body431 `cast` ...)

$fMinCtors*Body429
$fMinCtors*Body429 =
  $fMinCtors*Body41 $fMinCtors(->)T12 $fMinCtors*Body430

$fMinCtors*Body428
$fMinCtors*Body428 =
  $fMinCtors*Body74 ($wa22 `cast` ...) $fMinCtors*Body429

$wa26
$wa26 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body428 `cast` ...)

$fMinCtors*Body427
$fMinCtors*Body427 = \ _ _ -> $wa26

$fMinCtors*Body415
$fMinCtors*Body415 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body427 `cast` ...)
    ($fMinCtors*Body416 `cast` ...)

$fDC0NumTyLit__$crejoin0
$fDC0NumTyLit__$crejoin0 =
  \ ds_d1tD3 ->
    case ds_d1tD3 of _ { NumTyLit_ x0_a1ohc ->
    (NumTyLit x0_a1ohc) `cast` ...
    }

$fGeneric0NumTyLit__$cobj0
$fGeneric0NumTyLit__$cobj0 =
  \ @ p1_t4j @ p0_t4k ds_d1tCL -> NumTyLit_ (ds_d1tCL `cast` ...)

$fGeneric0NumTyLit__$crep0
$fGeneric0NumTyLit__$crep0 =
  \ @ p1_t49 @ p0_t4a ds_d1tCv ->
    case ds_d1tCv of _ { NumTyLit_ x0_a1oha -> x0_a1oha `cast` ... }

$fGeneric0NumTyLit_
$fGeneric0NumTyLit_ =
  D:Generic0 $fGeneric0NumTyLit__$crep0 $fGeneric0NumTyLit__$cobj0

$fDC0StrTyLit__$crejoin0
$fDC0StrTyLit__$crejoin0 =
  \ ds_d1tCs ->
    case ds_d1tCs of _ { StrTyLit_ x0_a1oh9 ->
    (StrTyLit x0_a1oh9) `cast` ...
    }

$fGeneric0StrTyLit__$cobj0
$fGeneric0StrTyLit__$cobj0 =
  \ @ p1_t3Z @ p0_t40 ds_d1tCa -> StrTyLit_ (ds_d1tCa `cast` ...)

$fGeneric0StrTyLit__$crep0
$fGeneric0StrTyLit__$crep0 =
  \ @ p1_t3P @ p0_t3Q ds_d1tBU ->
    case ds_d1tBU of _ { StrTyLit_ x0_a1oh7 -> x0_a1oh7 `cast` ... }

$fGeneric0StrTyLit_
$fGeneric0StrTyLit_ =
  D:Generic0 $fGeneric0StrTyLit__$crep0 $fGeneric0StrTyLit__$cobj0

$fDT0TyLit_$cdisband0
$fDT0TyLit_$cdisband0 =
  \ @ p1_t3t @ p0_t3u ds_d1tBw ->
    case ds_d1tBw of _ {
      NumTyLit x0_a1oh5 ->
        (L ((NumTyLit_ x0_a1oh5) `cast` ...)) `cast` ...;
      StrTyLit x0_a1oh6 ->
        (R ((StrTyLit_ x0_a1oh6) `cast` ...)) `cast` ...
    }

$fDT0TyLit1
$fDT0TyLit1 =
  \ @ p1_X2xY @ p0_X2y0 ds_XgA1 ->
    case ds_XgA1 of _ {
      L x_ae6I ->
        case x_ae6I `cast` ... of _ { NumTyLit_ x0_a1ohc ->
        NumTyLit x0_a1ohc
        };
      R x_ae6J ->
        case x_ae6J `cast` ... of _ { StrTyLit_ x0_a1oh9 ->
        StrTyLit x0_a1oh9
        }
    }

$fDT0TyLit_$dReband0
$fDT0TyLit_$dReband0 = $fDT0TyLit1 `cast` ...

$fDT0TyLit
$fDT0TyLit = D:DT0 ($fDT0TyLit1 `cast` ...) $fDT0TyLit_$cdisband0

$fDC0StrTyLit_
$fDC0StrTyLit_ =
  D:DC0
    $fGeneric0StrTyLit_
    ($fDT0TyLit `cast` ...)
    $fDC0StrTyLit__$crejoin0

$fDC0NumTyLit_
$fDC0NumTyLit_ =
  D:DC0
    $fGeneric0NumTyLit_
    ($fDT0TyLit `cast` ...)
    $fDC0NumTyLit__$crejoin0

$fMinCtors*TyLit2
$fMinCtors*TyLit2 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body162 `cast` ...)

$wa89
$wa89 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body116
    $fMinCtors*TyLit2

$fMinCtors*TyLit1
$fMinCtors*TyLit1 = \ _ -> $wa89

$fMinCtors*TyLit_$cminCtors
$fMinCtors*TyLit_$cminCtors = $fMinCtors*TyLit1 `cast` ...

$fMinCtors*TyLit
$fMinCtors*TyLit = $fMinCtors*TyLit1 `cast` ...

$fMinCtors*Body166
$fMinCtors*Body166 =
  VCons
    @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body167

$fMinCtors*Body165
$fMinCtors*Body165 =
  VCons
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body166

$fMinCtors*Body164
$fMinCtors*Body164 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body165 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body161
$fMinCtors*Body161 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body162 `cast` ...)

$fMinCtors*Body160
$fMinCtors*Body160 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body116
    $fMinCtors*Body161

$fMinCtors*Body159
$fMinCtors*Body159 = map (id) $fMinCtors*Body160

$fMinCtors*Body158
$fMinCtors*Body158 =
  mapKeysMonotonic $fMinCtors*Body164 $fMinCtors*Body159

$wa8
$wa8 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body158

$fMinCtors*Body157
$fMinCtors*Body157 = \ _ _ -> $wa8

$fMinCtors*Body156
$fMinCtors*Body156 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body168 `cast` ...)
    ($fMinCtors*Body157 `cast` ...)

$fMinCtors*Body155
$fMinCtors*Body155 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body170 `cast` ...)
    ($fMinCtors*Body156 `cast` ...)

$fMinCtors*Body154
$fMinCtors*Body154 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body173 `cast` ...)
    ($fMinCtors*Body155 `cast` ...)

$fMinCtors*Body153
$fMinCtors*Body153 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd12
    ($fMinCtors*Body185 `cast` ...)
    ($fMinCtors*Body154 `cast` ...)

$fMinCtors*Body288
$fMinCtors*Body288 =
  SIdx
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    $fMinCtors*Body221

$fMinCtors*Body287
$fMinCtors*Body287 =
  $fEqMap_$c== $fMinCtors*Body_$dEq16 $fMinCtors*Body_$dEq15

$fMinCtors*Body286
$fMinCtors*Body286 =
  \ ds_d8jH ds1_d8jI ->
    case ds_d8jH `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a5_a7Xv as_a7Xw ->
    case ds1_d8jI `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors*Body287 (a5_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8UQ @ ts3_X8US rb2_X97k a6_X8G2 as1_X8G4 ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8V0 @ ts4_X8V2 rb3_X97p b1_X8Gb bs1_X8Gd ->
        case $fMinCtors*Body287 (a6_X8G2 `cast` ...) (b1_X8Gb `cast` ...)
        of _ {
          False -> False;
          True ->
            case as1_X8G4 `cast` ...
            of _ { VCons @ t5_X8V8 @ ts5_X8Va rb4_X97C a7_X8Gk _ ->
            case bs1_X8Gd `cast` ...
            of _ { VCons @ t6_X8Vi @ ts6_X8Vk rb5_X97H b2_X8Gt _ ->
            $fMinCtors*Body287 (a7_X8Gk `cast` ...) (b2_X8Gt `cast` ...)
            }
            }
        }
        }
        }
    }
    }
    }

$fMinCtors*Body265
$fMinCtors*Body265 =
  $fMinCtors*Body266 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors*Body254
$fMinCtors*Body254 =
  $fMinCtors*Body255 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors*Body152
$fMinCtors*Body152 =
  $fMinCtors*Body153 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors*Body151
$fMinCtors*Body151 =
  VCons
    @~ <(':) * Type ('[] *)> ($fMinCtors*Body152 `cast` ...) ($WVNil)

$fMinCtors*Body150
$fMinCtors*Body150 =
  VCons
    @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
    ($fMinCtors*Body254 `cast` ...)
    $fMinCtors*Body151

$fMinCtors*Body149
$fMinCtors*Body149 =
  VCons
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    ($fMinCtors*Body265 `cast` ...)
    $fMinCtors*Body150

$fMinCtors*Body148
$fMinCtors*Body148 =
  $wsolve_sibling_set'
    ($fMinCtors*Body286 `cast` ...)
    ($fMinCtors*Body277 `cast` ...)
    ($fMinCtors*Body149 `cast` ...)

$fMinCtors*Body147
$fMinCtors*Body147 =
  cvAt1 ($fMinCtors*Body288 `cast` ...) $fMinCtors*Body148

$fMinCtors*Body729
$fMinCtors*Body729 = \ _ _ -> $fMinCtors*Body147

$fMinCtors*Body_$cminCtors1
$fMinCtors*Body_$cminCtors1 = \ _ -> $fMinCtors*Body147

$fMinCtors*Type
$fMinCtors*Type = $fMinCtors*Body_$cminCtors1 `cast` ...

$fMinCtors*Body289
$fMinCtors*Body289 = map ($fEnumInt_$csucc `cast` ...) $wa11

$fMinCtors*Body146
$fMinCtors*Body146 =
  addMinima1 ($wa11 `cast` ...) $fMinCtors*Body147

$fMinCtors*Body145
$fMinCtors*Body145 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body146 `cast` ...)

$wa7
$wa7 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body289
    $fMinCtors*Body145

$fMinCtors*Body144
$fMinCtors*Body144 = \ _ -> $wa7

$fMinCtors*RuleBndr_$cminCtors
$fMinCtors*RuleBndr_$cminCtors = $fMinCtors*Body144 `cast` ...

$fMinCtors*RuleBndr
$fMinCtors*RuleBndr = $fMinCtors*Body144 `cast` ...

$fMinCtors*Body143
$fMinCtors*Body143 =
  $fMinCtors*[]_$cminCtors ($fMinCtors*Body144 `cast` ...)

$fMinCtors*Body311
$fMinCtors*Body311 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body310
$fMinCtors*Body310 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body311

$fMinCtors*Body309
$fMinCtors*Body309 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body310

$fMinCtors*Body308
$fMinCtors*Body308 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body309

$fMinCtors*Body307
$fMinCtors*Body307 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body308

$fMinCtors*Body306
$fMinCtors*Body306 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body307

$fMinCtors*Body305
$fMinCtors*Body305 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body306

$fMinCtors*Body304
$fMinCtors*Body304 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body305

$fMinCtors*Body303
$fMinCtors*Body303 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body304

$fMinCtors*Body302
$fMinCtors*Body302 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body303 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body301
$fMinCtors*Body301 = map (id) ($fMinCtors*Body162 `cast` ...)

$fMinCtors*Body300
$fMinCtors*Body300 =
  mapKeysMonotonic $fMinCtors*Body302 $fMinCtors*Body301

$fMinCtors*Body299
$fMinCtors*Body299 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body298
$fMinCtors*Body298 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body299

$fMinCtors*Body297
$fMinCtors*Body297 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body298

$fMinCtors*Body296
$fMinCtors*Body296 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body297

$fMinCtors*Body295
$fMinCtors*Body295 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body296

$fMinCtors*Body294
$fMinCtors*Body294 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body295

$fMinCtors*Body293
$fMinCtors*Body293 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body294

$fMinCtors*Body292
$fMinCtors*Body292 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body293

$fMinCtors*Body291
$fMinCtors*Body291 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body292

$fMinCtors*Body290
$fMinCtors*Body290 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body291 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body142
$fMinCtors*Body142 = $fMinCtors*Body143 (Proxy)

$fMinCtors*Body141
$fMinCtors*Body141 = map (id) ($fMinCtors*Body142 `cast` ...)

$fMinCtors*Body140
$fMinCtors*Body140 =
  mapKeysMonotonic $fMinCtors*Body290 $fMinCtors*Body141

$fMinCtors*Body139
$fMinCtors*Body139 =
  $fMinCtors*Body74
    ($fMinCtors*Body300 `cast` ...) ($fMinCtors*Body140 `cast` ...)

$fMinCtors*Body138
$fMinCtors*Body138 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body137
$fMinCtors*Body137 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body138

$fMinCtors*Body136
$fMinCtors*Body136 =
  $fMinCtors*Even_w $fMinCtors*Body137 $fMinCtors*Body22

$fMinCtors*Body135
$fMinCtors*Body135 =
  ($fMinCtors*Body136 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body134
$fMinCtors*Body134 =
  Bin
    1 $fMinCtors*Body135 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body133
$fMinCtors*Body133 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body132
$fMinCtors*Body132 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body133

$fMinCtors*Body131
$fMinCtors*Body131 =
  $fMinCtors*Even_w $fMinCtors*Body132 $fMinCtors*Body22

$fMinCtors*Body130
$fMinCtors*Body130 =
  ($fMinCtors*Body131 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body129
$fMinCtors*Body129 =
  Bin
    1 $fMinCtors*Body130 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body113
$fMinCtors*Body113 =
  $fMinCtors*Body74 ($fMinCtors*Body129 `cast` ...) ($wa5 `cast` ...)

$fMinCtors*Body112
$fMinCtors*Body112 =
  $fMinCtors*Body74
    ($fMinCtors*Body134 `cast` ...) $fMinCtors*Body113

$fMinCtors*Body111
$fMinCtors*Body111 =
  $fMinCtors*Body74 $fMinCtors*Body139 $fMinCtors*Body112

$wa4
$wa4 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body111 `cast` ...)

$fMinCtors*Body110
$fMinCtors*Body110 = \ _ _ -> $wa4

$fMinCtors*Body953
$fMinCtors*Body953 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body117

$fMinCtors*Body952
$fMinCtors*Body952 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $wa70

$fMinCtors*Body951
$fMinCtors*Body951 =
  addMinima1
    ($fMinCtors*Body953 `cast` ...) ($fMinCtors*Body952 `cast` ...)

$fMinCtors*Body950
$fMinCtors*Body950 =
  addMinima1 $fMinCtors*Body162 $fMinCtors*Body146

$fMinCtors*Body949
$fMinCtors*Body949 =
  addMinima1 $fMinCtors*Body951 $fMinCtors*Body950

$wa69
$wa69 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body949 `cast` ...)

$fMinCtors*Body948
$fMinCtors*Body948 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body117

$fMinCtors*Body947
$fMinCtors*Body947 =
  addMinima1 ($fMinCtors*Body948 `cast` ...) $fMinCtors*Body162

$fMinCtors*Body946
$fMinCtors*Body946 =
  addMinima1 $fMinCtors*Body947 $fMinCtors*Body146

$wa68
$wa68 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body946 `cast` ...)

$wa67
$wa67 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $wa69
    $wa68

$fMinCtors*Foreign1
$fMinCtors*Foreign1 = \ _ -> $wa67

$fMinCtors*Foreign_$cminCtors
$fMinCtors*Foreign_$cminCtors = $fMinCtors*Foreign1 `cast` ...

$fMinCtors*Foreign
$fMinCtors*Foreign = $fMinCtors*Foreign1 `cast` ...

$fMinCtors*Body963
$fMinCtors*Body963 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body962
$fMinCtors*Body962 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body963

$fMinCtors*Body961
$fMinCtors*Body961 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body962

$fMinCtors*Body960
$fMinCtors*Body960 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body961

$fMinCtors*Body959
$fMinCtors*Body959 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body960

$fMinCtors*Body958
$fMinCtors*Body958 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body959

$fMinCtors*Body957
$fMinCtors*Body957 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body958

$fMinCtors*Body956
$fMinCtors*Body956 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body957

$fMinCtors*Body955
$fMinCtors*Body955 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body956

$fMinCtors*Body954
$fMinCtors*Body954 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body955 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body945
$fMinCtors*Body945 = map (id) $wa67

$fMinCtors*Body944
$fMinCtors*Body944 =
  mapKeysMonotonic $fMinCtors*Body954 $fMinCtors*Body945

$wa66
$wa66 = map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body944

$fMinCtors*Body943
$fMinCtors*Body943 = \ _ _ -> $wa66

$fMinCtors*Body324
$fMinCtors*Body324 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body323
$fMinCtors*Body323 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body324

$fMinCtors*Body322
$fMinCtors*Body322 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body323

$fMinCtors*Body321
$fMinCtors*Body321 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body322

$fMinCtors*Body320
$fMinCtors*Body320 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body321

$fMinCtors*Body319
$fMinCtors*Body319 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body320

$fMinCtors*Body318
$fMinCtors*Body318 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body319

$fMinCtors*Body317
$fMinCtors*Body317 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body318

$fMinCtors*Body316
$fMinCtors*Body316 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body317

$fMinCtors*Body315
$fMinCtors*Body315 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body316 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body314
$fMinCtors*Body314 = map (id) ($fMinCtors*Body147 `cast` ...)

$wa19
$wa19 = mapKeysMonotonic $fMinCtors*Body315 $fMinCtors*Body314

a4_r1FlB
a4_r1FlB = \ _ _ -> $wa19

$fMinCtors*Body313
$fMinCtors*Body313 = a4_r1FlB `cast` ...

$fMinCtors*Body344
$fMinCtors*Body344 =
  $fMinCtors*Body74 ($wa22 `cast` ...) ($wa19 `cast` ...)

$fMinCtors*Body965
$fMinCtors*Body965 = \ _ _ -> $fMinCtors*Body344

lvl27_r1FlC
lvl27_r1FlC =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body344 `cast` ...)

$fMinCtors*Body964
$fMinCtors*Body964 = \ _ _ -> lvl27_r1FlC

$fMinCtors*Body942
$fMinCtors*Body942 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body964 `cast` ...)
    ($fMinCtors*Body943 `cast` ...)

$fMinCtors*Body913
$fMinCtors*Body913 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body942 `cast` ...)
    ($fMinCtors*Body914 `cast` ...)

$fMinCtors*Body343
$fMinCtors*Body343 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body342
$fMinCtors*Body342 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body343

$fMinCtors*Body341
$fMinCtors*Body341 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body342

$fMinCtors*Body340
$fMinCtors*Body340 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body341

$fMinCtors*Body339
$fMinCtors*Body339 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body340

$fMinCtors*Body338
$fMinCtors*Body338 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body339

$fMinCtors*Body337
$fMinCtors*Body337 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body338

$fMinCtors*Body336
$fMinCtors*Body336 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body337

$fMinCtors*Body335
$fMinCtors*Body335 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body336

$fMinCtors*Body334
$fMinCtors*Body334 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body335 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body333
$fMinCtors*Body333 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $wa21

$fMinCtors*Body332
$fMinCtors*Body332 =
  map ($fEnumInt_$csucc `cast` ...) $fMinCtors*Body333

$fMinCtors*Body331
$fMinCtors*Body331 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body332

$fMinCtors*Body330
$fMinCtors*Body330 = map (id) $fMinCtors*Body331

$fMinCtors*Body329
$fMinCtors*Body329 =
  mapKeysMonotonic $fMinCtors*Body334 $fMinCtors*Body330

$fMinCtors*Body328
$fMinCtors*Body328 =
  $fMinCtors*Body74 ($fMinCtors*Body329 `cast` ...) ($wa5 `cast` ...)

$fMinCtors*Body327
$fMinCtors*Body327 =
  $fMinCtors*Body74 $fMinCtors*Body344 $fMinCtors*Body328

$wa20
$wa20 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body327 `cast` ...)

$fMinCtors*Body326
$fMinCtors*Body326 = \ _ _ -> $wa20

$fMinCtors*Body325
$fMinCtors*Body325 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body355 `cast` ...)
    ($fMinCtors*Body326 `cast` ...)

$fMinCtors*Body591
$fMinCtors*Body591 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Body590
$fMinCtors*Body590 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body591

$fMinCtors*Body589
$fMinCtors*Body589 =
  $fMinCtors*Even_w $fMinCtors*Body590 $fMinCtors*Body22

$fMinCtors*Body588
$fMinCtors*Body588 =
  ($fMinCtors*Body589 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body587
$fMinCtors*Body587 =
  Bin
    1 $fMinCtors*Body588 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body586
$fMinCtors*Body586 =
  $fMinCtors*Body74
    ($fMinCtors*Body587 `cast` ...) ($wa19 `cast` ...)

$wa38
$wa38 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body586 `cast` ...)

$fMinCtors*Body585
$fMinCtors*Body585 = \ _ _ -> $wa38

$fMinCtors*Body566
$fMinCtors*Body566 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body585 `cast` ...)
    ($fMinCtors*Body567 `cast` ...)

$fMinCtors*Body565
$fMinCtors*Body565 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body592 `cast` ...)
    ($fMinCtors*Body566 `cast` ...)

$fMinCtors*Body564
$fMinCtors*Body564 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body615 `cast` ...)
    ($fMinCtors*Body565 `cast` ...)

$fMinCtors*Body563
$fMinCtors*Body563 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body663 `cast` ...)
    ($fMinCtors*Body564 `cast` ...)

$fMinCtors*Body414
$fMinCtors*Body414 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body73

$fMinCtors*Body413
$fMinCtors*Body413 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body414

$fMinCtors*Body412
$fMinCtors*Body412 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body413

$fMinCtors*Body411
$fMinCtors*Body411 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body412

$fMinCtors*Body410
$fMinCtors*Body410 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body411

$fMinCtors*Body409
$fMinCtors*Body409 =
  $fMinCtors*Even_w $fMinCtors*Body410 $fMinCtors*Body22

$fMinCtors*Body408
$fMinCtors*Body408 =
  ($fMinCtors*Body409 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body407
$fMinCtors*Body407 =
  Bin
    1 $fMinCtors*Body408 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body406
$fMinCtors*Body406 =
  $fMinCtors*Body74
    ($fMinCtors*Body407 `cast` ...) ($wa19 `cast` ...)

$wa25
$wa25 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body406 `cast` ...)

$fMinCtors*Body405
$fMinCtors*Body405 = \ _ _ -> $wa25

$fMinCtors*Body389
$fMinCtors*Body389 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body405 `cast` ...)
    ($fMinCtors*Body390 `cast` ...)

$fMinCtors*Body388
$fMinCtors*Body388 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body415 `cast` ...)
    ($fMinCtors*Body389 `cast` ...)

$fMinCtors*Body387
$fMinCtors*Body387 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body441 `cast` ...)
    ($fMinCtors*Body388 `cast` ...)

$fMinCtors*Body386
$fMinCtors*Body386 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body475 `cast` ...)
    ($fMinCtors*Body387 `cast` ...)

lvl28_r1FlD
lvl28_r1FlD = map ($fEnumInt_$csucc `cast` ...) $wa19

$fMinCtors*Body312
$fMinCtors*Body312 = \ _ _ -> lvl28_r1FlD

$fMinCtors*Body109
$fMinCtors*Body109 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body312 `cast` ...)
    ($fMinCtors*Body110 `cast` ...)

$fMinCtors*Body108
$fMinCtors*Body108 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body325 `cast` ...)
    ($fMinCtors*Body109 `cast` ...)

$fMinCtors*Body802
$fMinCtors*Body802 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $wa53

$fMinCtors*Body801
$fMinCtors*Body801 =
  addMinima1 ($fMinCtors*Body802 `cast` ...) $fMinCtors*Body147

$wa52
$wa52 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body801 `cast` ...)

$fMinCtors*Body823
$fMinCtors*Body823 = \ _ -> $wa52

$fMinCtors*Body822
$fMinCtors*Body822 =
  $fMinCtors*[]_$cminCtors ($fMinCtors*Body823 `cast` ...)

$fMinCtors*Body785
$fMinCtors*Body785 = addSiblingInTs $fMinCtors*Body_$dOrd16

$fMinCtors*Body824
$fMinCtors*Body824 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body773 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body821
$fMinCtors*Body821 = $fMinCtors*Body822 (Proxy)

$fMinCtors*Body820
$fMinCtors*Body820 = map (id) ($fMinCtors*Body821 `cast` ...)

$fMinCtors*Body819
$fMinCtors*Body819 =
  mapKeysMonotonic $fMinCtors*Body824 $fMinCtors*Body820

$fMinCtors*Body818
$fMinCtors*Body818 =
  $fMinCtors*Body785
    ($wa54 `cast` ...) ($fMinCtors*Body819 `cast` ...)

$wa57
$wa57 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body818 `cast` ...)

$fMinCtors*Body817
$fMinCtors*Body817 = \ _ _ -> $wa57

$fMinCtors*Body803
$fMinCtors*Body803 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body773 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body800
$fMinCtors*Body800 = map (id) $wa52

$wa51
$wa51 = mapKeysMonotonic $fMinCtors*Body803 $fMinCtors*Body800

$fMinCtors*Body799
$fMinCtors*Body799 =
  $fMinCtors*Body785 ($wa54 `cast` ...) ($wa51 `cast` ...)

$fMinCtors*Body798
$fMinCtors*Body798 =
  $fMinCtors*Body785 ($wa51 `cast` ...) $fMinCtors*Body799

$wa50
$wa50 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body798 `cast` ...)

$fMinCtors*Body797
$fMinCtors*Body797 = \ _ _ -> $wa50

$fMinCtors*Body815
$fMinCtors*Body815 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $wa53

$fMinCtors*Body814
$fMinCtors*Body814 =
  addMinima1 ($fMinCtors*Body815 `cast` ...) $fMinCtors*Body147

$fMinCtors*Body813
$fMinCtors*Body813 =
  addMinima1 ($wa11 `cast` ...) $fMinCtors*Body814

$wa56
$wa56 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body813 `cast` ...)

$fMinCtors*Body812
$fMinCtors*Body812 = \ _ -> $wa56

$fMinCtors*Body811
$fMinCtors*Body811 =
  $fMinCtors*[]_$cminCtors ($fMinCtors*Body812 `cast` ...)

$fMinCtors*Body816
$fMinCtors*Body816 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body773 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body810
$fMinCtors*Body810 = $fMinCtors*Body811 (Proxy)

$fMinCtors*Body809
$fMinCtors*Body809 = map (id) ($fMinCtors*Body810 `cast` ...)

$fMinCtors*Body808
$fMinCtors*Body808 =
  mapKeysMonotonic $fMinCtors*Body816 $fMinCtors*Body809

$fMinCtors*Body807
$fMinCtors*Body807 =
  $fMinCtors*Body785
    ($wa54 `cast` ...) ($fMinCtors*Body808 `cast` ...)

$wa55
$wa55 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body807 `cast` ...)

$fMinCtors*Body806
$fMinCtors*Body806 = \ _ _ -> $wa55

$fMinCtors*Body805
$fMinCtors*Body805 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd16
    ($fMinCtors*Body817 `cast` ...)
    ($fMinCtors*Body806 `cast` ...)

$fMinCtors*Body728
$fMinCtors*Body728 =
  $fMinCtors*[]_$cminCtors ($fMinCtors*Body_$cminCtors1 `cast` ...)

$fMinCtors*Body739
$fMinCtors*Body739 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body738
$fMinCtors*Body738 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body739

$fMinCtors*Body737
$fMinCtors*Body737 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body738

$fMinCtors*Body736
$fMinCtors*Body736 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body737

$fMinCtors*Body735
$fMinCtors*Body735 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body736

$fMinCtors*Body734
$fMinCtors*Body734 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body735

$fMinCtors*Body733
$fMinCtors*Body733 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body734

$fMinCtors*Body732
$fMinCtors*Body732 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body733

$fMinCtors*Body731
$fMinCtors*Body731 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body732

$fMinCtors*Body730
$fMinCtors*Body730 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body731 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body727
$fMinCtors*Body727 = $fMinCtors*Body728 (Proxy)

$fMinCtors*Body726
$fMinCtors*Body726 = map (id) ($fMinCtors*Body727 `cast` ...)

$wa46
$wa46 = mapKeysMonotonic $fMinCtors*Body730 $fMinCtors*Body726

$fMinCtors*Body725
$fMinCtors*Body725 =
  $fMinCtors*Body74 ($wa46 `cast` ...) ($wa19 `cast` ...)

$fMinCtors*Body724
$fMinCtors*Body724 =
  $fMinCtors*Body74 ($wa22 `cast` ...) $fMinCtors*Body725

$wa45
$wa45 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body724 `cast` ...)

$fMinCtors*Body723
$fMinCtors*Body723 = \ _ _ -> $wa45

$fMinCtors*Body795
$fMinCtors*Body795 =
  \ ds_X995 ds1_X997 ->
    case ds_X995 `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a5_a7Xv as_a7Xw ->
    case ds1_X997 `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors*Body287 (a5_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8VA @ ts3_X8VC rb2_X984 a6_X8GM as1_X8GO ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8VK @ ts4_X8VM rb3_X989 b1_X8GV bs1_X8GX ->
        case $fMinCtors*Body287 (a6_X8GM `cast` ...) (b1_X8GV `cast` ...)
        of _ {
          False -> False;
          True ->
            case as1_X8GO `cast` ...
            of _ { VCons @ t5_X8VS @ ts5_X8VU rb4_X98m a7_X8H4 _ ->
            case bs1_X8GX `cast` ...
            of _ { VCons @ t6_X8W2 @ ts6_X8W4 rb5_X98r b2_X8Hd _ ->
            $fMinCtors*Body287 (a7_X8H4 `cast` ...) (b2_X8Hd `cast` ...)
            }
            }
        }
        }
        }
    }
    }
    }

$fMinCtors*Body794
$fMinCtors*Body794 =
  VCons
    @~ <(':) * Type ('[] *)> ($fMinCtors*Body152 `cast` ...) ($WVNil)

$fMinCtors*Body793
$fMinCtors*Body793 =
  VCons
    @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
    ($fMinCtors*Body254 `cast` ...)
    $fMinCtors*Body794

$fMinCtors*Body792
$fMinCtors*Body792 =
  VCons
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    ($fMinCtors*Body265 `cast` ...)
    $fMinCtors*Body793

$fMinCtors*Body791
$fMinCtors*Body791 =
  $wsolve_sibling_set'
    ($fMinCtors*Body795 `cast` ...)
    ($fMinCtors*Body277 `cast` ...)
    ($fMinCtors*Body792 `cast` ...)

$fMinCtors*Body790
$fMinCtors*Body790 =
  cvAt1 ($fMinCtors*Body253 `cast` ...) $fMinCtors*Body791

$fMinCtors*Body_$cminCtors3
$fMinCtors*Body_$cminCtors3 = \ _ -> $fMinCtors*Body790

$fMinCtors*TyVarBndr
$fMinCtors*TyVarBndr = $fMinCtors*Body_$cminCtors3 `cast` ...

$fMinCtors*Body789
$fMinCtors*Body789 =
  $fMinCtors*[]_$cminCtors ($fMinCtors*Body_$cminCtors3 `cast` ...)

$fMinCtors*Body898
$fMinCtors*Body898 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body897
$fMinCtors*Body897 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body898

$fMinCtors*Body896
$fMinCtors*Body896 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body897

$fMinCtors*Body895
$fMinCtors*Body895 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body896

$fMinCtors*Body894
$fMinCtors*Body894 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body895

$fMinCtors*Body893
$fMinCtors*Body893 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body894

$fMinCtors*Body892
$fMinCtors*Body892 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body893

$fMinCtors*Body891
$fMinCtors*Body891 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body892

$fMinCtors*Body890
$fMinCtors*Body890 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body891

$fMinCtors*Body889
$fMinCtors*Body889 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body890 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body788
$fMinCtors*Body788 = $fMinCtors*Body789 (Proxy)

$fMinCtors*Body888
$fMinCtors*Body888 = map (id) ($fMinCtors*Body788 `cast` ...)

$wa61
$wa61 = mapKeysMonotonic $fMinCtors*Body889 $fMinCtors*Body888

$fMinCtors*Body995
$fMinCtors*Body995 =
  $fMinCtors*Body74 ($wa61 `cast` ...) ($wa19 `cast` ...)

$fMinCtors*Body994
$fMinCtors*Body994 =
  $fMinCtors*Body74 ($wa22 `cast` ...) $fMinCtors*Body995

$wa74
$wa74 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body994 `cast` ...)

$fMinCtors*Body993
$fMinCtors*Body993 = \ _ _ -> $wa74

$fMinCtors*Body912
$fMinCtors*Body912 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body911
$fMinCtors*Body911 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body912

$fMinCtors*Body910
$fMinCtors*Body910 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body911

$fMinCtors*Body909
$fMinCtors*Body909 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body910

$fMinCtors*Body908
$fMinCtors*Body908 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body909

$fMinCtors*Body907
$fMinCtors*Body907 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body908

$fMinCtors*Body906
$fMinCtors*Body906 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body907

$fMinCtors*Body905
$fMinCtors*Body905 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body906

$fMinCtors*Body904
$fMinCtors*Body904 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body905

$fMinCtors*Body903
$fMinCtors*Body903 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body904 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body902
$fMinCtors*Body902 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body117

$fMinCtors*Body901
$fMinCtors*Body901 = map (id) $fMinCtors*Body902

$fMinCtors*Body900
$fMinCtors*Body900 =
  mapKeysMonotonic $fMinCtors*Body903 $fMinCtors*Body901

$fMinCtors*Body899
$fMinCtors*Body899 =
  $fMinCtors*Body74
    ($fMinCtors*Body900 `cast` ...) ($wa22 `cast` ...)

$fMinCtors*Body887
$fMinCtors*Body887 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body886
$fMinCtors*Body886 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body887

$fMinCtors*Body885
$fMinCtors*Body885 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body886

$fMinCtors*Body884
$fMinCtors*Body884 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body885

$fMinCtors*Body883
$fMinCtors*Body883 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body884

$fMinCtors*Body882
$fMinCtors*Body882 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body883

$fMinCtors*Body881
$fMinCtors*Body881 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body882

$fMinCtors*Body880
$fMinCtors*Body880 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body881

$fMinCtors*Body879
$fMinCtors*Body879 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body880

$fMinCtors*Body878
$fMinCtors*Body878 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body879 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body877
$fMinCtors*Body877 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body147 `cast` ...)

$fMinCtors*Body876
$fMinCtors*Body876 =
  unionWithKey
    $fMinCtors(->)Either_$dOrd
    ($fMinCtors(->)Either4 `cast` ...)
    $fMinCtors*Body117
    $fMinCtors*Body877

$fMinCtors*Body875
$fMinCtors*Body875 = map (id) $fMinCtors*Body876

$fMinCtors*Body874
$fMinCtors*Body874 =
  mapKeysMonotonic $fMinCtors*Body878 $fMinCtors*Body875

$fMinCtors*Body873
$fMinCtors*Body873 =
  $fMinCtors*Body74
    ($wa61 `cast` ...) ($fMinCtors*Body874 `cast` ...)

$fMinCtors*Body872
$fMinCtors*Body872 =
  $fMinCtors*Body74 $fMinCtors*Body899 $fMinCtors*Body873

$wa60
$wa60 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body872 `cast` ...)

$fMinCtors*Body871
$fMinCtors*Body871 = \ _ _ -> $wa60

$fMinCtors*Body783
$fMinCtors*Body783 =
  \ ds_X99P ds1_X99R ->
    case ds_X99P `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a5_a7Xv as_a7Xw ->
    case ds1_X99R `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors*Body287 (a5_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8VG @ ts3_X8VI rb2_X98a a6_X8GS as1_X8GU ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8VQ @ ts4_X8VS rb3_X98f b1_X8H1 bs1_X8H3 ->
        case $fMinCtors*Body287 (a6_X8GS `cast` ...) (b1_X8H1 `cast` ...)
        of _ {
          False -> False;
          True ->
            case as1_X8GU `cast` ...
            of _ { VCons @ t5_X8VY @ ts5_X8W0 rb4_X98s a7_X8Ha _ ->
            case bs1_X8H3 `cast` ...
            of _ { VCons @ t6_X8W8 @ ts6_X8Wa rb5_X98x b2_X8Hj _ ->
            $fMinCtors*Body287 (a7_X8Ha `cast` ...) (b2_X8Hj `cast` ...)
            }
            }
        }
        }
        }
    }
    }
    }

$fMinCtors*Body782
$fMinCtors*Body782 =
  VCons
    @~ <(':) * Type ('[] *)> ($fMinCtors*Body152 `cast` ...) ($WVNil)

$fMinCtors*Body781
$fMinCtors*Body781 =
  VCons
    @~ <(':) * TyVarBndr ((':) * Type ('[] *))>
    ($fMinCtors*Body254 `cast` ...)
    $fMinCtors*Body782

$fMinCtors*Body780
$fMinCtors*Body780 =
  VCons
    @~ <(':) * Pred ((':) * TyVarBndr ((':) * Type ('[] *)))>
    ($fMinCtors*Body265 `cast` ...)
    $fMinCtors*Body781

$fMinCtors*Body779
$fMinCtors*Body779 =
  $wsolve_sibling_set'
    ($fMinCtors*Body783 `cast` ...)
    ($fMinCtors*Body277 `cast` ...)
    ($fMinCtors*Body780 `cast` ...)

$fMinCtors*Body778
$fMinCtors*Body778 = cvAt1 (($WZIdx) `cast` ...) $fMinCtors*Body779

$fMinCtors*Body_$cminCtors2
$fMinCtors*Body_$cminCtors2 = \ _ -> $fMinCtors*Body778

$fMinCtors*Pred
$fMinCtors*Pred = $fMinCtors*Body_$cminCtors2 `cast` ...

$fMinCtors*Body777
$fMinCtors*Body777 =
  $fMinCtors*[]_$cminCtors ($fMinCtors*Body_$cminCtors2 `cast` ...)

$fMinCtors*Body796
$fMinCtors*Body796 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body773 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body787
$fMinCtors*Body787 = map (id) ($fMinCtors*Body788 `cast` ...)

$fMinCtors*Body786
$fMinCtors*Body786 =
  mapKeysMonotonic $fMinCtors*Body796 $fMinCtors*Body787

$fMinCtors*Body784
$fMinCtors*Body784 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body773 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body776
$fMinCtors*Body776 = $fMinCtors*Body777 (Proxy)

$fMinCtors*Body775
$fMinCtors*Body775 = map (id) ($fMinCtors*Body776 `cast` ...)

$fMinCtors*Body774
$fMinCtors*Body774 =
  mapKeysMonotonic $fMinCtors*Body784 $fMinCtors*Body775

$fMinCtors*Body772
$fMinCtors*Body772 = $fMinCtors*Even_w ($WZIdx) $fMinCtors*Body773

$fMinCtors*Body771
$fMinCtors*Body771 =
  ($fMinCtors*Body772 `cast` ...,
   $fMinCtors(->)(,)3,
   $fMinCtors(->)(,)3)

$fMinCtors*Body770
$fMinCtors*Body770 =
  Bin
    1 $fMinCtors*Body771 ($fMinCtors(->)(,)3 `cast` ...) (Tip) (Tip)

$fMinCtors*Body769
$fMinCtors*Body769 =
  $fMinCtors*Body785
    ($fMinCtors*Body774 `cast` ...) ($fMinCtors*Body770 `cast` ...)

$fMinCtors*Body768
$fMinCtors*Body768 =
  $fMinCtors*Body785
    ($fMinCtors*Body786 `cast` ...) $fMinCtors*Body769

$wa49
$wa49 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body768 `cast` ...)

$fMinCtors*Body767
$fMinCtors*Body767 = \ _ _ -> $wa49

$fMinCtors*Body766
$fMinCtors*Body766 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd16
    ($fMinCtors*Body797 `cast` ...)
    ($fMinCtors*Body767 `cast` ...)

$fMinCtors*Body765
$fMinCtors*Body765 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd16
    ($fMinCtors*Body805 `cast` ...)
    ($fMinCtors*Body766 `cast` ...)

$fMinCtors*Body828
$fMinCtors*Body828 =
  \ ds_X9a4 ds1_X9a6 ->
    case ds_X9a4 `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a5_a7Xv _ ->
    case ds1_X9a6 `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx _ ->
    $fMinCtors*Body287 (a5_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    }
    }

$fMinCtors*Body764
$fMinCtors*Body764 =
  $fMinCtors*Body765 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors*Body763
$fMinCtors*Body763 =
  VCons
    @~ <(':) * Con ('[] *)> ($fMinCtors*Body764 `cast` ...) ($WVNil)

$fMinCtors*Body762
$fMinCtors*Body762 =
  $wsolve_sibling_set'
    ($fMinCtors*Body828 `cast` ...)
    ($fMinCtors*Body825 `cast` ...)
    ($fMinCtors*Body763 `cast` ...)

$fMinCtors*Body761
$fMinCtors*Body761 = cvAt1 (($WZIdx) `cast` ...) $fMinCtors*Body762

$fMinCtors*Body860
$fMinCtors*Body860 = \ _ _ -> $fMinCtors*Body761

$fMinCtors*Body_$cminCtors4
$fMinCtors*Body_$cminCtors4 = \ _ -> $fMinCtors*Body761

$fMinCtors*Con
$fMinCtors*Con = $fMinCtors*Body_$cminCtors4 `cast` ...

$fMinCtors*Body859
$fMinCtors*Body859 =
  $fMinCtors*[]_$cminCtors ($fMinCtors*Body_$cminCtors4 `cast` ...)

$fMinCtors*Body870
$fMinCtors*Body870 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body869
$fMinCtors*Body869 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body870

$fMinCtors*Body868
$fMinCtors*Body868 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body869

$fMinCtors*Body867
$fMinCtors*Body867 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body868

$fMinCtors*Body866
$fMinCtors*Body866 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body867

$fMinCtors*Body865
$fMinCtors*Body865 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body866

$fMinCtors*Body864
$fMinCtors*Body864 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body865

$fMinCtors*Body863
$fMinCtors*Body863 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body864

$fMinCtors*Body862
$fMinCtors*Body862 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body863

$fMinCtors*Body861
$fMinCtors*Body861 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body862 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body858
$fMinCtors*Body858 = $fMinCtors*Body859 (Proxy)

$fMinCtors*Body857
$fMinCtors*Body857 = map (id) ($fMinCtors*Body858 `cast` ...)

$fMinCtors*Body856
$fMinCtors*Body856 =
  mapKeysMonotonic $fMinCtors*Body861 $fMinCtors*Body857

$fMinCtors*Body855
$fMinCtors*Body855 =
  $fMinCtors*Body74
    ($fMinCtors*Body856 `cast` ...) ($wa48 `cast` ...)

$fMinCtors*Body838
$fMinCtors*Body838 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body837
$fMinCtors*Body837 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body838

$fMinCtors*Body836
$fMinCtors*Body836 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body837

$fMinCtors*Body835
$fMinCtors*Body835 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body836

$fMinCtors*Body834
$fMinCtors*Body834 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body835

$fMinCtors*Body833
$fMinCtors*Body833 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body834

$fMinCtors*Body832
$fMinCtors*Body832 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body833

$fMinCtors*Body831
$fMinCtors*Body831 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body832

$fMinCtors*Body830
$fMinCtors*Body830 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body831

$fMinCtors*Body829
$fMinCtors*Body829 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body830 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body760
$fMinCtors*Body760 = map (id) ($fMinCtors*Body761 `cast` ...)

$fMinCtors*Body759
$fMinCtors*Body759 =
  mapKeysMonotonic $fMinCtors*Body829 $fMinCtors*Body760

$fMinCtors*Body743
$fMinCtors*Body743 =
  $fMinCtors*Body74
    ($fMinCtors*Body759 `cast` ...) ($wa48 `cast` ...)

$fMinCtors*Body850
$fMinCtors*Body850 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body849
$fMinCtors*Body849 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body850

$fMinCtors*Body848
$fMinCtors*Body848 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body849

$fMinCtors*Body847
$fMinCtors*Body847 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body848

$fMinCtors*Body846
$fMinCtors*Body846 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body847

$fMinCtors*Body845
$fMinCtors*Body845 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body846

$fMinCtors*Body844
$fMinCtors*Body844 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body845

$fMinCtors*Body843
$fMinCtors*Body843 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body844

$fMinCtors*Body842
$fMinCtors*Body842 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body843

$fMinCtors*Body841
$fMinCtors*Body841 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body842 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body840
$fMinCtors*Body840 = map (id) ($fMinCtors*Body776 `cast` ...)

$wa58
$wa58 = mapKeysMonotonic $fMinCtors*Body841 $fMinCtors*Body840

$fMinCtors*Body839
$fMinCtors*Body839 =
  $fMinCtors*Body74 ($wa58 `cast` ...) ($wa22 `cast` ...)

$fMinCtors*Body1003
$fMinCtors*Body1003 =
  $fMinCtors*Body74 ($wa61 `cast` ...) $fMinCtors*Body855

$fMinCtors*Body1002
$fMinCtors*Body1002 =
  $fMinCtors*Body74 $fMinCtors*Body839 $fMinCtors*Body1003

$wa76
$wa76 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body1002 `cast` ...)

$fMinCtors*Body1001
$fMinCtors*Body1001 = \ _ _ -> $wa76

$fMinCtors*Body1000
$fMinCtors*Body1000 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body1004 `cast` ...)
    ($fMinCtors*Body1001 `cast` ...)

$fMinCtors*Body999
$fMinCtors*Body999 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body1006 `cast` ...)
    ($fMinCtors*Body1000 `cast` ...)

$fMinCtors*Body998
$fMinCtors*Body998 =
  $fMinCtors*Body74 ($wa61 `cast` ...) $fMinCtors*Body743

$fMinCtors*Body997
$fMinCtors*Body997 =
  $fMinCtors*Body74 $fMinCtors*Body839 $fMinCtors*Body998

$wa75
$wa75 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body997 `cast` ...)

$fMinCtors*Body996
$fMinCtors*Body996 = \ _ _ -> $wa75

$fMinCtors*Body992
$fMinCtors*Body992 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body996 `cast` ...)
    ($fMinCtors*Body993 `cast` ...)

$fMinCtors*Body991
$fMinCtors*Body991 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body128

$fMinCtors*Body990
$fMinCtors*Body990 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body991

$fMinCtors*Body989
$fMinCtors*Body989 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body990

$fMinCtors*Body988
$fMinCtors*Body988 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body989

$fMinCtors*Body987
$fMinCtors*Body987 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body988

$fMinCtors*Body986
$fMinCtors*Body986 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body987

$fMinCtors*Body985
$fMinCtors*Body985 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body986

$fMinCtors*Body984
$fMinCtors*Body984 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body985

$fMinCtors*Body983
$fMinCtors*Body983 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors(->)(,)3 `cast` ...)
    $fMinCtors*Body984

$fMinCtors*Body982
$fMinCtors*Body982 =
  \ ds1_d19UT ->
    case ds1_d19UT of _ { (np1_a17ow, np0_a17ox) ->
    ($fMinCtors*Body983 `cast` ..., np1_a17ow, np0_a17ox)
    }

$fMinCtors*Body978
$fMinCtors*Body978 = $fMinCtors*Body979 (Proxy)

$fMinCtors*Body977
$fMinCtors*Body977 = map (id) ($fMinCtors*Body978 `cast` ...)

$fMinCtors*Body976
$fMinCtors*Body976 =
  mapKeysMonotonic $fMinCtors*Body982 $fMinCtors*Body977

$fMinCtors*Body975
$fMinCtors*Body975 =
  $fMinCtors*Body74 ($fMinCtors*Body976 `cast` ...) $fMinCtors*Body52

$fMinCtors*Body974
$fMinCtors*Body974 =
  $fMinCtors*Body74 ($wa61 `cast` ...) $fMinCtors*Body975

$fMinCtors*Body973
$fMinCtors*Body973 =
  $fMinCtors*Body74 $fMinCtors*Body839 $fMinCtors*Body974

$wa72
$wa72 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body973 `cast` ...)

$fMinCtors*Body972
$fMinCtors*Body972 = \ _ _ -> $wa72

$fMinCtors*Body854
$fMinCtors*Body854 =
  $fMinCtors*Body74 ($wa46 `cast` ...) $fMinCtors*Body855

$fMinCtors*Body853
$fMinCtors*Body853 =
  $fMinCtors*Body74 $fMinCtors*Body839 $fMinCtors*Body854

$wa59
$wa59 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body853 `cast` ...)

$fMinCtors*Body852
$fMinCtors*Body852 = \ _ _ -> $wa59

$fMinCtors*Body851
$fMinCtors*Body851 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body871 `cast` ...)
    ($fMinCtors*Body852 `cast` ...)

$fMinCtors*Body742
$fMinCtors*Body742 =
  $fMinCtors*Body74 ($wa46 `cast` ...) $fMinCtors*Body743

$fMinCtors*Body741
$fMinCtors*Body741 =
  $fMinCtors*Body74 $fMinCtors*Body839 $fMinCtors*Body742

$wa47
$wa47 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body741 `cast` ...)

$fMinCtors*Body740
$fMinCtors*Body740 = \ _ _ -> $wa47

$fMinCtors*Body722
$fMinCtors*Body722 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body740 `cast` ...)
    ($fMinCtors*Body723 `cast` ...)

$fMinCtors*Body721
$fMinCtors*Body721 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body851 `cast` ...)
    ($fMinCtors*Body722 `cast` ...)

$fMinCtors*Body720
$fMinCtors*Body720 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body913 `cast` ...)
    ($fMinCtors*Body721 `cast` ...)

$fMinCtors*Body971
$fMinCtors*Body971 =
  $fMinCtors*Body74 ($wa19 `cast` ...) $fMinCtors*Body52

$fMinCtors*Body970
$fMinCtors*Body970 =
  $fMinCtors*Body74 ($wa58 `cast` ...) $fMinCtors*Body971

$wa71
$wa71 =
  map ($fEnumInt_$csucc `cast` ...) ($fMinCtors*Body970 `cast` ...)

$fMinCtors*Body969
$fMinCtors*Body969 = \ _ _ -> $wa71

$fMinCtors*Body968
$fMinCtors*Body968 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body972 `cast` ...)
    ($fMinCtors*Body969 `cast` ...)

$fMinCtors*Body967
$fMinCtors*Body967 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body992 `cast` ...)
    ($fMinCtors*Body968 `cast` ...)

$fMinCtors*Body966
$fMinCtors*Body966 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body999 `cast` ...)
    ($fMinCtors*Body967 `cast` ...)

$fMinCtors*Body719
$fMinCtors*Body719 =
  $fMinCtors(->)Even_$cminInfoRec
    $fMinCtors*Body_$dOrd
    ($fMinCtors*Body966 `cast` ...)
    ($fMinCtors*Body720 `cast` ...)

$fMinCtors*Stmt21
$fMinCtors*Stmt21 =
  SIdx
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    $fMinCtors*Body40

$fMinCtors*Stmt20
$fMinCtors*Stmt20 =
  SIdx
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    $fMinCtors*Stmt21

$fMinCtors*Stmt19
$fMinCtors*Stmt19 =
  SIdx
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    $fMinCtors*Stmt20

$fMinCtors*Stmt18
$fMinCtors*Stmt18 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Stmt19

$fMinCtors*Stmt17
$fMinCtors*Stmt17 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Stmt18

$fMinCtors*Stmt16
$fMinCtors*Stmt16 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Stmt17

$fMinCtors*Stmt15
$fMinCtors*Stmt15 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Stmt16

$fMinCtors*Stmt14
$fMinCtors*Stmt14 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Stmt15

$fMinCtors*Stmt13
$fMinCtors*Stmt13 =
  \ ds_X9bC ds1_X9bE ->
    case ds_X9bC `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a5_a7Xv as_a7Xw ->
    case ds1_X9bE `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors*Body287 (a5_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8Wb @ ts3_X8Wd rb2_X98F a6_X8Hn as1_X8Hp ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8Wl @ ts4_X8Wn rb3_X98K b1_X8Hw bs1_X8Hy ->
        case $fMinCtors*Body287 (a6_X8Hn `cast` ...) (b1_X8Hw `cast` ...)
        of _ {
          False -> False;
          True ->
            case as1_X8Hp `cast` ...
            of _ { VCons @ t5_X8Wt @ ts5_X8Wv rb4_X98X a7_X8HF as2_X8HH ->
            case bs1_X8Hy `cast` ...
            of _ { VCons @ t6_X8WD @ ts6_X8WF rb5_X992 b2_X8HO bs2_X8HQ ->
            case $fMinCtors*Body287 (a7_X8HF `cast` ...) (b2_X8HO `cast` ...)
            of _ {
              False -> False;
              True ->
                case as2_X8HH `cast` ...
                of _ { VCons @ t7_X8WL @ ts7_X8WN rb6_X99f a8_X8HX as3_X8HZ ->
                case bs2_X8HQ `cast` ...
                of _ { VCons @ t8_X8WV @ ts8_X8WX rb7_X99k b3_X8I6 bs3_X8I8 ->
                case $fMinCtors*Body287 (a8_X8HX `cast` ...) (b3_X8I6 `cast` ...)
                of _ {
                  False -> False;
                  True ->
                    case as3_X8HZ `cast` ...
                    of _ { VCons @ t9_X8X3 @ ts9_X8X5 rb8_X99x a9_X8If as4_X8Ih ->
                    case bs3_X8I8 `cast` ...
                    of _ { VCons @ t10_X8Xd @ ts10_X8Xf rb9_X99C b4_X8Io bs4_X8Iq ->
                    case $fMinCtors*Body287 (a9_X8If `cast` ...) (b4_X8Io `cast` ...)
                    of _ {
                      False -> False;
                      True ->
                        case as4_X8Ih `cast` ...
                        of _ { VCons @ t11_X8Xl @ ts11_X8Xn rb10_Xa37 a10_X8Ix as5_X8Iz ->
                        case bs4_X8Iq `cast` ...
                        of _ { VCons @ t12_X8Xv @ ts12_X8Xx rb11_X99U b5_X8IG bs5_X8II ->
                        case $fMinCtors*Body287 (a10_X8Ix `cast` ...) (b5_X8IG `cast` ...)
                        of _ {
                          False -> False;
                          True ->
                            case as5_X8Iz `cast` ...
                            of _ { VCons @ t13_X8XD @ ts13_X8XF rb12_X9a7 a11_X8IP as6_X8IR ->
                            case bs5_X8II `cast` ...
                            of _ { VCons @ t14_X8XN @ ts14_X8XP rb13_X9ac b6_X8IY bs6_X8J0 ->
                            case $fMinCtors*Body287 (a11_X8IP `cast` ...) (b6_X8IY `cast` ...)
                            of _ {
                              False -> False;
                              True ->
                                case as6_X8IR `cast` ...
                                of _ { VCons @ t15_X8XV @ ts15_X8XX rb14_X9ap a12_X8J7 as7_X8J9 ->
                                case bs6_X8J0 `cast` ...
                                of _ { VCons @ t16_X8Y5 @ ts16_X8Y7 rb15_X9au b7_X8Jg bs7_X8Ji ->
                                case $fMinCtors*Body287 (a12_X8J7 `cast` ...) (b7_X8Jg `cast` ...)
                                of _ {
                                  False -> False;
                                  True ->
                                    case as7_X8J9 `cast` ...
                                    of _
                                    { VCons @ t17_X8Yd @ ts17_X8Yf rb16_X9aH a13_X8Jp as8_X8Jr ->
                                    case bs7_X8Ji `cast` ...
                                    of _
                                    { VCons @ t18_X8Yn @ ts18_X8Yp rb17_X9aM b8_X8Jy bs8_X8JA ->
                                    case $fMinCtors*Body287
                                           (a13_X8Jp `cast` ...) (b8_X8Jy `cast` ...)
                                    of _ {
                                      False -> False;
                                      True ->
                                        case as8_X8Jr `cast` ...
                                        of _ { VCons @ t19_X8Yv @ ts19_X8Yx rb18_X9aZ a14_X8JH _ ->
                                        case bs8_X8JA `cast` ...
                                        of _ { VCons @ t20_X8YF @ ts20_X8YH rb19_X9b4 b9_X8JQ _ ->
                                        $fMinCtors*Body287
                                          (a14_X8JH `cast` ...) (b9_X8JQ `cast` ...)
                                        }
                                        }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                            }
                            }
                            }
                        }
                        }
                        }
                    }
                    }
                    }
                }
                }
                }
            }
            }
            }
        }
        }
        }
    }
    }
    }

$fMinCtors*Body1014
$fMinCtors*Body1014 =
  $fMinCtors*Body1015 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors*Body718
$fMinCtors*Body718 =
  $fMinCtors*Body719 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors*Body562
$fMinCtors*Body562 =
  $fMinCtors*Body563 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors*Body552
$fMinCtors*Body552 =
  $fMinCtors*Body553 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors*Body385
$fMinCtors*Body385 =
  $fMinCtors*Body386 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors*Body107
$fMinCtors*Body107 =
  $fMinCtors*Body108 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors*Body75
$fMinCtors*Body75 =
  $fMinCtors*Body76 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors*Body13
$fMinCtors*Body13 =
  $fMinCtors*Body14 ((Proxy) `cast` ...) ((Proxy) `cast` ...)

$fMinCtors*Stmt12
$fMinCtors*Stmt12 =
  VCons
    @~ <(':) * Stmt ('[] *)> ($fMinCtors*Body13 `cast` ...) ($WVNil)

$fMinCtors*Stmt11
$fMinCtors*Stmt11 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors*Body75 `cast` ...)
    $fMinCtors*Stmt12

$fMinCtors*Stmt10
$fMinCtors*Stmt10 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors*Body107 `cast` ...)
    $fMinCtors*Stmt11

$fMinCtors*Stmt9
$fMinCtors*Stmt9 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors*Body385 `cast` ...)
    $fMinCtors*Stmt10

$fMinCtors*Stmt8
$fMinCtors*Stmt8 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors*Body538 `cast` ...)
    $fMinCtors*Stmt9

$fMinCtors*Stmt7
$fMinCtors*Stmt7 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors*Body552 `cast` ...)
    $fMinCtors*Stmt8

$fMinCtors*Stmt6
$fMinCtors*Stmt6 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors*Body562 `cast` ...)
    $fMinCtors*Stmt7

$fMinCtors*Stmt5
$fMinCtors*Stmt5 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors*Body718 `cast` ...)
    $fMinCtors*Stmt6

$fMinCtors*Stmt4
$fMinCtors*Stmt4 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($wa78 `cast` ...)
    $fMinCtors*Stmt5

$fMinCtors*Stmt3
$fMinCtors*Stmt3 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors*Body1014 `cast` ...)
    $fMinCtors*Stmt4

$fMinCtors*Stmt2
$fMinCtors*Stmt2 =
  $wsolve_sibling_set'
    ($fMinCtors*Stmt13 `cast` ...)
    ($fMinCtors*Body1023 `cast` ...)
    ($fMinCtors*Stmt3 `cast` ...)

$fMinCtors*Stmt1
$fMinCtors*Stmt1 =
  cvAt1 ($fMinCtors*Stmt14 `cast` ...) $fMinCtors*Stmt2

$fMinCtors*Stmt_$cminCtors
$fMinCtors*Stmt_$cminCtors = \ _ -> $fMinCtors*Stmt1

$fMinCtors*Stmt
$fMinCtors*Stmt = $fMinCtors*Stmt_$cminCtors `cast` ...

$fMinCtors*Range20
$fMinCtors*Range20 =
  SIdx
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    $fMinCtors*Body613

$fMinCtors*Range19
$fMinCtors*Range19 =
  SIdx
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    $fMinCtors*Range20

$fMinCtors*Range18
$fMinCtors*Range18 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Range19

$fMinCtors*Range17
$fMinCtors*Range17 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Range18

$fMinCtors*Range16
$fMinCtors*Range16 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Range17

$fMinCtors*Range15
$fMinCtors*Range15 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Range16

$fMinCtors*Range14
$fMinCtors*Range14 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Range15

$fMinCtors*Range13
$fMinCtors*Range13 =
  \ ds_X9bK ds1_X9bM ->
    case ds_X9bK `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a5_a7Xv as_a7Xw ->
    case ds1_X9bM `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors*Body287 (a5_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8Wd @ ts3_X8Wf rb2_X98H a6_X8Hp as1_X8Hr ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8Wn @ ts4_X8Wp rb3_X98M b1_X8Hy bs1_X8HA ->
        case $fMinCtors*Body287 (a6_X8Hp `cast` ...) (b1_X8Hy `cast` ...)
        of _ {
          False -> False;
          True ->
            case as1_X8Hr `cast` ...
            of _ { VCons @ t5_X8Wv @ ts5_X8Wx rb4_X98Z a7_X8HH as2_X8HJ ->
            case bs1_X8HA `cast` ...
            of _ { VCons @ t6_X8WF @ ts6_X8WH rb5_X994 b2_X8HQ bs2_X8HS ->
            case $fMinCtors*Body287 (a7_X8HH `cast` ...) (b2_X8HQ `cast` ...)
            of _ {
              False -> False;
              True ->
                case as2_X8HJ `cast` ...
                of _ { VCons @ t7_X8WN @ ts7_X8WP rb6_X99h a8_X8HZ as3_X8I1 ->
                case bs2_X8HS `cast` ...
                of _ { VCons @ t8_X8WX @ ts8_X8WZ rb7_X99m b3_X8I8 bs3_X8Ia ->
                case $fMinCtors*Body287 (a8_X8HZ `cast` ...) (b3_X8I8 `cast` ...)
                of _ {
                  False -> False;
                  True ->
                    case as3_X8I1 `cast` ...
                    of _ { VCons @ t9_X8X5 @ ts9_X8X7 rb8_X99z a9_X8Ih as4_X8Ij ->
                    case bs3_X8Ia `cast` ...
                    of _ { VCons @ t10_X8Xf @ ts10_X8Xh rb9_X99E b4_X8Iq bs4_X8Is ->
                    case $fMinCtors*Body287 (a9_X8Ih `cast` ...) (b4_X8Iq `cast` ...)
                    of _ {
                      False -> False;
                      True ->
                        case as4_X8Ij `cast` ...
                        of _ { VCons @ t11_X8Xn @ ts11_X8Xp rb10_Xa3h a10_X8Iz as5_X8IB ->
                        case bs4_X8Is `cast` ...
                        of _ { VCons @ t12_X8Xx @ ts12_X8Xz rb11_X99W b5_X8II bs5_X8IK ->
                        case $fMinCtors*Body287 (a10_X8Iz `cast` ...) (b5_X8II `cast` ...)
                        of _ {
                          False -> False;
                          True ->
                            case as5_X8IB `cast` ...
                            of _ { VCons @ t13_X8XF @ ts13_X8XH rb12_X9a9 a11_X8IR as6_X8IT ->
                            case bs5_X8IK `cast` ...
                            of _ { VCons @ t14_X8XP @ ts14_X8XR rb13_X9ae b6_X8J0 bs6_X8J2 ->
                            case $fMinCtors*Body287 (a11_X8IR `cast` ...) (b6_X8J0 `cast` ...)
                            of _ {
                              False -> False;
                              True ->
                                case as6_X8IT `cast` ...
                                of _ { VCons @ t15_X8XX @ ts15_X8XZ rb14_X9ar a12_X8J9 as7_X8Jb ->
                                case bs6_X8J2 `cast` ...
                                of _ { VCons @ t16_X8Y7 @ ts16_X8Y9 rb15_X9aw b7_X8Ji bs7_X8Jk ->
                                case $fMinCtors*Body287 (a12_X8J9 `cast` ...) (b7_X8Ji `cast` ...)
                                of _ {
                                  False -> False;
                                  True ->
                                    case as7_X8Jb `cast` ...
                                    of _
                                    { VCons @ t17_X8Yf @ ts17_X8Yh rb16_X9aJ a13_X8Jr as8_X8Jt ->
                                    case bs7_X8Jk `cast` ...
                                    of _
                                    { VCons @ t18_X8Yp @ ts18_X8Yr rb17_X9aO b8_X8JA bs8_X8JC ->
                                    case $fMinCtors*Body287
                                           (a13_X8Jr `cast` ...) (b8_X8JA `cast` ...)
                                    of _ {
                                      False -> False;
                                      True ->
                                        case as8_X8Jt `cast` ...
                                        of _ { VCons @ t19_X8Yx @ ts19_X8Yz rb18_X9b1 a14_X8JJ _ ->
                                        case bs8_X8JC `cast` ...
                                        of _ { VCons @ t20_X8YH @ ts20_X8YJ rb19_X9b6 b9_X8JS _ ->
                                        $fMinCtors*Body287
                                          (a14_X8JJ `cast` ...) (b9_X8JS `cast` ...)
                                        }
                                        }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                            }
                            }
                            }
                        }
                        }
                        }
                    }
                    }
                    }
                }
                }
                }
            }
            }
            }
        }
        }
        }
    }
    }
    }

$fMinCtors*Range12
$fMinCtors*Range12 =
  VCons
    @~ <(':) * Stmt ('[] *)> ($fMinCtors*Body13 `cast` ...) ($WVNil)

$fMinCtors*Range11
$fMinCtors*Range11 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors*Body75 `cast` ...)
    $fMinCtors*Range12

$fMinCtors*Range10
$fMinCtors*Range10 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors*Body107 `cast` ...)
    $fMinCtors*Range11

$fMinCtors*Range9
$fMinCtors*Range9 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors*Body385 `cast` ...)
    $fMinCtors*Range10

$fMinCtors*Range8
$fMinCtors*Range8 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors*Body538 `cast` ...)
    $fMinCtors*Range9

$fMinCtors*Range7
$fMinCtors*Range7 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors*Body552 `cast` ...)
    $fMinCtors*Range8

$fMinCtors*Range6
$fMinCtors*Range6 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors*Body562 `cast` ...)
    $fMinCtors*Range7

$fMinCtors*Range5
$fMinCtors*Range5 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors*Body718 `cast` ...)
    $fMinCtors*Range6

$fMinCtors*Range4
$fMinCtors*Range4 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($wa78 `cast` ...)
    $fMinCtors*Range5

$fMinCtors*Range3
$fMinCtors*Range3 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors*Body1014 `cast` ...)
    $fMinCtors*Range4

$fMinCtors*Range2
$fMinCtors*Range2 =
  $wsolve_sibling_set'
    ($fMinCtors*Range13 `cast` ...)
    ($fMinCtors*Body1023 `cast` ...)
    ($fMinCtors*Range3 `cast` ...)

$fMinCtors*Range1
$fMinCtors*Range1 =
  cvAt1 ($fMinCtors*Range14 `cast` ...) $fMinCtors*Range2

$fMinCtors*Range_$cminCtors
$fMinCtors*Range_$cminCtors = \ _ -> $fMinCtors*Range1

$fMinCtors*Range
$fMinCtors*Range = $fMinCtors*Range_$cminCtors `cast` ...

$fMinCtors*Pragma19
$fMinCtors*Pragma19 =
  SIdx
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    $fMinCtors*Body925

$fMinCtors*Pragma18
$fMinCtors*Pragma18 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Pragma19

$fMinCtors*Pragma17
$fMinCtors*Pragma17 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Pragma18

$fMinCtors*Pragma16
$fMinCtors*Pragma16 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Pragma17

$fMinCtors*Pragma15
$fMinCtors*Pragma15 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Pragma16

$fMinCtors*Pragma14
$fMinCtors*Pragma14 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Pragma15

$fMinCtors*Pragma13
$fMinCtors*Pragma13 =
  \ ds_X9bS ds1_X9bU ->
    case ds_X9bS `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a5_a7Xv as_a7Xw ->
    case ds1_X9bU `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors*Body287 (a5_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8Wf @ ts3_X8Wh rb2_X98J a6_X8Hr as1_X8Ht ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8Wp @ ts4_X8Wr rb3_X98O b1_X8HA bs1_X8HC ->
        case $fMinCtors*Body287 (a6_X8Hr `cast` ...) (b1_X8HA `cast` ...)
        of _ {
          False -> False;
          True ->
            case as1_X8Ht `cast` ...
            of _ { VCons @ t5_X8Wx @ ts5_X8Wz rb4_X991 a7_X8HJ as2_X8HL ->
            case bs1_X8HC `cast` ...
            of _ { VCons @ t6_X8WH @ ts6_X8WJ rb5_X996 b2_X8HS bs2_X8HU ->
            case $fMinCtors*Body287 (a7_X8HJ `cast` ...) (b2_X8HS `cast` ...)
            of _ {
              False -> False;
              True ->
                case as2_X8HL `cast` ...
                of _ { VCons @ t7_X8WP @ ts7_X8WR rb6_X99j a8_X8I1 as3_X8I3 ->
                case bs2_X8HU `cast` ...
                of _ { VCons @ t8_X8WZ @ ts8_X8X1 rb7_X99o b3_X8Ia bs3_X8Ic ->
                case $fMinCtors*Body287 (a8_X8I1 `cast` ...) (b3_X8Ia `cast` ...)
                of _ {
                  False -> False;
                  True ->
                    case as3_X8I3 `cast` ...
                    of _ { VCons @ t9_X8X7 @ ts9_X8X9 rb8_X99B a9_X8Ij as4_X8Il ->
                    case bs3_X8Ic `cast` ...
                    of _ { VCons @ t10_X8Xh @ ts10_X8Xj rb9_X99G b4_X8Is bs4_X8Iu ->
                    case $fMinCtors*Body287 (a9_X8Ij `cast` ...) (b4_X8Is `cast` ...)
                    of _ {
                      False -> False;
                      True ->
                        case as4_X8Il `cast` ...
                        of _ { VCons @ t11_X8Xp @ ts11_X8Xr rb10_X99T a10_X8IB as5_X8ID ->
                        case bs4_X8Iu `cast` ...
                        of _ { VCons @ t12_X8Xz @ ts12_X8XB rb11_X99Y b5_X8IK bs5_X8IM ->
                        case $fMinCtors*Body287 (a10_X8IB `cast` ...) (b5_X8IK `cast` ...)
                        of _ {
                          False -> False;
                          True ->
                            case as5_X8ID `cast` ...
                            of _ { VCons @ t13_X8XH @ ts13_X8XJ rb12_X9ab a11_X8IT as6_X8IV ->
                            case bs5_X8IM `cast` ...
                            of _ { VCons @ t14_X8XR @ ts14_X8XT rb13_X9ag b6_X8J2 bs6_X8J4 ->
                            case $fMinCtors*Body287 (a11_X8IT `cast` ...) (b6_X8J2 `cast` ...)
                            of _ {
                              False -> False;
                              True ->
                                case as6_X8IV `cast` ...
                                of _ { VCons @ t15_X8XZ @ ts15_X8Y1 rb14_X9at a12_X8Jb as7_X8Jd ->
                                case bs6_X8J4 `cast` ...
                                of _ { VCons @ t16_X8Y9 @ ts16_X8Yb rb15_X9ay b7_X8Jk bs7_X8Jm ->
                                case $fMinCtors*Body287 (a12_X8Jb `cast` ...) (b7_X8Jk `cast` ...)
                                of _ {
                                  False -> False;
                                  True ->
                                    case as7_X8Jd `cast` ...
                                    of _
                                    { VCons @ t17_X8Yh @ ts17_X8Yj rb16_X9aL a13_X8Jt as8_X8Jv ->
                                    case bs7_X8Jm `cast` ...
                                    of _
                                    { VCons @ t18_X8Yr @ ts18_X8Yt rb17_X9aQ b8_X8JC bs8_X8JE ->
                                    case $fMinCtors*Body287
                                           (a13_X8Jt `cast` ...) (b8_X8JC `cast` ...)
                                    of _ {
                                      False -> False;
                                      True ->
                                        case as8_X8Jv `cast` ...
                                        of _ { VCons @ t19_X8Yz @ ts19_X8YB rb18_X9b3 a14_X8JL _ ->
                                        case bs8_X8JE `cast` ...
                                        of _ { VCons @ t20_X8YJ @ ts20_X8YL rb19_X9b8 b9_X8JU _ ->
                                        $fMinCtors*Body287
                                          (a14_X8JL `cast` ...) (b9_X8JU `cast` ...)
                                        }
                                        }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                            }
                            }
                            }
                        }
                        }
                        }
                    }
                    }
                    }
                }
                }
                }
            }
            }
            }
        }
        }
        }
    }
    }
    }

$fMinCtors*Pragma12
$fMinCtors*Pragma12 =
  VCons
    @~ <(':) * Stmt ('[] *)> ($fMinCtors*Body13 `cast` ...) ($WVNil)

$fMinCtors*Pragma11
$fMinCtors*Pragma11 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors*Body75 `cast` ...)
    $fMinCtors*Pragma12

$fMinCtors*Pragma10
$fMinCtors*Pragma10 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors*Body107 `cast` ...)
    $fMinCtors*Pragma11

$fMinCtors*Pragma9
$fMinCtors*Pragma9 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors*Body385 `cast` ...)
    $fMinCtors*Pragma10

$fMinCtors*Pragma8
$fMinCtors*Pragma8 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors*Body538 `cast` ...)
    $fMinCtors*Pragma9

$fMinCtors*Pragma7
$fMinCtors*Pragma7 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors*Body552 `cast` ...)
    $fMinCtors*Pragma8

$fMinCtors*Pragma6
$fMinCtors*Pragma6 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors*Body562 `cast` ...)
    $fMinCtors*Pragma7

$fMinCtors*Pragma5
$fMinCtors*Pragma5 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors*Body718 `cast` ...)
    $fMinCtors*Pragma6

$fMinCtors*Pragma4
$fMinCtors*Pragma4 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($wa78 `cast` ...)
    $fMinCtors*Pragma5

$fMinCtors*Pragma3
$fMinCtors*Pragma3 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors*Body1014 `cast` ...)
    $fMinCtors*Pragma4

$fMinCtors*Pragma2
$fMinCtors*Pragma2 =
  $wsolve_sibling_set'
    ($fMinCtors*Pragma13 `cast` ...)
    ($fMinCtors*Body1023 `cast` ...)
    ($fMinCtors*Pragma3 `cast` ...)

$fMinCtors*Pragma1
$fMinCtors*Pragma1 =
  cvAt1 ($fMinCtors*Pragma14 `cast` ...) $fMinCtors*Pragma2

$fMinCtors*Pragma_$cminCtors
$fMinCtors*Pragma_$cminCtors = \ _ -> $fMinCtors*Pragma1

$fMinCtors*Pragma
$fMinCtors*Pragma = $fMinCtors*Pragma_$cminCtors `cast` ...

$fMinCtors*Pat18
$fMinCtors*Pat18 =
  SIdx
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    $fMinCtors*Body73

$fMinCtors*Pat17
$fMinCtors*Pat17 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Pat18

$fMinCtors*Pat16
$fMinCtors*Pat16 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Pat17

$fMinCtors*Pat15
$fMinCtors*Pat15 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Pat16

$fMinCtors*Pat14
$fMinCtors*Pat14 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Pat15

$fMinCtors*Pat13
$fMinCtors*Pat13 =
  \ ds_X9c0 ds1_X9c2 ->
    case ds_X9c0 `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a5_a7Xv as_a7Xw ->
    case ds1_X9c2 `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors*Body287 (a5_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8Wh @ ts3_X8Wj rb2_X98L a6_X8Ht as1_X8Hv ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8Wr @ ts4_X8Wt rb3_X98Q b1_X8HC bs1_X8HE ->
        case $fMinCtors*Body287 (a6_X8Ht `cast` ...) (b1_X8HC `cast` ...)
        of _ {
          False -> False;
          True ->
            case as1_X8Hv `cast` ...
            of _ { VCons @ t5_X8Wz @ ts5_X8WB rb4_X993 a7_X8HL as2_X8HN ->
            case bs1_X8HE `cast` ...
            of _ { VCons @ t6_X8WJ @ ts6_X8WL rb5_X998 b2_X8HU bs2_X8HW ->
            case $fMinCtors*Body287 (a7_X8HL `cast` ...) (b2_X8HU `cast` ...)
            of _ {
              False -> False;
              True ->
                case as2_X8HN `cast` ...
                of _ { VCons @ t7_X8WR @ ts7_X8WT rb6_X99l a8_X8I3 as3_X8I5 ->
                case bs2_X8HW `cast` ...
                of _ { VCons @ t8_X8X1 @ ts8_X8X3 rb7_X99q b3_X8Ic bs3_X8Ie ->
                case $fMinCtors*Body287 (a8_X8I3 `cast` ...) (b3_X8Ic `cast` ...)
                of _ {
                  False -> False;
                  True ->
                    case as3_X8I5 `cast` ...
                    of _ { VCons @ t9_X8X9 @ ts9_X8Xb rb8_X99D a9_X8Il as4_X8In ->
                    case bs3_X8Ie `cast` ...
                    of _ { VCons @ t10_X8Xj @ ts10_X8Xl rb9_X99I b4_X8Iu bs4_X8Iw ->
                    case $fMinCtors*Body287 (a9_X8Il `cast` ...) (b4_X8Iu `cast` ...)
                    of _ {
                      False -> False;
                      True ->
                        case as4_X8In `cast` ...
                        of _ { VCons @ t11_X8Xr @ ts11_X8Xt rb10_X99V a10_X8ID as5_X8IF ->
                        case bs4_X8Iw `cast` ...
                        of _ { VCons @ t12_X8XB @ ts12_X8XD rb11_X9a0 b5_X8IM bs5_X8IO ->
                        case $fMinCtors*Body287 (a10_X8ID `cast` ...) (b5_X8IM `cast` ...)
                        of _ {
                          False -> False;
                          True ->
                            case as5_X8IF `cast` ...
                            of _ { VCons @ t13_X8XJ @ ts13_X8XL rb12_X9ad a11_X8IV as6_X8IX ->
                            case bs5_X8IO `cast` ...
                            of _ { VCons @ t14_X8XT @ ts14_X8XV rb13_X9ai b6_X8J4 bs6_X8J6 ->
                            case $fMinCtors*Body287 (a11_X8IV `cast` ...) (b6_X8J4 `cast` ...)
                            of _ {
                              False -> False;
                              True ->
                                case as6_X8IX `cast` ...
                                of _ { VCons @ t15_X8Y1 @ ts15_X8Y3 rb14_X9av a12_X8Jd as7_X8Jf ->
                                case bs6_X8J6 `cast` ...
                                of _ { VCons @ t16_X8Yb @ ts16_X8Yd rb15_X9aA b7_X8Jm bs7_X8Jo ->
                                case $fMinCtors*Body287 (a12_X8Jd `cast` ...) (b7_X8Jm `cast` ...)
                                of _ {
                                  False -> False;
                                  True ->
                                    case as7_X8Jf `cast` ...
                                    of _
                                    { VCons @ t17_X8Yj @ ts17_X8Yl rb16_X9aN a13_X8Jv as8_X8Jx ->
                                    case bs7_X8Jo `cast` ...
                                    of _
                                    { VCons @ t18_X8Yt @ ts18_X8Yv rb17_X9aS b8_X8JE bs8_X8JG ->
                                    case $fMinCtors*Body287
                                           (a13_X8Jv `cast` ...) (b8_X8JE `cast` ...)
                                    of _ {
                                      False -> False;
                                      True ->
                                        case as8_X8Jx `cast` ...
                                        of _ { VCons @ t19_X8YB @ ts19_X8YD rb18_X9b5 a14_X8JN _ ->
                                        case bs8_X8JG `cast` ...
                                        of _ { VCons @ t20_X8YL @ ts20_X8YN rb19_X9ba b9_X8JW _ ->
                                        $fMinCtors*Body287
                                          (a14_X8JN `cast` ...) (b9_X8JW `cast` ...)
                                        }
                                        }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                            }
                            }
                            }
                        }
                        }
                        }
                    }
                    }
                    }
                }
                }
                }
            }
            }
            }
        }
        }
        }
    }
    }
    }

$fMinCtors*Pat12
$fMinCtors*Pat12 =
  VCons
    @~ <(':) * Stmt ('[] *)> ($fMinCtors*Body13 `cast` ...) ($WVNil)

$fMinCtors*Pat11
$fMinCtors*Pat11 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors*Body75 `cast` ...)
    $fMinCtors*Pat12

$fMinCtors*Pat10
$fMinCtors*Pat10 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors*Body107 `cast` ...)
    $fMinCtors*Pat11

$fMinCtors*Pat9
$fMinCtors*Pat9 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors*Body385 `cast` ...)
    $fMinCtors*Pat10

$fMinCtors*Pat8
$fMinCtors*Pat8 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors*Body538 `cast` ...)
    $fMinCtors*Pat9

$fMinCtors*Pat7
$fMinCtors*Pat7 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors*Body552 `cast` ...)
    $fMinCtors*Pat8

$fMinCtors*Pat6
$fMinCtors*Pat6 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors*Body562 `cast` ...)
    $fMinCtors*Pat7

$fMinCtors*Pat5
$fMinCtors*Pat5 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors*Body718 `cast` ...)
    $fMinCtors*Pat6

$fMinCtors*Pat4
$fMinCtors*Pat4 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($wa78 `cast` ...)
    $fMinCtors*Pat5

$fMinCtors*Pat3
$fMinCtors*Pat3 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors*Body1014 `cast` ...)
    $fMinCtors*Pat4

$fMinCtors*Pat2
$fMinCtors*Pat2 =
  $wsolve_sibling_set'
    ($fMinCtors*Pat13 `cast` ...)
    ($fMinCtors*Body1023 `cast` ...)
    ($fMinCtors*Pat3 `cast` ...)

$fMinCtors*Pat1
$fMinCtors*Pat1 =
  cvAt1 ($fMinCtors*Pat14 `cast` ...) $fMinCtors*Pat2

$fMinCtors*Pat_$cminCtors
$fMinCtors*Pat_$cminCtors = \ _ -> $fMinCtors*Pat1

$fMinCtors*Pat
$fMinCtors*Pat = $fMinCtors*Pat_$cminCtors `cast` ...

$fMinCtors*Match17
$fMinCtors*Match17 =
  SIdx
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    $fMinCtors*Body629

$fMinCtors*Match16
$fMinCtors*Match16 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Match17

$fMinCtors*Match15
$fMinCtors*Match15 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Match16

$fMinCtors*Match14
$fMinCtors*Match14 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Match15

$fMinCtors*Match13
$fMinCtors*Match13 =
  \ ds_X9c8 ds1_X9ca ->
    case ds_X9c8 `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a5_a7Xv as_a7Xw ->
    case ds1_X9ca `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors*Body287 (a5_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8Wj @ ts3_X8Wl rb2_X98N a6_X8Hv as1_X8Hx ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8Wt @ ts4_X8Wv rb3_X98S b1_X8HE bs1_X8HG ->
        case $fMinCtors*Body287 (a6_X8Hv `cast` ...) (b1_X8HE `cast` ...)
        of _ {
          False -> False;
          True ->
            case as1_X8Hx `cast` ...
            of _ { VCons @ t5_X8WB @ ts5_X8WD rb4_Xa27 a7_X8HN as2_X8HP ->
            case bs1_X8HG `cast` ...
            of _ { VCons @ t6_X8WL @ ts6_X8WN rb5_X99a b2_X8HW bs2_X8HY ->
            case $fMinCtors*Body287 (a7_X8HN `cast` ...) (b2_X8HW `cast` ...)
            of _ {
              False -> False;
              True ->
                case as2_X8HP `cast` ...
                of _ { VCons @ t7_X8WT @ ts7_X8WV rb6_X99n a8_X8I5 as3_X8I7 ->
                case bs2_X8HY `cast` ...
                of _ { VCons @ t8_X8X3 @ ts8_X8X5 rb7_X99s b3_X8Ie bs3_X8Ig ->
                case $fMinCtors*Body287 (a8_X8I5 `cast` ...) (b3_X8Ie `cast` ...)
                of _ {
                  False -> False;
                  True ->
                    case as3_X8I7 `cast` ...
                    of _ { VCons @ t9_X8Xb @ ts9_X8Xd rb8_X99F a9_X8In as4_X8Ip ->
                    case bs3_X8Ig `cast` ...
                    of _ { VCons @ t10_X8Xl @ ts10_X8Xn rb9_X99K b4_X8Iw bs4_X8Iy ->
                    case $fMinCtors*Body287 (a9_X8In `cast` ...) (b4_X8Iw `cast` ...)
                    of _ {
                      False -> False;
                      True ->
                        case as4_X8Ip `cast` ...
                        of _ { VCons @ t11_X8Xt @ ts11_X8Xv rb10_X99X a10_X8IF as5_X8IH ->
                        case bs4_X8Iy `cast` ...
                        of _ { VCons @ t12_X8XD @ ts12_X8XF rb11_X9a2 b5_X8IO bs5_X8IQ ->
                        case $fMinCtors*Body287 (a10_X8IF `cast` ...) (b5_X8IO `cast` ...)
                        of _ {
                          False -> False;
                          True ->
                            case as5_X8IH `cast` ...
                            of _ { VCons @ t13_X8XL @ ts13_X8XN rb12_X9af a11_X8IX as6_X8IZ ->
                            case bs5_X8IQ `cast` ...
                            of _ { VCons @ t14_X8XV @ ts14_X8XX rb13_X9ak b6_X8J6 bs6_X8J8 ->
                            case $fMinCtors*Body287 (a11_X8IX `cast` ...) (b6_X8J6 `cast` ...)
                            of _ {
                              False -> False;
                              True ->
                                case as6_X8IZ `cast` ...
                                of _ { VCons @ t15_X8Y3 @ ts15_X8Y5 rb14_X9ax a12_X8Jf as7_X8Jh ->
                                case bs6_X8J8 `cast` ...
                                of _ { VCons @ t16_X8Yd @ ts16_X8Yf rb15_X9aC b7_X8Jo bs7_X8Jq ->
                                case $fMinCtors*Body287 (a12_X8Jf `cast` ...) (b7_X8Jo `cast` ...)
                                of _ {
                                  False -> False;
                                  True ->
                                    case as7_X8Jh `cast` ...
                                    of _
                                    { VCons @ t17_X8Yl @ ts17_X8Yn rb16_X9aP a13_X8Jx as8_X8Jz ->
                                    case bs7_X8Jq `cast` ...
                                    of _
                                    { VCons @ t18_X8Yv @ ts18_X8Yx rb17_X9aU b8_X8JG bs8_X8JI ->
                                    case $fMinCtors*Body287
                                           (a13_X8Jx `cast` ...) (b8_X8JG `cast` ...)
                                    of _ {
                                      False -> False;
                                      True ->
                                        case as8_X8Jz `cast` ...
                                        of _ { VCons @ t19_X8YD @ ts19_X8YF rb18_X9b7 a14_X8JP _ ->
                                        case bs8_X8JI `cast` ...
                                        of _ { VCons @ t20_X8YN @ ts20_X8YP rb19_X9bc b9_X8JY _ ->
                                        $fMinCtors*Body287
                                          (a14_X8JP `cast` ...) (b9_X8JY `cast` ...)
                                        }
                                        }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                            }
                            }
                            }
                        }
                        }
                        }
                    }
                    }
                    }
                }
                }
                }
            }
            }
            }
        }
        }
        }
    }
    }
    }

$fMinCtors*Match12
$fMinCtors*Match12 =
  VCons
    @~ <(':) * Stmt ('[] *)> ($fMinCtors*Body13 `cast` ...) ($WVNil)

$fMinCtors*Match11
$fMinCtors*Match11 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors*Body75 `cast` ...)
    $fMinCtors*Match12

$fMinCtors*Match10
$fMinCtors*Match10 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors*Body107 `cast` ...)
    $fMinCtors*Match11

$fMinCtors*Match9
$fMinCtors*Match9 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors*Body385 `cast` ...)
    $fMinCtors*Match10

$fMinCtors*Match8
$fMinCtors*Match8 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors*Body538 `cast` ...)
    $fMinCtors*Match9

$fMinCtors*Match7
$fMinCtors*Match7 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors*Body552 `cast` ...)
    $fMinCtors*Match8

$fMinCtors*Match6
$fMinCtors*Match6 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors*Body562 `cast` ...)
    $fMinCtors*Match7

$fMinCtors*Match5
$fMinCtors*Match5 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors*Body718 `cast` ...)
    $fMinCtors*Match6

$fMinCtors*Match4
$fMinCtors*Match4 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($wa78 `cast` ...)
    $fMinCtors*Match5

$fMinCtors*Match3
$fMinCtors*Match3 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors*Body1014 `cast` ...)
    $fMinCtors*Match4

$fMinCtors*Match2
$fMinCtors*Match2 =
  $wsolve_sibling_set'
    ($fMinCtors*Match13 `cast` ...)
    ($fMinCtors*Body1023 `cast` ...)
    ($fMinCtors*Match3 `cast` ...)

$fMinCtors*Match1
$fMinCtors*Match1 =
  cvAt1 ($fMinCtors*Match14 `cast` ...) $fMinCtors*Match2

$fMinCtors*Match_$cminCtors
$fMinCtors*Match_$cminCtors = \ _ -> $fMinCtors*Match1

$fMinCtors*Match
$fMinCtors*Match = $fMinCtors*Match_$cminCtors `cast` ...

$fMinCtors*Guard16
$fMinCtors*Guard16 =
  SIdx
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    $fMinCtors*Body658

$fMinCtors*Guard15
$fMinCtors*Guard15 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Guard16

$fMinCtors*Guard14
$fMinCtors*Guard14 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Guard15

$fMinCtors*Guard13
$fMinCtors*Guard13 =
  \ ds_X9cg ds1_X9ci ->
    case ds_X9cg `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a5_a7Xv as_a7Xw ->
    case ds1_X9ci `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors*Body287 (a5_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8Wl @ ts3_X8Wn rb2_X98P a6_X8Hx as1_X8Hz ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8Wv @ ts4_X8Wx rb3_X98U b1_X8HG bs1_X8HI ->
        case $fMinCtors*Body287 (a6_X8Hx `cast` ...) (b1_X8HG `cast` ...)
        of _ {
          False -> False;
          True ->
            case as1_X8Hz `cast` ...
            of _ { VCons @ t5_X8WD @ ts5_X8WF rb4_Xa2h a7_X8HP as2_X8HR ->
            case bs1_X8HI `cast` ...
            of _ { VCons @ t6_X8WN @ ts6_X8WP rb5_X99c b2_X8HY bs2_X8I0 ->
            case $fMinCtors*Body287 (a7_X8HP `cast` ...) (b2_X8HY `cast` ...)
            of _ {
              False -> False;
              True ->
                case as2_X8HR `cast` ...
                of _ { VCons @ t7_X8WV @ ts7_X8WX rb6_X99p a8_X8I7 as3_X8I9 ->
                case bs2_X8I0 `cast` ...
                of _ { VCons @ t8_X8X5 @ ts8_X8X7 rb7_X99u b3_X8Ig bs3_X8Ii ->
                case $fMinCtors*Body287 (a8_X8I7 `cast` ...) (b3_X8Ig `cast` ...)
                of _ {
                  False -> False;
                  True ->
                    case as3_X8I9 `cast` ...
                    of _ { VCons @ t9_X8Xd @ ts9_X8Xf rb8_X99H a9_X8Ip as4_X8Ir ->
                    case bs3_X8Ii `cast` ...
                    of _ { VCons @ t10_X8Xn @ ts10_X8Xp rb9_X99M b4_X8Iy bs4_X8IA ->
                    case $fMinCtors*Body287 (a9_X8Ip `cast` ...) (b4_X8Iy `cast` ...)
                    of _ {
                      False -> False;
                      True ->
                        case as4_X8Ir `cast` ...
                        of _ { VCons @ t11_X8Xv @ ts11_X8Xx rb10_X99Z a10_X8IH as5_X8IJ ->
                        case bs4_X8IA `cast` ...
                        of _ { VCons @ t12_X8XF @ ts12_X8XH rb11_Xa47 b5_X8IQ bs5_X8IS ->
                        case $fMinCtors*Body287 (a10_X8IH `cast` ...) (b5_X8IQ `cast` ...)
                        of _ {
                          False -> False;
                          True ->
                            case as5_X8IJ `cast` ...
                            of _ { VCons @ t13_X8XN @ ts13_X8XP rb12_X9ah a11_X8IZ as6_X8J1 ->
                            case bs5_X8IS `cast` ...
                            of _ { VCons @ t14_X8XX @ ts14_X8XZ rb13_X9am b6_X8J8 bs6_X8Ja ->
                            case $fMinCtors*Body287 (a11_X8IZ `cast` ...) (b6_X8J8 `cast` ...)
                            of _ {
                              False -> False;
                              True ->
                                case as6_X8J1 `cast` ...
                                of _ { VCons @ t15_X8Y5 @ ts15_X8Y7 rb14_X9az a12_X8Jh as7_X8Jj ->
                                case bs6_X8Ja `cast` ...
                                of _ { VCons @ t16_X8Yf @ ts16_X8Yh rb15_X9aE b7_X8Jq bs7_X8Js ->
                                case $fMinCtors*Body287 (a12_X8Jh `cast` ...) (b7_X8Jq `cast` ...)
                                of _ {
                                  False -> False;
                                  True ->
                                    case as7_X8Jj `cast` ...
                                    of _
                                    { VCons @ t17_X8Yn @ ts17_X8Yp rb16_X9aR a13_X8Jz as8_X8JB ->
                                    case bs7_X8Js `cast` ...
                                    of _
                                    { VCons @ t18_X8Yx @ ts18_X8Yz rb17_X9aW b8_X8JI bs8_X8JK ->
                                    case $fMinCtors*Body287
                                           (a13_X8Jz `cast` ...) (b8_X8JI `cast` ...)
                                    of _ {
                                      False -> False;
                                      True ->
                                        case as8_X8JB `cast` ...
                                        of _ { VCons @ t19_X8YF @ ts19_X8YH rb18_X9b9 a14_X8JR _ ->
                                        case bs8_X8JK `cast` ...
                                        of _ { VCons @ t20_X8YP @ ts20_X8YR rb19_X9be b9_X8K0 _ ->
                                        $fMinCtors*Body287
                                          (a14_X8JR `cast` ...) (b9_X8K0 `cast` ...)
                                        }
                                        }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                            }
                            }
                            }
                        }
                        }
                        }
                    }
                    }
                    }
                }
                }
                }
            }
            }
            }
        }
        }
        }
    }
    }
    }

$fMinCtors*Guard12
$fMinCtors*Guard12 =
  VCons
    @~ <(':) * Stmt ('[] *)> ($fMinCtors*Body13 `cast` ...) ($WVNil)

$fMinCtors*Guard11
$fMinCtors*Guard11 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors*Body75 `cast` ...)
    $fMinCtors*Guard12

$fMinCtors*Guard10
$fMinCtors*Guard10 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors*Body107 `cast` ...)
    $fMinCtors*Guard11

$fMinCtors*Guard9
$fMinCtors*Guard9 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors*Body385 `cast` ...)
    $fMinCtors*Guard10

$fMinCtors*Guard8
$fMinCtors*Guard8 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors*Body538 `cast` ...)
    $fMinCtors*Guard9

$fMinCtors*Guard7
$fMinCtors*Guard7 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors*Body552 `cast` ...)
    $fMinCtors*Guard8

$fMinCtors*Guard6
$fMinCtors*Guard6 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors*Body562 `cast` ...)
    $fMinCtors*Guard7

$fMinCtors*Guard5
$fMinCtors*Guard5 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors*Body718 `cast` ...)
    $fMinCtors*Guard6

$fMinCtors*Guard4
$fMinCtors*Guard4 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($wa78 `cast` ...)
    $fMinCtors*Guard5

$fMinCtors*Guard3
$fMinCtors*Guard3 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors*Body1014 `cast` ...)
    $fMinCtors*Guard4

$fMinCtors*Guard2
$fMinCtors*Guard2 =
  $wsolve_sibling_set'
    ($fMinCtors*Guard13 `cast` ...)
    ($fMinCtors*Body1023 `cast` ...)
    ($fMinCtors*Guard3 `cast` ...)

$fMinCtors*Guard1
$fMinCtors*Guard1 =
  cvAt1 ($fMinCtors*Guard14 `cast` ...) $fMinCtors*Guard2

$fMinCtors*Guard_$cminCtors
$fMinCtors*Guard_$cminCtors = \ _ -> $fMinCtors*Guard1

$fMinCtors*Guard
$fMinCtors*Guard = $fMinCtors*Guard_$cminCtors `cast` ...

$fMinCtors*Exp15
$fMinCtors*Exp15 =
  SIdx
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    $fMinCtors*Body48

$fMinCtors*Exp14
$fMinCtors*Exp14 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Exp15

$fMinCtors*Exp13
$fMinCtors*Exp13 =
  \ ds_X9co ds1_X9cq ->
    case ds_X9co `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a5_a7Xv as_a7Xw ->
    case ds1_X9cq `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors*Body287 (a5_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8Wn @ ts3_X8Wp rb2_X98R a6_X8Hz as1_X8HB ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8Wx @ ts4_X8Wz rb3_X98W b1_X8HI bs1_X8HK ->
        case $fMinCtors*Body287 (a6_X8Hz `cast` ...) (b1_X8HI `cast` ...)
        of _ {
          False -> False;
          True ->
            case as1_X8HB `cast` ...
            of _ { VCons @ t5_X8WF @ ts5_X8WH rb4_X999 a7_X8HR as2_X8HT ->
            case bs1_X8HK `cast` ...
            of _ { VCons @ t6_X8WP @ ts6_X8WR rb5_X99e b2_X8I0 bs2_X8I2 ->
            case $fMinCtors*Body287 (a7_X8HR `cast` ...) (b2_X8I0 `cast` ...)
            of _ {
              False -> False;
              True ->
                case as2_X8HT `cast` ...
                of _ { VCons @ t7_X8WX @ ts7_X8WZ rb6_X99r a8_X8I9 as3_X8Ib ->
                case bs2_X8I2 `cast` ...
                of _ { VCons @ t8_X8X7 @ ts8_X8X9 rb7_X99w b3_X8Ii bs3_X8Ik ->
                case $fMinCtors*Body287 (a8_X8I9 `cast` ...) (b3_X8Ii `cast` ...)
                of _ {
                  False -> False;
                  True ->
                    case as3_X8Ib `cast` ...
                    of _ { VCons @ t9_X8Xf @ ts9_X8Xh rb8_X99J a9_X8Ir as4_X8It ->
                    case bs3_X8Ik `cast` ...
                    of _ { VCons @ t10_X8Xp @ ts10_X8Xr rb9_X99O b4_X8IA bs4_X8IC ->
                    case $fMinCtors*Body287 (a9_X8Ir `cast` ...) (b4_X8IA `cast` ...)
                    of _ {
                      False -> False;
                      True ->
                        case as4_X8It `cast` ...
                        of _ { VCons @ t11_X8Xx @ ts11_X8Xz rb10_X9a1 a10_X8IJ as5_X8IL ->
                        case bs4_X8IC `cast` ...
                        of _ { VCons @ t12_X8XH @ ts12_X8XJ rb11_Xa4h b5_X8IS bs5_X8IU ->
                        case $fMinCtors*Body287 (a10_X8IJ `cast` ...) (b5_X8IS `cast` ...)
                        of _ {
                          False -> False;
                          True ->
                            case as5_X8IL `cast` ...
                            of _ { VCons @ t13_X8XP @ ts13_X8XR rb12_X9aj a11_X8J1 as6_X8J3 ->
                            case bs5_X8IU `cast` ...
                            of _ { VCons @ t14_X8XZ @ ts14_X8Y1 rb13_X9ao b6_X8Ja bs6_X8Jc ->
                            case $fMinCtors*Body287 (a11_X8J1 `cast` ...) (b6_X8Ja `cast` ...)
                            of _ {
                              False -> False;
                              True ->
                                case as6_X8J3 `cast` ...
                                of _ { VCons @ t15_X8Y7 @ ts15_X8Y9 rb14_X9aB a12_X8Jj as7_X8Jl ->
                                case bs6_X8Jc `cast` ...
                                of _ { VCons @ t16_X8Yh @ ts16_X8Yj rb15_X9aG b7_X8Js bs7_X8Ju ->
                                case $fMinCtors*Body287 (a12_X8Jj `cast` ...) (b7_X8Js `cast` ...)
                                of _ {
                                  False -> False;
                                  True ->
                                    case as7_X8Jl `cast` ...
                                    of _
                                    { VCons @ t17_X8Yp @ ts17_X8Yr rb16_X9aT a13_X8JB as8_X8JD ->
                                    case bs7_X8Ju `cast` ...
                                    of _
                                    { VCons @ t18_X8Yz @ ts18_X8YB rb17_X9aY b8_X8JK bs8_X8JM ->
                                    case $fMinCtors*Body287
                                           (a13_X8JB `cast` ...) (b8_X8JK `cast` ...)
                                    of _ {
                                      False -> False;
                                      True ->
                                        case as8_X8JD `cast` ...
                                        of _ { VCons @ t19_X8YH @ ts19_X8YJ rb18_X9bb a14_X8JT _ ->
                                        case bs8_X8JM `cast` ...
                                        of _ { VCons @ t20_X8YR @ ts20_X8YT rb19_X9bg b9_X8K2 _ ->
                                        $fMinCtors*Body287
                                          (a14_X8JT `cast` ...) (b9_X8K2 `cast` ...)
                                        }
                                        }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                            }
                            }
                            }
                        }
                        }
                        }
                    }
                    }
                    }
                }
                }
                }
            }
            }
            }
        }
        }
        }
    }
    }
    }

$fMinCtors*Exp12
$fMinCtors*Exp12 =
  VCons
    @~ <(':) * Stmt ('[] *)> ($fMinCtors*Body13 `cast` ...) ($WVNil)

$fMinCtors*Exp11
$fMinCtors*Exp11 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors*Body75 `cast` ...)
    $fMinCtors*Exp12

$fMinCtors*Exp10
$fMinCtors*Exp10 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors*Body107 `cast` ...)
    $fMinCtors*Exp11

$fMinCtors*Exp9
$fMinCtors*Exp9 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors*Body385 `cast` ...)
    $fMinCtors*Exp10

$fMinCtors*Exp8
$fMinCtors*Exp8 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors*Body538 `cast` ...)
    $fMinCtors*Exp9

$fMinCtors*Exp7
$fMinCtors*Exp7 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors*Body552 `cast` ...)
    $fMinCtors*Exp8

$fMinCtors*Exp6
$fMinCtors*Exp6 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors*Body562 `cast` ...)
    $fMinCtors*Exp7

$fMinCtors*Exp5
$fMinCtors*Exp5 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors*Body718 `cast` ...)
    $fMinCtors*Exp6

$fMinCtors*Exp4
$fMinCtors*Exp4 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($wa78 `cast` ...)
    $fMinCtors*Exp5

$fMinCtors*Exp3
$fMinCtors*Exp3 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors*Body1014 `cast` ...)
    $fMinCtors*Exp4

$fMinCtors*Exp2
$fMinCtors*Exp2 =
  $wsolve_sibling_set'
    ($fMinCtors*Exp13 `cast` ...)
    ($fMinCtors*Body1023 `cast` ...)
    ($fMinCtors*Exp3 `cast` ...)

$fMinCtors*Exp1
$fMinCtors*Exp1 =
  cvAt1 ($fMinCtors*Exp14 `cast` ...) $fMinCtors*Exp2

$fMinCtors*Exp_$cminCtors
$fMinCtors*Exp_$cminCtors = \ _ -> $fMinCtors*Exp1

$fMinCtors*Exp
$fMinCtors*Exp = $fMinCtors*Exp_$cminCtors `cast` ...

$fMinCtors*Clause13
$fMinCtors*Clause13 =
  \ ds_X9cw ds1_X9cy ->
    case ds_X9cw `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a5_a7Xv as_a7Xw ->
    case ds1_X9cy `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors*Body287 (a5_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8Wp @ ts3_X8Wr rb2_X98T a6_X8HB as1_X8HD ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8Wz @ ts4_X8WB rb3_X98Y b1_X8HK bs1_X8HM ->
        case $fMinCtors*Body287 (a6_X8HB `cast` ...) (b1_X8HK `cast` ...)
        of _ {
          False -> False;
          True ->
            case as1_X8HD `cast` ...
            of _ { VCons @ t5_X8WH @ ts5_X8WJ rb4_X99b a7_X8HT as2_X8HV ->
            case bs1_X8HM `cast` ...
            of _ { VCons @ t6_X8WR @ ts6_X8WT rb5_X99g b2_X8I2 bs2_X8I4 ->
            case $fMinCtors*Body287 (a7_X8HT `cast` ...) (b2_X8I2 `cast` ...)
            of _ {
              False -> False;
              True ->
                case as2_X8HV `cast` ...
                of _ { VCons @ t7_X8WZ @ ts7_X8X1 rb6_X99t a8_X8Ib as3_X8Id ->
                case bs2_X8I4 `cast` ...
                of _ { VCons @ t8_X8X9 @ ts8_X8Xb rb7_X99y b3_X8Ik bs3_X8Im ->
                case $fMinCtors*Body287 (a8_X8Ib `cast` ...) (b3_X8Ik `cast` ...)
                of _ {
                  False -> False;
                  True ->
                    case as3_X8Id `cast` ...
                    of _ { VCons @ t9_X8Xh @ ts9_X8Xj rb8_X99L a9_X8It as4_X8Iv ->
                    case bs3_X8Im `cast` ...
                    of _ { VCons @ t10_X8Xr @ ts10_X8Xt rb9_X99Q b4_X8IC bs4_X8IE ->
                    case $fMinCtors*Body287 (a9_X8It `cast` ...) (b4_X8IC `cast` ...)
                    of _ {
                      False -> False;
                      True ->
                        case as4_X8Iv `cast` ...
                        of _ { VCons @ t11_X8Xz @ ts11_X8XB rb10_X9a3 a10_X8IL as5_X8IN ->
                        case bs4_X8IE `cast` ...
                        of _ { VCons @ t12_X8XJ @ ts12_X8XL rb11_X9a8 b5_X8IU bs5_X8IW ->
                        case $fMinCtors*Body287 (a10_X8IL `cast` ...) (b5_X8IU `cast` ...)
                        of _ {
                          False -> False;
                          True ->
                            case as5_X8IN `cast` ...
                            of _ { VCons @ t13_X8XR @ ts13_X8XT rb12_X9al a11_X8J3 as6_X8J5 ->
                            case bs5_X8IW `cast` ...
                            of _ { VCons @ t14_X8Y1 @ ts14_X8Y3 rb13_X9aq b6_X8Jc bs6_X8Je ->
                            case $fMinCtors*Body287 (a11_X8J3 `cast` ...) (b6_X8Jc `cast` ...)
                            of _ {
                              False -> False;
                              True ->
                                case as6_X8J5 `cast` ...
                                of _ { VCons @ t15_X8Y9 @ ts15_X8Yb rb14_X9aD a12_X8Jl as7_X8Jn ->
                                case bs6_X8Je `cast` ...
                                of _ { VCons @ t16_X8Yj @ ts16_X8Yl rb15_X9aI b7_X8Ju bs7_X8Jw ->
                                case $fMinCtors*Body287 (a12_X8Jl `cast` ...) (b7_X8Ju `cast` ...)
                                of _ {
                                  False -> False;
                                  True ->
                                    case as7_X8Jn `cast` ...
                                    of _
                                    { VCons @ t17_X8Yr @ ts17_X8Yt rb16_X9aV a13_X8JD as8_X8JF ->
                                    case bs7_X8Jw `cast` ...
                                    of _
                                    { VCons @ t18_X8YB @ ts18_X8YD rb17_X9b0 b8_X8JM bs8_X8JO ->
                                    case $fMinCtors*Body287
                                           (a13_X8JD `cast` ...) (b8_X8JM `cast` ...)
                                    of _ {
                                      False -> False;
                                      True ->
                                        case as8_X8JF `cast` ...
                                        of _ { VCons @ t19_X8YJ @ ts19_X8YL rb18_X9bd a14_X8JV _ ->
                                        case bs8_X8JO `cast` ...
                                        of _ { VCons @ t20_X8YT @ ts20_X8YV rb19_X9bi b9_X8K4 _ ->
                                        $fMinCtors*Body287
                                          (a14_X8JV `cast` ...) (b9_X8K4 `cast` ...)
                                        }
                                        }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                            }
                            }
                            }
                        }
                        }
                        }
                    }
                    }
                    }
                }
                }
                }
            }
            }
            }
        }
        }
        }
    }
    }
    }

$fMinCtors*Clause12
$fMinCtors*Clause12 =
  VCons
    @~ <(':) * Stmt ('[] *)> ($fMinCtors*Body13 `cast` ...) ($WVNil)

$fMinCtors*Clause11
$fMinCtors*Clause11 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors*Body75 `cast` ...)
    $fMinCtors*Clause12

$fMinCtors*Clause10
$fMinCtors*Clause10 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors*Body107 `cast` ...)
    $fMinCtors*Clause11

$fMinCtors*Clause9
$fMinCtors*Clause9 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors*Body385 `cast` ...)
    $fMinCtors*Clause10

$fMinCtors*Clause8
$fMinCtors*Clause8 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors*Body538 `cast` ...)
    $fMinCtors*Clause9

$fMinCtors*Clause7
$fMinCtors*Clause7 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors*Body552 `cast` ...)
    $fMinCtors*Clause8

$fMinCtors*Clause6
$fMinCtors*Clause6 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors*Body562 `cast` ...)
    $fMinCtors*Clause7

$fMinCtors*Clause5
$fMinCtors*Clause5 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors*Body718 `cast` ...)
    $fMinCtors*Clause6

$fMinCtors*Clause4
$fMinCtors*Clause4 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($wa78 `cast` ...)
    $fMinCtors*Clause5

$fMinCtors*Clause3
$fMinCtors*Clause3 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors*Body1014 `cast` ...)
    $fMinCtors*Clause4

$fMinCtors*Clause2
$fMinCtors*Clause2 =
  $wsolve_sibling_set'
    ($fMinCtors*Clause13 `cast` ...)
    ($fMinCtors*Body1023 `cast` ...)
    ($fMinCtors*Clause3 `cast` ...)

$fMinCtors*Clause1
$fMinCtors*Clause1 =
  cvAt1 ($fMinCtors*Body1012 `cast` ...) $fMinCtors*Clause2

$fMinCtors*Clause_$cminCtors
$fMinCtors*Clause_$cminCtors = \ _ -> $fMinCtors*Clause1

$fMinCtors*Clause
$fMinCtors*Clause = $fMinCtors*Clause_$cminCtors `cast` ...

$fMinCtors*Body1053
$fMinCtors*Body1053 =
  \ ds_X9cE ds1_X9cG ->
    case ds_X9cE `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a5_a7Xv as_a7Xw ->
    case ds1_X9cG `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors*Body287 (a5_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8Wr @ ts3_X8Wt rb2_X98V a6_X8HD as1_X8HF ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8WB @ ts4_X8WD rb3_X990 b1_X8HM bs1_X8HO ->
        case $fMinCtors*Body287 (a6_X8HD `cast` ...) (b1_X8HM `cast` ...)
        of _ {
          False -> False;
          True ->
            case as1_X8HF `cast` ...
            of _ { VCons @ t5_X8WJ @ ts5_X8WL rb4_X99d a7_X8HV as2_X8HX ->
            case bs1_X8HO `cast` ...
            of _ { VCons @ t6_X8WT @ ts6_X8WV rb5_X99i b2_X8I4 bs2_X8I6 ->
            case $fMinCtors*Body287 (a7_X8HV `cast` ...) (b2_X8I4 `cast` ...)
            of _ {
              False -> False;
              True ->
                case as2_X8HX `cast` ...
                of _ { VCons @ t7_X8X1 @ ts7_X8X3 rb6_X99v a8_X8Id as3_X8If ->
                case bs2_X8I6 `cast` ...
                of _ { VCons @ t8_X8Xb @ ts8_X8Xd rb7_X99A b3_X8Im bs3_X8Io ->
                case $fMinCtors*Body287 (a8_X8Id `cast` ...) (b3_X8Im `cast` ...)
                of _ {
                  False -> False;
                  True ->
                    case as3_X8If `cast` ...
                    of _ { VCons @ t9_X8Xj @ ts9_X8Xl rb8_X99N a9_X8Iv as4_X8Ix ->
                    case bs3_X8Io `cast` ...
                    of _ { VCons @ t10_X8Xt @ ts10_X8Xv rb9_X99S b4_X8IE bs4_X8IG ->
                    case $fMinCtors*Body287 (a9_X8Iv `cast` ...) (b4_X8IE `cast` ...)
                    of _ {
                      False -> False;
                      True ->
                        case as4_X8Ix `cast` ...
                        of _ { VCons @ t11_X8XB @ ts11_X8XD rb10_X9a5 a10_X8IN as5_X8IP ->
                        case bs4_X8IG `cast` ...
                        of _ { VCons @ t12_X8XL @ ts12_X8XN rb11_X9aa b5_X8IW bs5_X8IY ->
                        case $fMinCtors*Body287 (a10_X8IN `cast` ...) (b5_X8IW `cast` ...)
                        of _ {
                          False -> False;
                          True ->
                            case as5_X8IP `cast` ...
                            of _ { VCons @ t13_X8XT @ ts13_X8XV rb12_X9an a11_X8J5 as6_X8J7 ->
                            case bs5_X8IY `cast` ...
                            of _ { VCons @ t14_X8Y3 @ ts14_X8Y5 rb13_X9as b6_X8Je bs6_X8Jg ->
                            case $fMinCtors*Body287 (a11_X8J5 `cast` ...) (b6_X8Je `cast` ...)
                            of _ {
                              False -> False;
                              True ->
                                case as6_X8J7 `cast` ...
                                of _ { VCons @ t15_X8Yb @ ts15_X8Yd rb14_X9aF a12_X8Jn as7_X8Jp ->
                                case bs6_X8Jg `cast` ...
                                of _ { VCons @ t16_X8Yl @ ts16_X8Yn rb15_X9aK b7_X8Jw bs7_X8Jy ->
                                case $fMinCtors*Body287 (a12_X8Jn `cast` ...) (b7_X8Jw `cast` ...)
                                of _ {
                                  False -> False;
                                  True ->
                                    case as7_X8Jp `cast` ...
                                    of _
                                    { VCons @ t17_X8Yt @ ts17_X8Yv rb16_X9aX a13_X8JF as8_X8JH ->
                                    case bs7_X8Jy `cast` ...
                                    of _
                                    { VCons @ t18_X8YD @ ts18_X8YF rb17_X9b2 b8_X8JO bs8_X8JQ ->
                                    case $fMinCtors*Body287
                                           (a13_X8JF `cast` ...) (b8_X8JO `cast` ...)
                                    of _ {
                                      False -> False;
                                      True ->
                                        case as8_X8JH `cast` ...
                                        of _ { VCons @ t19_X8YL @ ts19_X8YN rb18_X9bf a14_X8JX _ ->
                                        case bs8_X8JQ `cast` ...
                                        of _ { VCons @ t20_X8YV @ ts20_X8YX rb19_X9bk b9_X8K6 _ ->
                                        $fMinCtors*Body287
                                          (a14_X8JX `cast` ...) (b9_X8K6 `cast` ...)
                                        }
                                        }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                            }
                            }
                            }
                        }
                        }
                        }
                    }
                    }
                    }
                }
                }
                }
            }
            }
            }
        }
        }
        }
    }
    }
    }

$fMinCtors*Body12
$fMinCtors*Body12 =
  VCons
    @~ <(':) * Stmt ('[] *)> ($fMinCtors*Body13 `cast` ...) ($WVNil)

$fMinCtors*Body11
$fMinCtors*Body11 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors*Body75 `cast` ...)
    $fMinCtors*Body12

$fMinCtors*Body10
$fMinCtors*Body10 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors*Body107 `cast` ...)
    $fMinCtors*Body11

$fMinCtors*Body9
$fMinCtors*Body9 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors*Body385 `cast` ...)
    $fMinCtors*Body10

$fMinCtors*Body8
$fMinCtors*Body8 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors*Body538 `cast` ...)
    $fMinCtors*Body9

$fMinCtors*Body7
$fMinCtors*Body7 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors*Body552 `cast` ...)
    $fMinCtors*Body8

$fMinCtors*Body6
$fMinCtors*Body6 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors*Body562 `cast` ...)
    $fMinCtors*Body7

$fMinCtors*Body5
$fMinCtors*Body5 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors*Body718 `cast` ...)
    $fMinCtors*Body6

$fMinCtors*Body4
$fMinCtors*Body4 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($wa78 `cast` ...)
    $fMinCtors*Body5

$fMinCtors*Body3
$fMinCtors*Body3 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors*Body1014 `cast` ...)
    $fMinCtors*Body4

$fMinCtors*Body2
$fMinCtors*Body2 =
  $wsolve_sibling_set'
    ($fMinCtors*Body1053 `cast` ...)
    ($fMinCtors*Body1023 `cast` ...)
    ($fMinCtors*Body3 `cast` ...)

$fMinCtors*Body1
$fMinCtors*Body1 = cvAt1 (($WZIdx) `cast` ...) $fMinCtors*Body2

$fMinCtors*Body_$cminCtors
$fMinCtors*Body_$cminCtors = \ _ -> $fMinCtors*Body1

$fMinCtors*Body
$fMinCtors*Body = $fMinCtors*Body_$cminCtors `cast` ...

$fMinCtors*Dec14
$fMinCtors*Dec14 =
  SIdx
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    $fMinCtors*Body57

$fMinCtors*Dec13
$fMinCtors*Dec13 =
  \ ds_X9cM ds1_X9cO ->
    case ds_X9cM `cast` ...
    of _ { VCons @ t1_a8cm @ ts1_a8cn rb_d8oO a5_a7Xv as_a7Xw ->
    case ds1_X9cO `cast` ...
    of _ { VCons @ t2_a8cp @ ts2_a8cq rb1_d8oM b_a7Xx bs_a7Xy ->
    case $fMinCtors*Body287 (a5_a7Xv `cast` ...) (b_a7Xx `cast` ...)
    of _ {
      False -> False;
      True ->
        case as_a7Xw `cast` ...
        of _ { VCons @ t3_X8Wt @ ts3_X8Wv rb2_X98X a6_X8HF as1_X8HH ->
        case bs_a7Xy `cast` ...
        of _ { VCons @ t4_X8WD @ ts4_X8WF rb3_X992 b1_X8HO bs1_X8HQ ->
        case $fMinCtors*Body287 (a6_X8HF `cast` ...) (b1_X8HO `cast` ...)
        of _ {
          False -> False;
          True ->
            case as1_X8HH `cast` ...
            of _ { VCons @ t5_X8WL @ ts5_X8WN rb4_X99f a7_X8HX as2_X8HZ ->
            case bs1_X8HQ `cast` ...
            of _ { VCons @ t6_X8WV @ ts6_X8WX rb5_X99k b2_X8I6 bs2_X8I8 ->
            case $fMinCtors*Body287 (a7_X8HX `cast` ...) (b2_X8I6 `cast` ...)
            of _ {
              False -> False;
              True ->
                case as2_X8HZ `cast` ...
                of _ { VCons @ t7_X8X3 @ ts7_X8X5 rb6_X99x a8_X8If as3_X8Ih ->
                case bs2_X8I8 `cast` ...
                of _ { VCons @ t8_X8Xd @ ts8_X8Xf rb7_X99C b3_X8Io bs3_X8Iq ->
                case $fMinCtors*Body287 (a8_X8If `cast` ...) (b3_X8Io `cast` ...)
                of _ {
                  False -> False;
                  True ->
                    case as3_X8Ih `cast` ...
                    of _ { VCons @ t9_X8Xl @ ts9_X8Xn rb8_Xa41 a9_X8Ix as4_X8Iz ->
                    case bs3_X8Iq `cast` ...
                    of _ { VCons @ t10_X8Xv @ ts10_X8Xx rb9_X99U b4_X8IG bs4_X8II ->
                    case $fMinCtors*Body287 (a9_X8Ix `cast` ...) (b4_X8IG `cast` ...)
                    of _ {
                      False -> False;
                      True ->
                        case as4_X8Iz `cast` ...
                        of _ { VCons @ t11_X8XD @ ts11_X8XF rb10_X9a7 a10_X8IP as5_X8IR ->
                        case bs4_X8II `cast` ...
                        of _ { VCons @ t12_X8XN @ ts12_X8XP rb11_X9ac b5_X8IY bs5_X8J0 ->
                        case $fMinCtors*Body287 (a10_X8IP `cast` ...) (b5_X8IY `cast` ...)
                        of _ {
                          False -> False;
                          True ->
                            case as5_X8IR `cast` ...
                            of _ { VCons @ t13_X8XV @ ts13_X8XX rb12_X9ap a11_X8J7 as6_X8J9 ->
                            case bs5_X8J0 `cast` ...
                            of _ { VCons @ t14_X8Y5 @ ts14_X8Y7 rb13_X9au b6_X8Jg bs6_X8Ji ->
                            case $fMinCtors*Body287 (a11_X8J7 `cast` ...) (b6_X8Jg `cast` ...)
                            of _ {
                              False -> False;
                              True ->
                                case as6_X8J9 `cast` ...
                                of _ { VCons @ t15_X8Yd @ ts15_X8Yf rb14_X9aH a12_X8Jp as7_X8Jr ->
                                case bs6_X8Ji `cast` ...
                                of _ { VCons @ t16_X8Yn @ ts16_X8Yp rb15_X9aM b7_X8Jy bs7_X8JA ->
                                case $fMinCtors*Body287 (a12_X8Jp `cast` ...) (b7_X8Jy `cast` ...)
                                of _ {
                                  False -> False;
                                  True ->
                                    case as7_X8Jr `cast` ...
                                    of _
                                    { VCons @ t17_X8Yv @ ts17_X8Yx rb16_X9aZ a13_X8JH as8_X8JJ ->
                                    case bs7_X8JA `cast` ...
                                    of _
                                    { VCons @ t18_X8YF @ ts18_X8YH rb17_X9b4 b8_X8JQ bs8_X8JS ->
                                    case $fMinCtors*Body287
                                           (a13_X8JH `cast` ...) (b8_X8JQ `cast` ...)
                                    of _ {
                                      False -> False;
                                      True ->
                                        case as8_X8JJ `cast` ...
                                        of _ { VCons @ t19_X8YN @ ts19_X8YP rb18_X9bh a14_X8JZ _ ->
                                        case bs8_X8JS `cast` ...
                                        of _ { VCons @ t20_X8YX @ ts20_X8YZ rb19_X9bm b9_X8K8 _ ->
                                        $fMinCtors*Body287
                                          (a14_X8JZ `cast` ...) (b9_X8K8 `cast` ...)
                                        }
                                        }
                                    }
                                    }
                                    }
                                }
                                }
                                }
                            }
                            }
                            }
                        }
                        }
                        }
                    }
                    }
                    }
                }
                }
                }
            }
            }
            }
        }
        }
        }
    }
    }
    }

$fMinCtors*Dec12
$fMinCtors*Dec12 =
  VCons
    @~ <(':) * Stmt ('[] *)> ($fMinCtors*Body13 `cast` ...) ($WVNil)

$fMinCtors*Dec11
$fMinCtors*Dec11 =
  VCons
    @~ <(':) * Range ((':) * Stmt ('[] *))>
    ($fMinCtors*Body75 `cast` ...)
    $fMinCtors*Dec12

$fMinCtors*Dec10
$fMinCtors*Dec10 =
  VCons
    @~ <(':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))>
    ($fMinCtors*Body107 `cast` ...)
    $fMinCtors*Dec11

$fMinCtors*Dec9
$fMinCtors*Dec9 =
  VCons
    @~ <(':)
          * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))>
    ($fMinCtors*Body385 `cast` ...)
    $fMinCtors*Dec10

$fMinCtors*Dec8
$fMinCtors*Dec8 =
  VCons
    @~ <(':)
          *
          Match
          ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))>
    ($fMinCtors*Body538 `cast` ...)
    $fMinCtors*Dec9

$fMinCtors*Dec7
$fMinCtors*Dec7 =
  VCons
    @~ <(':)
          *
          Guard
          ((':)
             *
             Match
             ((':) * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))>
    ($fMinCtors*Body552 `cast` ...)
    $fMinCtors*Dec8

$fMinCtors*Dec6
$fMinCtors*Dec6 =
  VCons
    @~ <(':)
          *
          Exp
          ((':)
             *
             Guard
             ((':)
                *
                Match
                ((':)
                   * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))>
    ($fMinCtors*Body562 `cast` ...)
    $fMinCtors*Dec7

$fMinCtors*Dec5
$fMinCtors*Dec5 =
  VCons
    @~ <(':)
          *
          Dec
          ((':)
             *
             Exp
             ((':)
                *
                Guard
                ((':)
                   *
                   Match
                   ((':)
                      * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))>
    ($fMinCtors*Body718 `cast` ...)
    $fMinCtors*Dec6

$fMinCtors*Dec4
$fMinCtors*Dec4 =
  VCons
    @~ <(':)
          *
          Clause
          ((':)
             *
             Dec
             ((':)
                *
                Exp
                ((':)
                   *
                   Guard
                   ((':)
                      *
                      Match
                      ((':)
                         * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *)))))))))>
    ($wa78 `cast` ...)
    $fMinCtors*Dec5

$fMinCtors*Dec3
$fMinCtors*Dec3 =
  VCons
    @~ <(':)
          *
          Body
          ((':)
             *
             Clause
             ((':)
                *
                Dec
                ((':)
                   *
                   Exp
                   ((':)
                      *
                      Guard
                      ((':)
                         *
                         Match
                         ((':)
                            * Pat ((':) * Pragma ((':) * Range ((':) * Stmt ('[] *))))))))))>
    ($fMinCtors*Body1014 `cast` ...)
    $fMinCtors*Dec4

$fMinCtors*Dec2
$fMinCtors*Dec2 =
  $wsolve_sibling_set'
    ($fMinCtors*Dec13 `cast` ...)
    ($fMinCtors*Body1023 `cast` ...)
    ($fMinCtors*Dec3 `cast` ...)

$fMinCtors*Dec1
$fMinCtors*Dec1 =
  cvAt1 ($fMinCtors*Dec14 `cast` ...) $fMinCtors*Dec2

$fMinCtors*Dec_$cminCtors
$fMinCtors*Dec_$cminCtors = \ _ -> $fMinCtors*Dec1

$fMinCtors*Dec
$fMinCtors*Dec = $fMinCtors*Dec_$cminCtors `cast` ...



